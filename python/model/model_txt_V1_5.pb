node {
  name: "input_state"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 7
        }
        dim {
          size: 6
        }
        dim {
          size: 12
        }
      }
    }
  }
}
node {
  name: "input_training"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "conv/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\014\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.049875468015670776
      }
    }
  }
}
node {
  name: "conv/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.049875468015670776
      }
    }
  }
}
node {
  name: "conv/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv/kernel/Initializer/random_uniform/max"
  input: "conv/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
}
node {
  name: "conv/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
}
node {
  name: "conv/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv/kernel/Initializer/random_uniform/mul"
  input: "conv/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
}
node {
  name: "conv/kernel"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 12
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv/kernel"
    }
  }
}
node {
  name: "conv/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv/kernel"
  device: "/device:GPU:0"
}
node {
  name: "conv/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv/kernel"
  input: "conv/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv/kernel"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv/Conv2D"
  op: "Conv2D"
  input: "input_state"
  input: "conv/Conv2D/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_bn/gamma"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_bn/gamma"
    }
  }
}
node {
  name: "conv_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_bn/gamma"
  device: "/device:GPU:0"
}
node {
  name: "conv_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_bn/gamma"
  input: "conv_bn/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_bn/gamma"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_bn/beta"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_bn/beta"
    }
  }
}
node {
  name: "conv_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_bn/beta"
  device: "/device:GPU:0"
}
node {
  name: "conv_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_bn/beta"
  input: "conv_bn/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_bn/beta"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_bn/moving_mean"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_bn/moving_mean"
    }
  }
}
node {
  name: "conv_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_bn/moving_mean"
  device: "/device:GPU:0"
}
node {
  name: "conv_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_bn/moving_mean"
  input: "conv_bn/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_bn/moving_variance"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_bn/moving_variance"
    }
  }
}
node {
  name: "conv_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_bn/moving_variance"
  device: "/device:GPU:0"
}
node {
  name: "conv_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_bn/moving_variance"
  input: "conv_bn/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/cond/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "conv_bn/cond"
  op: "If"
  input: "conv_bn/cond/Squeeze"
  input: "conv_bn/gamma"
  input: "conv_bn/beta"
  input: "conv_bn/moving_mean"
  input: "conv_bn/moving_variance"
  input: "conv/Conv2D"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
        i: 2
        i: 3
        i: 4
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "conv_bn_cond_false_33"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 7
          }
        }
        shape {
          dim {
            size: 7
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "conv_bn_cond_true_32"
      }
    }
  }
}
node {
  name: "conv_bn/cond/Identity"
  op: "Identity"
  input: "conv_bn/cond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/cond/Identity_1"
  op: "Identity"
  input: "conv_bn/cond:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/cond/Identity_2"
  op: "Identity"
  input: "conv_bn/cond:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/cond/Identity_3"
  op: "Identity"
  input: "conv_bn/cond:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "conv_bn/cond/Identity_4"
  op: "Identity"
  input: "conv_bn/cond:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "conv_bn/cond/Identity_5"
  op: "Identity"
  input: "conv_bn/cond:5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "conv_bn/cond/Identity_6"
  op: "Identity"
  input: "conv_bn/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "conv_bn/cond/Identity_7"
  op: "Identity"
  input: "conv_bn/cond:7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "conv_bn/cond/Identity_8"
  op: "Identity"
  input: "conv_bn/cond:8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "conv_bn/cond/Identity_9"
  op: "Identity"
  input: "conv_bn/cond:9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "conv_bn/cond_1/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "conv_bn/cond_1"
  op: "StatelessIf"
  input: "conv_bn/cond_1/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "conv_bn_cond_1_false_102"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "conv_bn_cond_1_true_101"
      }
    }
  }
}
node {
  name: "conv_bn/cond_1/Identity"
  op: "Identity"
  input: "conv_bn/cond_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/AssignMovingAvg/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_bn/AssignMovingAvg/sub"
  op: "Sub"
  input: "conv_bn/AssignMovingAvg/sub/x"
  input: "conv_bn/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_bn/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "conv_bn/AssignMovingAvg/ReadVariableOp"
  input: "conv_bn/cond/Identity_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_bn/AssignMovingAvg/mul"
  op: "Mul"
  input: "conv_bn/AssignMovingAvg/sub_1"
  input: "conv_bn/AssignMovingAvg/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_bn/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_bn/moving_mean"
  input: "conv_bn/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_bn/moving_mean"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/AssignMovingAvg_1/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_bn/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "conv_bn/AssignMovingAvg_1/sub/x"
  input: "conv_bn/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_bn/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "conv_bn/AssignMovingAvg_1/ReadVariableOp"
  input: "conv_bn/cond/Identity_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_bn/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "conv_bn/AssignMovingAvg_1/sub_1"
  input: "conv_bn/AssignMovingAvg_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_bn/moving_variance"
  input: "conv_bn/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_bn/moving_variance"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu"
  op: "Relu"
  input: "conv_bn/cond/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res0a_branch2a/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res0a_branch2a/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "res0a_branch2a/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "res0a_branch2a/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "res0a_branch2a/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "res0a_branch2a/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "res0a_branch2a/kernel/Initializer/random_uniform/max"
  input: "res0a_branch2a/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res0a_branch2a/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "res0a_branch2a/kernel/Initializer/random_uniform/RandomUniform"
  input: "res0a_branch2a/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res0a_branch2a/kernel/Initializer/random_uniform"
  op: "Add"
  input: "res0a_branch2a/kernel/Initializer/random_uniform/mul"
  input: "res0a_branch2a/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res0a_branch2a/kernel"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res0a_branch2a/kernel"
    }
  }
}
node {
  name: "res0a_branch2a/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res0a_branch2a/kernel"
  device: "/device:GPU:0"
}
node {
  name: "res0a_branch2a/kernel/Assign"
  op: "AssignVariableOp"
  input: "res0a_branch2a/kernel"
  input: "res0a_branch2a/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res0a_branch2a/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res0a_branch2a/kernel"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res0a_branch2a/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "res0a_branch2a/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res0a_branch2a/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res0a_branch2a/Conv2D"
  op: "Conv2D"
  input: "Relu"
  input: "res0a_branch2a/Conv2D/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bn0a_branch2a/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn0a_branch2a/gamma"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn0a_branch2a/gamma"
    }
  }
}
node {
  name: "bn0a_branch2a/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn0a_branch2a/gamma"
  device: "/device:GPU:0"
}
node {
  name: "bn0a_branch2a/gamma/Assign"
  op: "AssignVariableOp"
  input: "bn0a_branch2a/gamma"
  input: "bn0a_branch2a/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2a/gamma"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn0a_branch2a/beta"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn0a_branch2a/beta"
    }
  }
}
node {
  name: "bn0a_branch2a/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn0a_branch2a/beta"
  device: "/device:GPU:0"
}
node {
  name: "bn0a_branch2a/beta/Assign"
  op: "AssignVariableOp"
  input: "bn0a_branch2a/beta"
  input: "bn0a_branch2a/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2a/beta"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn0a_branch2a/moving_mean"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn0a_branch2a/moving_mean"
    }
  }
}
node {
  name: "bn0a_branch2a/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn0a_branch2a/moving_mean"
  device: "/device:GPU:0"
}
node {
  name: "bn0a_branch2a/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bn0a_branch2a/moving_mean"
  input: "bn0a_branch2a/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2a/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn0a_branch2a/moving_variance"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn0a_branch2a/moving_variance"
    }
  }
}
node {
  name: "bn0a_branch2a/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn0a_branch2a/moving_variance"
  device: "/device:GPU:0"
}
node {
  name: "bn0a_branch2a/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bn0a_branch2a/moving_variance"
  input: "bn0a_branch2a/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2a/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/cond/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn0a_branch2a/cond"
  op: "If"
  input: "bn0a_branch2a/cond/Squeeze"
  input: "bn0a_branch2a/gamma"
  input: "bn0a_branch2a/beta"
  input: "bn0a_branch2a/moving_mean"
  input: "bn0a_branch2a/moving_variance"
  input: "res0a_branch2a/Conv2D"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
        i: 2
        i: 3
        i: 4
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn0a_branch2a_cond_false_153"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn0a_branch2a_cond_true_152"
      }
    }
  }
}
node {
  name: "bn0a_branch2a/cond/Identity"
  op: "Identity"
  input: "bn0a_branch2a/cond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/cond/Identity_1"
  op: "Identity"
  input: "bn0a_branch2a/cond:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/cond/Identity_2"
  op: "Identity"
  input: "bn0a_branch2a/cond:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/cond/Identity_3"
  op: "Identity"
  input: "bn0a_branch2a/cond:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn0a_branch2a/cond/Identity_4"
  op: "Identity"
  input: "bn0a_branch2a/cond:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn0a_branch2a/cond/Identity_5"
  op: "Identity"
  input: "bn0a_branch2a/cond:5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn0a_branch2a/cond/Identity_6"
  op: "Identity"
  input: "bn0a_branch2a/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn0a_branch2a/cond/Identity_7"
  op: "Identity"
  input: "bn0a_branch2a/cond:7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn0a_branch2a/cond/Identity_8"
  op: "Identity"
  input: "bn0a_branch2a/cond:8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn0a_branch2a/cond/Identity_9"
  op: "Identity"
  input: "bn0a_branch2a/cond:9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn0a_branch2a/cond_1/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn0a_branch2a/cond_1"
  op: "StatelessIf"
  input: "bn0a_branch2a/cond_1/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn0a_branch2a_cond_1_false_222"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn0a_branch2a_cond_1_true_221"
      }
    }
  }
}
node {
  name: "bn0a_branch2a/cond_1/Identity"
  op: "Identity"
  input: "bn0a_branch2a/cond_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/AssignMovingAvg/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn0a_branch2a/AssignMovingAvg/sub"
  op: "Sub"
  input: "bn0a_branch2a/AssignMovingAvg/sub/x"
  input: "bn0a_branch2a/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/moving_mean"
      }
    }
  }
}
node {
  name: "bn0a_branch2a/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2a/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "bn0a_branch2a/AssignMovingAvg/ReadVariableOp"
  input: "bn0a_branch2a/cond/Identity_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/moving_mean"
      }
    }
  }
}
node {
  name: "bn0a_branch2a/AssignMovingAvg/mul"
  op: "Mul"
  input: "bn0a_branch2a/AssignMovingAvg/sub_1"
  input: "bn0a_branch2a/AssignMovingAvg/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/moving_mean"
      }
    }
  }
}
node {
  name: "bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn0a_branch2a/moving_mean"
  input: "bn0a_branch2a/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn0a_branch2a/moving_mean"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/AssignMovingAvg_1/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn0a_branch2a/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "bn0a_branch2a/AssignMovingAvg_1/sub/x"
  input: "bn0a_branch2a/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/moving_variance"
      }
    }
  }
}
node {
  name: "bn0a_branch2a/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2a/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "bn0a_branch2a/AssignMovingAvg_1/ReadVariableOp"
  input: "bn0a_branch2a/cond/Identity_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/moving_variance"
      }
    }
  }
}
node {
  name: "bn0a_branch2a/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "bn0a_branch2a/AssignMovingAvg_1/sub_1"
  input: "bn0a_branch2a/AssignMovingAvg_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/moving_variance"
      }
    }
  }
}
node {
  name: "bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn0a_branch2a/moving_variance"
  input: "bn0a_branch2a/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn0a_branch2a/moving_variance"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_1"
  op: "Relu"
  input: "bn0a_branch2a/cond/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res0a_branch2b/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res0a_branch2b/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "res0a_branch2b/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "res0a_branch2b/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "res0a_branch2b/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "res0a_branch2b/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "res0a_branch2b/kernel/Initializer/random_uniform/max"
  input: "res0a_branch2b/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res0a_branch2b/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "res0a_branch2b/kernel/Initializer/random_uniform/RandomUniform"
  input: "res0a_branch2b/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res0a_branch2b/kernel/Initializer/random_uniform"
  op: "Add"
  input: "res0a_branch2b/kernel/Initializer/random_uniform/mul"
  input: "res0a_branch2b/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res0a_branch2b/kernel"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res0a_branch2b/kernel"
    }
  }
}
node {
  name: "res0a_branch2b/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res0a_branch2b/kernel"
  device: "/device:GPU:0"
}
node {
  name: "res0a_branch2b/kernel/Assign"
  op: "AssignVariableOp"
  input: "res0a_branch2b/kernel"
  input: "res0a_branch2b/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res0a_branch2b/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res0a_branch2b/kernel"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res0a_branch2b/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "res0a_branch2b/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res0a_branch2b/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res0a_branch2b/Conv2D"
  op: "Conv2D"
  input: "Relu_1"
  input: "res0a_branch2b/Conv2D/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bn0a_branch2b/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn0a_branch2b/gamma"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn0a_branch2b/gamma"
    }
  }
}
node {
  name: "bn0a_branch2b/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn0a_branch2b/gamma"
  device: "/device:GPU:0"
}
node {
  name: "bn0a_branch2b/gamma/Assign"
  op: "AssignVariableOp"
  input: "bn0a_branch2b/gamma"
  input: "bn0a_branch2b/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2b/gamma"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn0a_branch2b/beta"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn0a_branch2b/beta"
    }
  }
}
node {
  name: "bn0a_branch2b/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn0a_branch2b/beta"
  device: "/device:GPU:0"
}
node {
  name: "bn0a_branch2b/beta/Assign"
  op: "AssignVariableOp"
  input: "bn0a_branch2b/beta"
  input: "bn0a_branch2b/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2b/beta"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn0a_branch2b/moving_mean"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn0a_branch2b/moving_mean"
    }
  }
}
node {
  name: "bn0a_branch2b/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn0a_branch2b/moving_mean"
  device: "/device:GPU:0"
}
node {
  name: "bn0a_branch2b/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bn0a_branch2b/moving_mean"
  input: "bn0a_branch2b/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2b/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn0a_branch2b/moving_variance"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn0a_branch2b/moving_variance"
    }
  }
}
node {
  name: "bn0a_branch2b/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn0a_branch2b/moving_variance"
  device: "/device:GPU:0"
}
node {
  name: "bn0a_branch2b/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bn0a_branch2b/moving_variance"
  input: "bn0a_branch2b/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2b/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/cond/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn0a_branch2b/cond"
  op: "If"
  input: "bn0a_branch2b/cond/Squeeze"
  input: "bn0a_branch2b/gamma"
  input: "bn0a_branch2b/beta"
  input: "bn0a_branch2b/moving_mean"
  input: "bn0a_branch2b/moving_variance"
  input: "res0a_branch2b/Conv2D"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
        i: 2
        i: 3
        i: 4
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn0a_branch2b_cond_false_273"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn0a_branch2b_cond_true_272"
      }
    }
  }
}
node {
  name: "bn0a_branch2b/cond/Identity"
  op: "Identity"
  input: "bn0a_branch2b/cond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/cond/Identity_1"
  op: "Identity"
  input: "bn0a_branch2b/cond:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/cond/Identity_2"
  op: "Identity"
  input: "bn0a_branch2b/cond:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/cond/Identity_3"
  op: "Identity"
  input: "bn0a_branch2b/cond:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn0a_branch2b/cond/Identity_4"
  op: "Identity"
  input: "bn0a_branch2b/cond:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn0a_branch2b/cond/Identity_5"
  op: "Identity"
  input: "bn0a_branch2b/cond:5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn0a_branch2b/cond/Identity_6"
  op: "Identity"
  input: "bn0a_branch2b/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn0a_branch2b/cond/Identity_7"
  op: "Identity"
  input: "bn0a_branch2b/cond:7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn0a_branch2b/cond/Identity_8"
  op: "Identity"
  input: "bn0a_branch2b/cond:8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn0a_branch2b/cond/Identity_9"
  op: "Identity"
  input: "bn0a_branch2b/cond:9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn0a_branch2b/cond_1/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn0a_branch2b/cond_1"
  op: "StatelessIf"
  input: "bn0a_branch2b/cond_1/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn0a_branch2b_cond_1_false_342"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn0a_branch2b_cond_1_true_341"
      }
    }
  }
}
node {
  name: "bn0a_branch2b/cond_1/Identity"
  op: "Identity"
  input: "bn0a_branch2b/cond_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/AssignMovingAvg/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn0a_branch2b/AssignMovingAvg/sub"
  op: "Sub"
  input: "bn0a_branch2b/AssignMovingAvg/sub/x"
  input: "bn0a_branch2b/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/moving_mean"
      }
    }
  }
}
node {
  name: "bn0a_branch2b/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2b/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "bn0a_branch2b/AssignMovingAvg/ReadVariableOp"
  input: "bn0a_branch2b/cond/Identity_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/moving_mean"
      }
    }
  }
}
node {
  name: "bn0a_branch2b/AssignMovingAvg/mul"
  op: "Mul"
  input: "bn0a_branch2b/AssignMovingAvg/sub_1"
  input: "bn0a_branch2b/AssignMovingAvg/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/moving_mean"
      }
    }
  }
}
node {
  name: "bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn0a_branch2b/moving_mean"
  input: "bn0a_branch2b/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn0a_branch2b/moving_mean"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/AssignMovingAvg_1/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn0a_branch2b/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "bn0a_branch2b/AssignMovingAvg_1/sub/x"
  input: "bn0a_branch2b/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/moving_variance"
      }
    }
  }
}
node {
  name: "bn0a_branch2b/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2b/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "bn0a_branch2b/AssignMovingAvg_1/ReadVariableOp"
  input: "bn0a_branch2b/cond/Identity_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/moving_variance"
      }
    }
  }
}
node {
  name: "bn0a_branch2b/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "bn0a_branch2b/AssignMovingAvg_1/sub_1"
  input: "bn0a_branch2b/AssignMovingAvg_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/moving_variance"
      }
    }
  }
}
node {
  name: "bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn0a_branch2b/moving_variance"
  input: "bn0a_branch2b/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn0a_branch2b/moving_variance"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add"
  op: "Add"
  input: "bn0a_branch2b/cond/Identity"
  input: "Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_2"
  op: "Relu"
  input: "Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res1b_branch2a/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res1b_branch2a/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "res1b_branch2a/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "res1b_branch2a/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "res1b_branch2a/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "res1b_branch2a/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "res1b_branch2a/kernel/Initializer/random_uniform/max"
  input: "res1b_branch2a/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res1b_branch2a/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "res1b_branch2a/kernel/Initializer/random_uniform/RandomUniform"
  input: "res1b_branch2a/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res1b_branch2a/kernel/Initializer/random_uniform"
  op: "Add"
  input: "res1b_branch2a/kernel/Initializer/random_uniform/mul"
  input: "res1b_branch2a/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res1b_branch2a/kernel"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res1b_branch2a/kernel"
    }
  }
}
node {
  name: "res1b_branch2a/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res1b_branch2a/kernel"
  device: "/device:GPU:0"
}
node {
  name: "res1b_branch2a/kernel/Assign"
  op: "AssignVariableOp"
  input: "res1b_branch2a/kernel"
  input: "res1b_branch2a/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res1b_branch2a/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res1b_branch2a/kernel"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res1b_branch2a/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "res1b_branch2a/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res1b_branch2a/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res1b_branch2a/Conv2D"
  op: "Conv2D"
  input: "Relu_2"
  input: "res1b_branch2a/Conv2D/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bn1b_branch2a/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn1b_branch2a/gamma"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn1b_branch2a/gamma"
    }
  }
}
node {
  name: "bn1b_branch2a/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn1b_branch2a/gamma"
  device: "/device:GPU:0"
}
node {
  name: "bn1b_branch2a/gamma/Assign"
  op: "AssignVariableOp"
  input: "bn1b_branch2a/gamma"
  input: "bn1b_branch2a/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2a/gamma"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn1b_branch2a/beta"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn1b_branch2a/beta"
    }
  }
}
node {
  name: "bn1b_branch2a/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn1b_branch2a/beta"
  device: "/device:GPU:0"
}
node {
  name: "bn1b_branch2a/beta/Assign"
  op: "AssignVariableOp"
  input: "bn1b_branch2a/beta"
  input: "bn1b_branch2a/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2a/beta"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn1b_branch2a/moving_mean"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn1b_branch2a/moving_mean"
    }
  }
}
node {
  name: "bn1b_branch2a/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn1b_branch2a/moving_mean"
  device: "/device:GPU:0"
}
node {
  name: "bn1b_branch2a/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bn1b_branch2a/moving_mean"
  input: "bn1b_branch2a/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2a/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn1b_branch2a/moving_variance"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn1b_branch2a/moving_variance"
    }
  }
}
node {
  name: "bn1b_branch2a/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn1b_branch2a/moving_variance"
  device: "/device:GPU:0"
}
node {
  name: "bn1b_branch2a/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bn1b_branch2a/moving_variance"
  input: "bn1b_branch2a/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2a/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/cond/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn1b_branch2a/cond"
  op: "If"
  input: "bn1b_branch2a/cond/Squeeze"
  input: "bn1b_branch2a/gamma"
  input: "bn1b_branch2a/beta"
  input: "bn1b_branch2a/moving_mean"
  input: "bn1b_branch2a/moving_variance"
  input: "res1b_branch2a/Conv2D"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
        i: 2
        i: 3
        i: 4
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn1b_branch2a_cond_false_394"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn1b_branch2a_cond_true_393"
      }
    }
  }
}
node {
  name: "bn1b_branch2a/cond/Identity"
  op: "Identity"
  input: "bn1b_branch2a/cond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/cond/Identity_1"
  op: "Identity"
  input: "bn1b_branch2a/cond:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/cond/Identity_2"
  op: "Identity"
  input: "bn1b_branch2a/cond:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/cond/Identity_3"
  op: "Identity"
  input: "bn1b_branch2a/cond:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn1b_branch2a/cond/Identity_4"
  op: "Identity"
  input: "bn1b_branch2a/cond:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn1b_branch2a/cond/Identity_5"
  op: "Identity"
  input: "bn1b_branch2a/cond:5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn1b_branch2a/cond/Identity_6"
  op: "Identity"
  input: "bn1b_branch2a/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn1b_branch2a/cond/Identity_7"
  op: "Identity"
  input: "bn1b_branch2a/cond:7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn1b_branch2a/cond/Identity_8"
  op: "Identity"
  input: "bn1b_branch2a/cond:8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn1b_branch2a/cond/Identity_9"
  op: "Identity"
  input: "bn1b_branch2a/cond:9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn1b_branch2a/cond_1/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn1b_branch2a/cond_1"
  op: "StatelessIf"
  input: "bn1b_branch2a/cond_1/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn1b_branch2a_cond_1_false_463"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn1b_branch2a_cond_1_true_462"
      }
    }
  }
}
node {
  name: "bn1b_branch2a/cond_1/Identity"
  op: "Identity"
  input: "bn1b_branch2a/cond_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/AssignMovingAvg/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn1b_branch2a/AssignMovingAvg/sub"
  op: "Sub"
  input: "bn1b_branch2a/AssignMovingAvg/sub/x"
  input: "bn1b_branch2a/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/moving_mean"
      }
    }
  }
}
node {
  name: "bn1b_branch2a/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2a/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "bn1b_branch2a/AssignMovingAvg/ReadVariableOp"
  input: "bn1b_branch2a/cond/Identity_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/moving_mean"
      }
    }
  }
}
node {
  name: "bn1b_branch2a/AssignMovingAvg/mul"
  op: "Mul"
  input: "bn1b_branch2a/AssignMovingAvg/sub_1"
  input: "bn1b_branch2a/AssignMovingAvg/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/moving_mean"
      }
    }
  }
}
node {
  name: "bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn1b_branch2a/moving_mean"
  input: "bn1b_branch2a/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn1b_branch2a/moving_mean"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/AssignMovingAvg_1/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn1b_branch2a/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "bn1b_branch2a/AssignMovingAvg_1/sub/x"
  input: "bn1b_branch2a/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/moving_variance"
      }
    }
  }
}
node {
  name: "bn1b_branch2a/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2a/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "bn1b_branch2a/AssignMovingAvg_1/ReadVariableOp"
  input: "bn1b_branch2a/cond/Identity_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/moving_variance"
      }
    }
  }
}
node {
  name: "bn1b_branch2a/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "bn1b_branch2a/AssignMovingAvg_1/sub_1"
  input: "bn1b_branch2a/AssignMovingAvg_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/moving_variance"
      }
    }
  }
}
node {
  name: "bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn1b_branch2a/moving_variance"
  input: "bn1b_branch2a/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn1b_branch2a/moving_variance"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_3"
  op: "Relu"
  input: "bn1b_branch2a/cond/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res1b_branch2b/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res1b_branch2b/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "res1b_branch2b/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "res1b_branch2b/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "res1b_branch2b/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "res1b_branch2b/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "res1b_branch2b/kernel/Initializer/random_uniform/max"
  input: "res1b_branch2b/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res1b_branch2b/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "res1b_branch2b/kernel/Initializer/random_uniform/RandomUniform"
  input: "res1b_branch2b/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res1b_branch2b/kernel/Initializer/random_uniform"
  op: "Add"
  input: "res1b_branch2b/kernel/Initializer/random_uniform/mul"
  input: "res1b_branch2b/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res1b_branch2b/kernel"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res1b_branch2b/kernel"
    }
  }
}
node {
  name: "res1b_branch2b/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res1b_branch2b/kernel"
  device: "/device:GPU:0"
}
node {
  name: "res1b_branch2b/kernel/Assign"
  op: "AssignVariableOp"
  input: "res1b_branch2b/kernel"
  input: "res1b_branch2b/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res1b_branch2b/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res1b_branch2b/kernel"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res1b_branch2b/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "res1b_branch2b/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res1b_branch2b/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res1b_branch2b/Conv2D"
  op: "Conv2D"
  input: "Relu_3"
  input: "res1b_branch2b/Conv2D/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bn1b_branch2b/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn1b_branch2b/gamma"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn1b_branch2b/gamma"
    }
  }
}
node {
  name: "bn1b_branch2b/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn1b_branch2b/gamma"
  device: "/device:GPU:0"
}
node {
  name: "bn1b_branch2b/gamma/Assign"
  op: "AssignVariableOp"
  input: "bn1b_branch2b/gamma"
  input: "bn1b_branch2b/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2b/gamma"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn1b_branch2b/beta"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn1b_branch2b/beta"
    }
  }
}
node {
  name: "bn1b_branch2b/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn1b_branch2b/beta"
  device: "/device:GPU:0"
}
node {
  name: "bn1b_branch2b/beta/Assign"
  op: "AssignVariableOp"
  input: "bn1b_branch2b/beta"
  input: "bn1b_branch2b/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2b/beta"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn1b_branch2b/moving_mean"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn1b_branch2b/moving_mean"
    }
  }
}
node {
  name: "bn1b_branch2b/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn1b_branch2b/moving_mean"
  device: "/device:GPU:0"
}
node {
  name: "bn1b_branch2b/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bn1b_branch2b/moving_mean"
  input: "bn1b_branch2b/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2b/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn1b_branch2b/moving_variance"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn1b_branch2b/moving_variance"
    }
  }
}
node {
  name: "bn1b_branch2b/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn1b_branch2b/moving_variance"
  device: "/device:GPU:0"
}
node {
  name: "bn1b_branch2b/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bn1b_branch2b/moving_variance"
  input: "bn1b_branch2b/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2b/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/cond/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn1b_branch2b/cond"
  op: "If"
  input: "bn1b_branch2b/cond/Squeeze"
  input: "bn1b_branch2b/gamma"
  input: "bn1b_branch2b/beta"
  input: "bn1b_branch2b/moving_mean"
  input: "bn1b_branch2b/moving_variance"
  input: "res1b_branch2b/Conv2D"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
        i: 2
        i: 3
        i: 4
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn1b_branch2b_cond_false_514"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn1b_branch2b_cond_true_513"
      }
    }
  }
}
node {
  name: "bn1b_branch2b/cond/Identity"
  op: "Identity"
  input: "bn1b_branch2b/cond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/cond/Identity_1"
  op: "Identity"
  input: "bn1b_branch2b/cond:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/cond/Identity_2"
  op: "Identity"
  input: "bn1b_branch2b/cond:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/cond/Identity_3"
  op: "Identity"
  input: "bn1b_branch2b/cond:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn1b_branch2b/cond/Identity_4"
  op: "Identity"
  input: "bn1b_branch2b/cond:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn1b_branch2b/cond/Identity_5"
  op: "Identity"
  input: "bn1b_branch2b/cond:5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn1b_branch2b/cond/Identity_6"
  op: "Identity"
  input: "bn1b_branch2b/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn1b_branch2b/cond/Identity_7"
  op: "Identity"
  input: "bn1b_branch2b/cond:7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn1b_branch2b/cond/Identity_8"
  op: "Identity"
  input: "bn1b_branch2b/cond:8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn1b_branch2b/cond/Identity_9"
  op: "Identity"
  input: "bn1b_branch2b/cond:9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn1b_branch2b/cond_1/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn1b_branch2b/cond_1"
  op: "StatelessIf"
  input: "bn1b_branch2b/cond_1/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn1b_branch2b_cond_1_false_583"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn1b_branch2b_cond_1_true_582"
      }
    }
  }
}
node {
  name: "bn1b_branch2b/cond_1/Identity"
  op: "Identity"
  input: "bn1b_branch2b/cond_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/AssignMovingAvg/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn1b_branch2b/AssignMovingAvg/sub"
  op: "Sub"
  input: "bn1b_branch2b/AssignMovingAvg/sub/x"
  input: "bn1b_branch2b/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/moving_mean"
      }
    }
  }
}
node {
  name: "bn1b_branch2b/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2b/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "bn1b_branch2b/AssignMovingAvg/ReadVariableOp"
  input: "bn1b_branch2b/cond/Identity_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/moving_mean"
      }
    }
  }
}
node {
  name: "bn1b_branch2b/AssignMovingAvg/mul"
  op: "Mul"
  input: "bn1b_branch2b/AssignMovingAvg/sub_1"
  input: "bn1b_branch2b/AssignMovingAvg/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/moving_mean"
      }
    }
  }
}
node {
  name: "bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn1b_branch2b/moving_mean"
  input: "bn1b_branch2b/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn1b_branch2b/moving_mean"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/AssignMovingAvg_1/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn1b_branch2b/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "bn1b_branch2b/AssignMovingAvg_1/sub/x"
  input: "bn1b_branch2b/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/moving_variance"
      }
    }
  }
}
node {
  name: "bn1b_branch2b/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2b/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "bn1b_branch2b/AssignMovingAvg_1/ReadVariableOp"
  input: "bn1b_branch2b/cond/Identity_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/moving_variance"
      }
    }
  }
}
node {
  name: "bn1b_branch2b/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "bn1b_branch2b/AssignMovingAvg_1/sub_1"
  input: "bn1b_branch2b/AssignMovingAvg_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/moving_variance"
      }
    }
  }
}
node {
  name: "bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn1b_branch2b/moving_variance"
  input: "bn1b_branch2b/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn1b_branch2b/moving_variance"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add_1"
  op: "Add"
  input: "bn1b_branch2b/cond/Identity"
  input: "Relu_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_4"
  op: "Relu"
  input: "Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res2c_branch2a/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res2c_branch2a/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "res2c_branch2a/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "res2c_branch2a/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "res2c_branch2a/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "res2c_branch2a/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "res2c_branch2a/kernel/Initializer/random_uniform/max"
  input: "res2c_branch2a/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res2c_branch2a/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "res2c_branch2a/kernel/Initializer/random_uniform/RandomUniform"
  input: "res2c_branch2a/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res2c_branch2a/kernel/Initializer/random_uniform"
  op: "Add"
  input: "res2c_branch2a/kernel/Initializer/random_uniform/mul"
  input: "res2c_branch2a/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res2c_branch2a/kernel"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res2c_branch2a/kernel"
    }
  }
}
node {
  name: "res2c_branch2a/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res2c_branch2a/kernel"
  device: "/device:GPU:0"
}
node {
  name: "res2c_branch2a/kernel/Assign"
  op: "AssignVariableOp"
  input: "res2c_branch2a/kernel"
  input: "res2c_branch2a/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res2c_branch2a/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res2c_branch2a/kernel"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res2c_branch2a/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "res2c_branch2a/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res2c_branch2a/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res2c_branch2a/Conv2D"
  op: "Conv2D"
  input: "Relu_4"
  input: "res2c_branch2a/Conv2D/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bn2c_branch2a/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn2c_branch2a/gamma"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn2c_branch2a/gamma"
    }
  }
}
node {
  name: "bn2c_branch2a/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn2c_branch2a/gamma"
  device: "/device:GPU:0"
}
node {
  name: "bn2c_branch2a/gamma/Assign"
  op: "AssignVariableOp"
  input: "bn2c_branch2a/gamma"
  input: "bn2c_branch2a/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2a/gamma"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn2c_branch2a/beta"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn2c_branch2a/beta"
    }
  }
}
node {
  name: "bn2c_branch2a/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn2c_branch2a/beta"
  device: "/device:GPU:0"
}
node {
  name: "bn2c_branch2a/beta/Assign"
  op: "AssignVariableOp"
  input: "bn2c_branch2a/beta"
  input: "bn2c_branch2a/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2a/beta"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn2c_branch2a/moving_mean"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn2c_branch2a/moving_mean"
    }
  }
}
node {
  name: "bn2c_branch2a/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn2c_branch2a/moving_mean"
  device: "/device:GPU:0"
}
node {
  name: "bn2c_branch2a/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bn2c_branch2a/moving_mean"
  input: "bn2c_branch2a/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2a/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn2c_branch2a/moving_variance"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn2c_branch2a/moving_variance"
    }
  }
}
node {
  name: "bn2c_branch2a/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn2c_branch2a/moving_variance"
  device: "/device:GPU:0"
}
node {
  name: "bn2c_branch2a/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bn2c_branch2a/moving_variance"
  input: "bn2c_branch2a/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2a/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/cond/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn2c_branch2a/cond"
  op: "If"
  input: "bn2c_branch2a/cond/Squeeze"
  input: "bn2c_branch2a/gamma"
  input: "bn2c_branch2a/beta"
  input: "bn2c_branch2a/moving_mean"
  input: "bn2c_branch2a/moving_variance"
  input: "res2c_branch2a/Conv2D"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
        i: 2
        i: 3
        i: 4
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn2c_branch2a_cond_false_635"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn2c_branch2a_cond_true_634"
      }
    }
  }
}
node {
  name: "bn2c_branch2a/cond/Identity"
  op: "Identity"
  input: "bn2c_branch2a/cond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/cond/Identity_1"
  op: "Identity"
  input: "bn2c_branch2a/cond:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/cond/Identity_2"
  op: "Identity"
  input: "bn2c_branch2a/cond:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/cond/Identity_3"
  op: "Identity"
  input: "bn2c_branch2a/cond:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn2c_branch2a/cond/Identity_4"
  op: "Identity"
  input: "bn2c_branch2a/cond:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn2c_branch2a/cond/Identity_5"
  op: "Identity"
  input: "bn2c_branch2a/cond:5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn2c_branch2a/cond/Identity_6"
  op: "Identity"
  input: "bn2c_branch2a/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn2c_branch2a/cond/Identity_7"
  op: "Identity"
  input: "bn2c_branch2a/cond:7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn2c_branch2a/cond/Identity_8"
  op: "Identity"
  input: "bn2c_branch2a/cond:8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn2c_branch2a/cond/Identity_9"
  op: "Identity"
  input: "bn2c_branch2a/cond:9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn2c_branch2a/cond_1/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn2c_branch2a/cond_1"
  op: "StatelessIf"
  input: "bn2c_branch2a/cond_1/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn2c_branch2a_cond_1_false_704"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn2c_branch2a_cond_1_true_703"
      }
    }
  }
}
node {
  name: "bn2c_branch2a/cond_1/Identity"
  op: "Identity"
  input: "bn2c_branch2a/cond_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/AssignMovingAvg/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn2c_branch2a/AssignMovingAvg/sub"
  op: "Sub"
  input: "bn2c_branch2a/AssignMovingAvg/sub/x"
  input: "bn2c_branch2a/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/moving_mean"
      }
    }
  }
}
node {
  name: "bn2c_branch2a/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2a/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "bn2c_branch2a/AssignMovingAvg/ReadVariableOp"
  input: "bn2c_branch2a/cond/Identity_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/moving_mean"
      }
    }
  }
}
node {
  name: "bn2c_branch2a/AssignMovingAvg/mul"
  op: "Mul"
  input: "bn2c_branch2a/AssignMovingAvg/sub_1"
  input: "bn2c_branch2a/AssignMovingAvg/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/moving_mean"
      }
    }
  }
}
node {
  name: "bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn2c_branch2a/moving_mean"
  input: "bn2c_branch2a/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn2c_branch2a/moving_mean"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/AssignMovingAvg_1/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn2c_branch2a/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "bn2c_branch2a/AssignMovingAvg_1/sub/x"
  input: "bn2c_branch2a/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/moving_variance"
      }
    }
  }
}
node {
  name: "bn2c_branch2a/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2a/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "bn2c_branch2a/AssignMovingAvg_1/ReadVariableOp"
  input: "bn2c_branch2a/cond/Identity_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/moving_variance"
      }
    }
  }
}
node {
  name: "bn2c_branch2a/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "bn2c_branch2a/AssignMovingAvg_1/sub_1"
  input: "bn2c_branch2a/AssignMovingAvg_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/moving_variance"
      }
    }
  }
}
node {
  name: "bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn2c_branch2a/moving_variance"
  input: "bn2c_branch2a/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn2c_branch2a/moving_variance"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_5"
  op: "Relu"
  input: "bn2c_branch2a/cond/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res2c_branch2b/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res2c_branch2b/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "res2c_branch2b/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "res2c_branch2b/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "res2c_branch2b/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "res2c_branch2b/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "res2c_branch2b/kernel/Initializer/random_uniform/max"
  input: "res2c_branch2b/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res2c_branch2b/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "res2c_branch2b/kernel/Initializer/random_uniform/RandomUniform"
  input: "res2c_branch2b/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res2c_branch2b/kernel/Initializer/random_uniform"
  op: "Add"
  input: "res2c_branch2b/kernel/Initializer/random_uniform/mul"
  input: "res2c_branch2b/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res2c_branch2b/kernel"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res2c_branch2b/kernel"
    }
  }
}
node {
  name: "res2c_branch2b/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res2c_branch2b/kernel"
  device: "/device:GPU:0"
}
node {
  name: "res2c_branch2b/kernel/Assign"
  op: "AssignVariableOp"
  input: "res2c_branch2b/kernel"
  input: "res2c_branch2b/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res2c_branch2b/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res2c_branch2b/kernel"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res2c_branch2b/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "res2c_branch2b/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res2c_branch2b/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res2c_branch2b/Conv2D"
  op: "Conv2D"
  input: "Relu_5"
  input: "res2c_branch2b/Conv2D/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bn2c_branch2b/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn2c_branch2b/gamma"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn2c_branch2b/gamma"
    }
  }
}
node {
  name: "bn2c_branch2b/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn2c_branch2b/gamma"
  device: "/device:GPU:0"
}
node {
  name: "bn2c_branch2b/gamma/Assign"
  op: "AssignVariableOp"
  input: "bn2c_branch2b/gamma"
  input: "bn2c_branch2b/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2b/gamma"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn2c_branch2b/beta"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn2c_branch2b/beta"
    }
  }
}
node {
  name: "bn2c_branch2b/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn2c_branch2b/beta"
  device: "/device:GPU:0"
}
node {
  name: "bn2c_branch2b/beta/Assign"
  op: "AssignVariableOp"
  input: "bn2c_branch2b/beta"
  input: "bn2c_branch2b/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2b/beta"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn2c_branch2b/moving_mean"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn2c_branch2b/moving_mean"
    }
  }
}
node {
  name: "bn2c_branch2b/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn2c_branch2b/moving_mean"
  device: "/device:GPU:0"
}
node {
  name: "bn2c_branch2b/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bn2c_branch2b/moving_mean"
  input: "bn2c_branch2b/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2b/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn2c_branch2b/moving_variance"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn2c_branch2b/moving_variance"
    }
  }
}
node {
  name: "bn2c_branch2b/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn2c_branch2b/moving_variance"
  device: "/device:GPU:0"
}
node {
  name: "bn2c_branch2b/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bn2c_branch2b/moving_variance"
  input: "bn2c_branch2b/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2b/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/cond/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn2c_branch2b/cond"
  op: "If"
  input: "bn2c_branch2b/cond/Squeeze"
  input: "bn2c_branch2b/gamma"
  input: "bn2c_branch2b/beta"
  input: "bn2c_branch2b/moving_mean"
  input: "bn2c_branch2b/moving_variance"
  input: "res2c_branch2b/Conv2D"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
        i: 2
        i: 3
        i: 4
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn2c_branch2b_cond_false_755"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn2c_branch2b_cond_true_754"
      }
    }
  }
}
node {
  name: "bn2c_branch2b/cond/Identity"
  op: "Identity"
  input: "bn2c_branch2b/cond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/cond/Identity_1"
  op: "Identity"
  input: "bn2c_branch2b/cond:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/cond/Identity_2"
  op: "Identity"
  input: "bn2c_branch2b/cond:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/cond/Identity_3"
  op: "Identity"
  input: "bn2c_branch2b/cond:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn2c_branch2b/cond/Identity_4"
  op: "Identity"
  input: "bn2c_branch2b/cond:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn2c_branch2b/cond/Identity_5"
  op: "Identity"
  input: "bn2c_branch2b/cond:5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn2c_branch2b/cond/Identity_6"
  op: "Identity"
  input: "bn2c_branch2b/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn2c_branch2b/cond/Identity_7"
  op: "Identity"
  input: "bn2c_branch2b/cond:7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn2c_branch2b/cond/Identity_8"
  op: "Identity"
  input: "bn2c_branch2b/cond:8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn2c_branch2b/cond/Identity_9"
  op: "Identity"
  input: "bn2c_branch2b/cond:9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn2c_branch2b/cond_1/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn2c_branch2b/cond_1"
  op: "StatelessIf"
  input: "bn2c_branch2b/cond_1/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn2c_branch2b_cond_1_false_824"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn2c_branch2b_cond_1_true_823"
      }
    }
  }
}
node {
  name: "bn2c_branch2b/cond_1/Identity"
  op: "Identity"
  input: "bn2c_branch2b/cond_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/AssignMovingAvg/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn2c_branch2b/AssignMovingAvg/sub"
  op: "Sub"
  input: "bn2c_branch2b/AssignMovingAvg/sub/x"
  input: "bn2c_branch2b/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/moving_mean"
      }
    }
  }
}
node {
  name: "bn2c_branch2b/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2b/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "bn2c_branch2b/AssignMovingAvg/ReadVariableOp"
  input: "bn2c_branch2b/cond/Identity_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/moving_mean"
      }
    }
  }
}
node {
  name: "bn2c_branch2b/AssignMovingAvg/mul"
  op: "Mul"
  input: "bn2c_branch2b/AssignMovingAvg/sub_1"
  input: "bn2c_branch2b/AssignMovingAvg/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/moving_mean"
      }
    }
  }
}
node {
  name: "bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn2c_branch2b/moving_mean"
  input: "bn2c_branch2b/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn2c_branch2b/moving_mean"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/AssignMovingAvg_1/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn2c_branch2b/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "bn2c_branch2b/AssignMovingAvg_1/sub/x"
  input: "bn2c_branch2b/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/moving_variance"
      }
    }
  }
}
node {
  name: "bn2c_branch2b/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2b/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "bn2c_branch2b/AssignMovingAvg_1/ReadVariableOp"
  input: "bn2c_branch2b/cond/Identity_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/moving_variance"
      }
    }
  }
}
node {
  name: "bn2c_branch2b/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "bn2c_branch2b/AssignMovingAvg_1/sub_1"
  input: "bn2c_branch2b/AssignMovingAvg_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/moving_variance"
      }
    }
  }
}
node {
  name: "bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn2c_branch2b/moving_variance"
  input: "bn2c_branch2b/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn2c_branch2b/moving_variance"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add_2"
  op: "Add"
  input: "bn2c_branch2b/cond/Identity"
  input: "Relu_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_6"
  op: "Relu"
  input: "Add_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res3d_branch2a/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res3d_branch2a/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "res3d_branch2a/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "res3d_branch2a/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "res3d_branch2a/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "res3d_branch2a/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "res3d_branch2a/kernel/Initializer/random_uniform/max"
  input: "res3d_branch2a/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res3d_branch2a/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "res3d_branch2a/kernel/Initializer/random_uniform/RandomUniform"
  input: "res3d_branch2a/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res3d_branch2a/kernel/Initializer/random_uniform"
  op: "Add"
  input: "res3d_branch2a/kernel/Initializer/random_uniform/mul"
  input: "res3d_branch2a/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res3d_branch2a/kernel"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res3d_branch2a/kernel"
    }
  }
}
node {
  name: "res3d_branch2a/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res3d_branch2a/kernel"
  device: "/device:GPU:0"
}
node {
  name: "res3d_branch2a/kernel/Assign"
  op: "AssignVariableOp"
  input: "res3d_branch2a/kernel"
  input: "res3d_branch2a/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res3d_branch2a/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res3d_branch2a/kernel"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res3d_branch2a/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "res3d_branch2a/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res3d_branch2a/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res3d_branch2a/Conv2D"
  op: "Conv2D"
  input: "Relu_6"
  input: "res3d_branch2a/Conv2D/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bn3d_branch2a/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn3d_branch2a/gamma"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn3d_branch2a/gamma"
    }
  }
}
node {
  name: "bn3d_branch2a/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn3d_branch2a/gamma"
  device: "/device:GPU:0"
}
node {
  name: "bn3d_branch2a/gamma/Assign"
  op: "AssignVariableOp"
  input: "bn3d_branch2a/gamma"
  input: "bn3d_branch2a/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2a/gamma"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn3d_branch2a/beta"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn3d_branch2a/beta"
    }
  }
}
node {
  name: "bn3d_branch2a/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn3d_branch2a/beta"
  device: "/device:GPU:0"
}
node {
  name: "bn3d_branch2a/beta/Assign"
  op: "AssignVariableOp"
  input: "bn3d_branch2a/beta"
  input: "bn3d_branch2a/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2a/beta"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn3d_branch2a/moving_mean"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn3d_branch2a/moving_mean"
    }
  }
}
node {
  name: "bn3d_branch2a/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn3d_branch2a/moving_mean"
  device: "/device:GPU:0"
}
node {
  name: "bn3d_branch2a/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bn3d_branch2a/moving_mean"
  input: "bn3d_branch2a/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2a/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn3d_branch2a/moving_variance"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn3d_branch2a/moving_variance"
    }
  }
}
node {
  name: "bn3d_branch2a/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn3d_branch2a/moving_variance"
  device: "/device:GPU:0"
}
node {
  name: "bn3d_branch2a/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bn3d_branch2a/moving_variance"
  input: "bn3d_branch2a/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2a/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/cond/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn3d_branch2a/cond"
  op: "If"
  input: "bn3d_branch2a/cond/Squeeze"
  input: "bn3d_branch2a/gamma"
  input: "bn3d_branch2a/beta"
  input: "bn3d_branch2a/moving_mean"
  input: "bn3d_branch2a/moving_variance"
  input: "res3d_branch2a/Conv2D"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
        i: 2
        i: 3
        i: 4
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn3d_branch2a_cond_false_876"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn3d_branch2a_cond_true_875"
      }
    }
  }
}
node {
  name: "bn3d_branch2a/cond/Identity"
  op: "Identity"
  input: "bn3d_branch2a/cond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/cond/Identity_1"
  op: "Identity"
  input: "bn3d_branch2a/cond:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/cond/Identity_2"
  op: "Identity"
  input: "bn3d_branch2a/cond:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/cond/Identity_3"
  op: "Identity"
  input: "bn3d_branch2a/cond:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn3d_branch2a/cond/Identity_4"
  op: "Identity"
  input: "bn3d_branch2a/cond:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn3d_branch2a/cond/Identity_5"
  op: "Identity"
  input: "bn3d_branch2a/cond:5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn3d_branch2a/cond/Identity_6"
  op: "Identity"
  input: "bn3d_branch2a/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn3d_branch2a/cond/Identity_7"
  op: "Identity"
  input: "bn3d_branch2a/cond:7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn3d_branch2a/cond/Identity_8"
  op: "Identity"
  input: "bn3d_branch2a/cond:8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn3d_branch2a/cond/Identity_9"
  op: "Identity"
  input: "bn3d_branch2a/cond:9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn3d_branch2a/cond_1/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn3d_branch2a/cond_1"
  op: "StatelessIf"
  input: "bn3d_branch2a/cond_1/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn3d_branch2a_cond_1_false_945"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn3d_branch2a_cond_1_true_944"
      }
    }
  }
}
node {
  name: "bn3d_branch2a/cond_1/Identity"
  op: "Identity"
  input: "bn3d_branch2a/cond_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/AssignMovingAvg/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn3d_branch2a/AssignMovingAvg/sub"
  op: "Sub"
  input: "bn3d_branch2a/AssignMovingAvg/sub/x"
  input: "bn3d_branch2a/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/moving_mean"
      }
    }
  }
}
node {
  name: "bn3d_branch2a/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2a/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "bn3d_branch2a/AssignMovingAvg/ReadVariableOp"
  input: "bn3d_branch2a/cond/Identity_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/moving_mean"
      }
    }
  }
}
node {
  name: "bn3d_branch2a/AssignMovingAvg/mul"
  op: "Mul"
  input: "bn3d_branch2a/AssignMovingAvg/sub_1"
  input: "bn3d_branch2a/AssignMovingAvg/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/moving_mean"
      }
    }
  }
}
node {
  name: "bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn3d_branch2a/moving_mean"
  input: "bn3d_branch2a/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn3d_branch2a/moving_mean"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/AssignMovingAvg_1/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn3d_branch2a/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "bn3d_branch2a/AssignMovingAvg_1/sub/x"
  input: "bn3d_branch2a/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/moving_variance"
      }
    }
  }
}
node {
  name: "bn3d_branch2a/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2a/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "bn3d_branch2a/AssignMovingAvg_1/ReadVariableOp"
  input: "bn3d_branch2a/cond/Identity_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/moving_variance"
      }
    }
  }
}
node {
  name: "bn3d_branch2a/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "bn3d_branch2a/AssignMovingAvg_1/sub_1"
  input: "bn3d_branch2a/AssignMovingAvg_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/moving_variance"
      }
    }
  }
}
node {
  name: "bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn3d_branch2a/moving_variance"
  input: "bn3d_branch2a/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn3d_branch2a/moving_variance"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_7"
  op: "Relu"
  input: "bn3d_branch2a/cond/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res3d_branch2b/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res3d_branch2b/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "res3d_branch2b/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "res3d_branch2b/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "res3d_branch2b/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "res3d_branch2b/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "res3d_branch2b/kernel/Initializer/random_uniform/max"
  input: "res3d_branch2b/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res3d_branch2b/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "res3d_branch2b/kernel/Initializer/random_uniform/RandomUniform"
  input: "res3d_branch2b/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res3d_branch2b/kernel/Initializer/random_uniform"
  op: "Add"
  input: "res3d_branch2b/kernel/Initializer/random_uniform/mul"
  input: "res3d_branch2b/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res3d_branch2b/kernel"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res3d_branch2b/kernel"
    }
  }
}
node {
  name: "res3d_branch2b/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res3d_branch2b/kernel"
  device: "/device:GPU:0"
}
node {
  name: "res3d_branch2b/kernel/Assign"
  op: "AssignVariableOp"
  input: "res3d_branch2b/kernel"
  input: "res3d_branch2b/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res3d_branch2b/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res3d_branch2b/kernel"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res3d_branch2b/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "res3d_branch2b/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res3d_branch2b/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res3d_branch2b/Conv2D"
  op: "Conv2D"
  input: "Relu_7"
  input: "res3d_branch2b/Conv2D/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bn3d_branch2b/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn3d_branch2b/gamma"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn3d_branch2b/gamma"
    }
  }
}
node {
  name: "bn3d_branch2b/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn3d_branch2b/gamma"
  device: "/device:GPU:0"
}
node {
  name: "bn3d_branch2b/gamma/Assign"
  op: "AssignVariableOp"
  input: "bn3d_branch2b/gamma"
  input: "bn3d_branch2b/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2b/gamma"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn3d_branch2b/beta"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn3d_branch2b/beta"
    }
  }
}
node {
  name: "bn3d_branch2b/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn3d_branch2b/beta"
  device: "/device:GPU:0"
}
node {
  name: "bn3d_branch2b/beta/Assign"
  op: "AssignVariableOp"
  input: "bn3d_branch2b/beta"
  input: "bn3d_branch2b/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2b/beta"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn3d_branch2b/moving_mean"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn3d_branch2b/moving_mean"
    }
  }
}
node {
  name: "bn3d_branch2b/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn3d_branch2b/moving_mean"
  device: "/device:GPU:0"
}
node {
  name: "bn3d_branch2b/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bn3d_branch2b/moving_mean"
  input: "bn3d_branch2b/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2b/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn3d_branch2b/moving_variance"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn3d_branch2b/moving_variance"
    }
  }
}
node {
  name: "bn3d_branch2b/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn3d_branch2b/moving_variance"
  device: "/device:GPU:0"
}
node {
  name: "bn3d_branch2b/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bn3d_branch2b/moving_variance"
  input: "bn3d_branch2b/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2b/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/cond/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn3d_branch2b/cond"
  op: "If"
  input: "bn3d_branch2b/cond/Squeeze"
  input: "bn3d_branch2b/gamma"
  input: "bn3d_branch2b/beta"
  input: "bn3d_branch2b/moving_mean"
  input: "bn3d_branch2b/moving_variance"
  input: "res3d_branch2b/Conv2D"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
        i: 2
        i: 3
        i: 4
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn3d_branch2b_cond_false_996"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn3d_branch2b_cond_true_995"
      }
    }
  }
}
node {
  name: "bn3d_branch2b/cond/Identity"
  op: "Identity"
  input: "bn3d_branch2b/cond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/cond/Identity_1"
  op: "Identity"
  input: "bn3d_branch2b/cond:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/cond/Identity_2"
  op: "Identity"
  input: "bn3d_branch2b/cond:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/cond/Identity_3"
  op: "Identity"
  input: "bn3d_branch2b/cond:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn3d_branch2b/cond/Identity_4"
  op: "Identity"
  input: "bn3d_branch2b/cond:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn3d_branch2b/cond/Identity_5"
  op: "Identity"
  input: "bn3d_branch2b/cond:5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn3d_branch2b/cond/Identity_6"
  op: "Identity"
  input: "bn3d_branch2b/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn3d_branch2b/cond/Identity_7"
  op: "Identity"
  input: "bn3d_branch2b/cond:7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn3d_branch2b/cond/Identity_8"
  op: "Identity"
  input: "bn3d_branch2b/cond:8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn3d_branch2b/cond/Identity_9"
  op: "Identity"
  input: "bn3d_branch2b/cond:9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn3d_branch2b/cond_1/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn3d_branch2b/cond_1"
  op: "StatelessIf"
  input: "bn3d_branch2b/cond_1/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn3d_branch2b_cond_1_false_1065"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn3d_branch2b_cond_1_true_1064"
      }
    }
  }
}
node {
  name: "bn3d_branch2b/cond_1/Identity"
  op: "Identity"
  input: "bn3d_branch2b/cond_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/AssignMovingAvg/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn3d_branch2b/AssignMovingAvg/sub"
  op: "Sub"
  input: "bn3d_branch2b/AssignMovingAvg/sub/x"
  input: "bn3d_branch2b/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/moving_mean"
      }
    }
  }
}
node {
  name: "bn3d_branch2b/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2b/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "bn3d_branch2b/AssignMovingAvg/ReadVariableOp"
  input: "bn3d_branch2b/cond/Identity_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/moving_mean"
      }
    }
  }
}
node {
  name: "bn3d_branch2b/AssignMovingAvg/mul"
  op: "Mul"
  input: "bn3d_branch2b/AssignMovingAvg/sub_1"
  input: "bn3d_branch2b/AssignMovingAvg/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/moving_mean"
      }
    }
  }
}
node {
  name: "bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn3d_branch2b/moving_mean"
  input: "bn3d_branch2b/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn3d_branch2b/moving_mean"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/AssignMovingAvg_1/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn3d_branch2b/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "bn3d_branch2b/AssignMovingAvg_1/sub/x"
  input: "bn3d_branch2b/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/moving_variance"
      }
    }
  }
}
node {
  name: "bn3d_branch2b/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2b/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "bn3d_branch2b/AssignMovingAvg_1/ReadVariableOp"
  input: "bn3d_branch2b/cond/Identity_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/moving_variance"
      }
    }
  }
}
node {
  name: "bn3d_branch2b/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "bn3d_branch2b/AssignMovingAvg_1/sub_1"
  input: "bn3d_branch2b/AssignMovingAvg_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/moving_variance"
      }
    }
  }
}
node {
  name: "bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn3d_branch2b/moving_variance"
  input: "bn3d_branch2b/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn3d_branch2b/moving_variance"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add_3"
  op: "Add"
  input: "bn3d_branch2b/cond/Identity"
  input: "Relu_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_8"
  op: "Relu"
  input: "Add_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res4e_branch2a/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res4e_branch2a/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "res4e_branch2a/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "res4e_branch2a/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "res4e_branch2a/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "res4e_branch2a/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "res4e_branch2a/kernel/Initializer/random_uniform/max"
  input: "res4e_branch2a/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res4e_branch2a/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "res4e_branch2a/kernel/Initializer/random_uniform/RandomUniform"
  input: "res4e_branch2a/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res4e_branch2a/kernel/Initializer/random_uniform"
  op: "Add"
  input: "res4e_branch2a/kernel/Initializer/random_uniform/mul"
  input: "res4e_branch2a/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res4e_branch2a/kernel"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res4e_branch2a/kernel"
    }
  }
}
node {
  name: "res4e_branch2a/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res4e_branch2a/kernel"
  device: "/device:GPU:0"
}
node {
  name: "res4e_branch2a/kernel/Assign"
  op: "AssignVariableOp"
  input: "res4e_branch2a/kernel"
  input: "res4e_branch2a/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res4e_branch2a/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res4e_branch2a/kernel"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res4e_branch2a/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "res4e_branch2a/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res4e_branch2a/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res4e_branch2a/Conv2D"
  op: "Conv2D"
  input: "Relu_8"
  input: "res4e_branch2a/Conv2D/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bn4e_branch2a/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn4e_branch2a/gamma"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn4e_branch2a/gamma"
    }
  }
}
node {
  name: "bn4e_branch2a/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn4e_branch2a/gamma"
  device: "/device:GPU:0"
}
node {
  name: "bn4e_branch2a/gamma/Assign"
  op: "AssignVariableOp"
  input: "bn4e_branch2a/gamma"
  input: "bn4e_branch2a/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2a/gamma"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn4e_branch2a/beta"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn4e_branch2a/beta"
    }
  }
}
node {
  name: "bn4e_branch2a/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn4e_branch2a/beta"
  device: "/device:GPU:0"
}
node {
  name: "bn4e_branch2a/beta/Assign"
  op: "AssignVariableOp"
  input: "bn4e_branch2a/beta"
  input: "bn4e_branch2a/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2a/beta"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn4e_branch2a/moving_mean"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn4e_branch2a/moving_mean"
    }
  }
}
node {
  name: "bn4e_branch2a/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn4e_branch2a/moving_mean"
  device: "/device:GPU:0"
}
node {
  name: "bn4e_branch2a/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bn4e_branch2a/moving_mean"
  input: "bn4e_branch2a/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2a/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn4e_branch2a/moving_variance"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn4e_branch2a/moving_variance"
    }
  }
}
node {
  name: "bn4e_branch2a/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn4e_branch2a/moving_variance"
  device: "/device:GPU:0"
}
node {
  name: "bn4e_branch2a/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bn4e_branch2a/moving_variance"
  input: "bn4e_branch2a/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2a/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/cond/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn4e_branch2a/cond"
  op: "If"
  input: "bn4e_branch2a/cond/Squeeze"
  input: "bn4e_branch2a/gamma"
  input: "bn4e_branch2a/beta"
  input: "bn4e_branch2a/moving_mean"
  input: "bn4e_branch2a/moving_variance"
  input: "res4e_branch2a/Conv2D"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
        i: 2
        i: 3
        i: 4
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn4e_branch2a_cond_false_1117"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn4e_branch2a_cond_true_1116"
      }
    }
  }
}
node {
  name: "bn4e_branch2a/cond/Identity"
  op: "Identity"
  input: "bn4e_branch2a/cond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/cond/Identity_1"
  op: "Identity"
  input: "bn4e_branch2a/cond:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/cond/Identity_2"
  op: "Identity"
  input: "bn4e_branch2a/cond:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/cond/Identity_3"
  op: "Identity"
  input: "bn4e_branch2a/cond:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn4e_branch2a/cond/Identity_4"
  op: "Identity"
  input: "bn4e_branch2a/cond:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn4e_branch2a/cond/Identity_5"
  op: "Identity"
  input: "bn4e_branch2a/cond:5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn4e_branch2a/cond/Identity_6"
  op: "Identity"
  input: "bn4e_branch2a/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn4e_branch2a/cond/Identity_7"
  op: "Identity"
  input: "bn4e_branch2a/cond:7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn4e_branch2a/cond/Identity_8"
  op: "Identity"
  input: "bn4e_branch2a/cond:8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn4e_branch2a/cond/Identity_9"
  op: "Identity"
  input: "bn4e_branch2a/cond:9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn4e_branch2a/cond_1/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn4e_branch2a/cond_1"
  op: "StatelessIf"
  input: "bn4e_branch2a/cond_1/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn4e_branch2a_cond_1_false_1186"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn4e_branch2a_cond_1_true_1185"
      }
    }
  }
}
node {
  name: "bn4e_branch2a/cond_1/Identity"
  op: "Identity"
  input: "bn4e_branch2a/cond_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/AssignMovingAvg/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn4e_branch2a/AssignMovingAvg/sub"
  op: "Sub"
  input: "bn4e_branch2a/AssignMovingAvg/sub/x"
  input: "bn4e_branch2a/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/moving_mean"
      }
    }
  }
}
node {
  name: "bn4e_branch2a/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2a/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "bn4e_branch2a/AssignMovingAvg/ReadVariableOp"
  input: "bn4e_branch2a/cond/Identity_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/moving_mean"
      }
    }
  }
}
node {
  name: "bn4e_branch2a/AssignMovingAvg/mul"
  op: "Mul"
  input: "bn4e_branch2a/AssignMovingAvg/sub_1"
  input: "bn4e_branch2a/AssignMovingAvg/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/moving_mean"
      }
    }
  }
}
node {
  name: "bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn4e_branch2a/moving_mean"
  input: "bn4e_branch2a/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn4e_branch2a/moving_mean"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/AssignMovingAvg_1/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn4e_branch2a/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "bn4e_branch2a/AssignMovingAvg_1/sub/x"
  input: "bn4e_branch2a/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/moving_variance"
      }
    }
  }
}
node {
  name: "bn4e_branch2a/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2a/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "bn4e_branch2a/AssignMovingAvg_1/ReadVariableOp"
  input: "bn4e_branch2a/cond/Identity_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/moving_variance"
      }
    }
  }
}
node {
  name: "bn4e_branch2a/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "bn4e_branch2a/AssignMovingAvg_1/sub_1"
  input: "bn4e_branch2a/AssignMovingAvg_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/moving_variance"
      }
    }
  }
}
node {
  name: "bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn4e_branch2a/moving_variance"
  input: "bn4e_branch2a/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn4e_branch2a/moving_variance"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_9"
  op: "Relu"
  input: "bn4e_branch2a/cond/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res4e_branch2b/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res4e_branch2b/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "res4e_branch2b/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "res4e_branch2b/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "res4e_branch2b/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "res4e_branch2b/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "res4e_branch2b/kernel/Initializer/random_uniform/max"
  input: "res4e_branch2b/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res4e_branch2b/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "res4e_branch2b/kernel/Initializer/random_uniform/RandomUniform"
  input: "res4e_branch2b/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res4e_branch2b/kernel/Initializer/random_uniform"
  op: "Add"
  input: "res4e_branch2b/kernel/Initializer/random_uniform/mul"
  input: "res4e_branch2b/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res4e_branch2b/kernel"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res4e_branch2b/kernel"
    }
  }
}
node {
  name: "res4e_branch2b/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res4e_branch2b/kernel"
  device: "/device:GPU:0"
}
node {
  name: "res4e_branch2b/kernel/Assign"
  op: "AssignVariableOp"
  input: "res4e_branch2b/kernel"
  input: "res4e_branch2b/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res4e_branch2b/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res4e_branch2b/kernel"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res4e_branch2b/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "res4e_branch2b/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res4e_branch2b/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res4e_branch2b/Conv2D"
  op: "Conv2D"
  input: "Relu_9"
  input: "res4e_branch2b/Conv2D/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bn4e_branch2b/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn4e_branch2b/gamma"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn4e_branch2b/gamma"
    }
  }
}
node {
  name: "bn4e_branch2b/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn4e_branch2b/gamma"
  device: "/device:GPU:0"
}
node {
  name: "bn4e_branch2b/gamma/Assign"
  op: "AssignVariableOp"
  input: "bn4e_branch2b/gamma"
  input: "bn4e_branch2b/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2b/gamma"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn4e_branch2b/beta"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn4e_branch2b/beta"
    }
  }
}
node {
  name: "bn4e_branch2b/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn4e_branch2b/beta"
  device: "/device:GPU:0"
}
node {
  name: "bn4e_branch2b/beta/Assign"
  op: "AssignVariableOp"
  input: "bn4e_branch2b/beta"
  input: "bn4e_branch2b/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2b/beta"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn4e_branch2b/moving_mean"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn4e_branch2b/moving_mean"
    }
  }
}
node {
  name: "bn4e_branch2b/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn4e_branch2b/moving_mean"
  device: "/device:GPU:0"
}
node {
  name: "bn4e_branch2b/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bn4e_branch2b/moving_mean"
  input: "bn4e_branch2b/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2b/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn4e_branch2b/moving_variance"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn4e_branch2b/moving_variance"
    }
  }
}
node {
  name: "bn4e_branch2b/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn4e_branch2b/moving_variance"
  device: "/device:GPU:0"
}
node {
  name: "bn4e_branch2b/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bn4e_branch2b/moving_variance"
  input: "bn4e_branch2b/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2b/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/cond/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn4e_branch2b/cond"
  op: "If"
  input: "bn4e_branch2b/cond/Squeeze"
  input: "bn4e_branch2b/gamma"
  input: "bn4e_branch2b/beta"
  input: "bn4e_branch2b/moving_mean"
  input: "bn4e_branch2b/moving_variance"
  input: "res4e_branch2b/Conv2D"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
        i: 2
        i: 3
        i: 4
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn4e_branch2b_cond_false_1237"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn4e_branch2b_cond_true_1236"
      }
    }
  }
}
node {
  name: "bn4e_branch2b/cond/Identity"
  op: "Identity"
  input: "bn4e_branch2b/cond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/cond/Identity_1"
  op: "Identity"
  input: "bn4e_branch2b/cond:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/cond/Identity_2"
  op: "Identity"
  input: "bn4e_branch2b/cond:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/cond/Identity_3"
  op: "Identity"
  input: "bn4e_branch2b/cond:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn4e_branch2b/cond/Identity_4"
  op: "Identity"
  input: "bn4e_branch2b/cond:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn4e_branch2b/cond/Identity_5"
  op: "Identity"
  input: "bn4e_branch2b/cond:5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn4e_branch2b/cond/Identity_6"
  op: "Identity"
  input: "bn4e_branch2b/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn4e_branch2b/cond/Identity_7"
  op: "Identity"
  input: "bn4e_branch2b/cond:7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn4e_branch2b/cond/Identity_8"
  op: "Identity"
  input: "bn4e_branch2b/cond:8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn4e_branch2b/cond/Identity_9"
  op: "Identity"
  input: "bn4e_branch2b/cond:9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn4e_branch2b/cond_1/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn4e_branch2b/cond_1"
  op: "StatelessIf"
  input: "bn4e_branch2b/cond_1/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn4e_branch2b_cond_1_false_1306"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn4e_branch2b_cond_1_true_1305"
      }
    }
  }
}
node {
  name: "bn4e_branch2b/cond_1/Identity"
  op: "Identity"
  input: "bn4e_branch2b/cond_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/AssignMovingAvg/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn4e_branch2b/AssignMovingAvg/sub"
  op: "Sub"
  input: "bn4e_branch2b/AssignMovingAvg/sub/x"
  input: "bn4e_branch2b/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/moving_mean"
      }
    }
  }
}
node {
  name: "bn4e_branch2b/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2b/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "bn4e_branch2b/AssignMovingAvg/ReadVariableOp"
  input: "bn4e_branch2b/cond/Identity_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/moving_mean"
      }
    }
  }
}
node {
  name: "bn4e_branch2b/AssignMovingAvg/mul"
  op: "Mul"
  input: "bn4e_branch2b/AssignMovingAvg/sub_1"
  input: "bn4e_branch2b/AssignMovingAvg/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/moving_mean"
      }
    }
  }
}
node {
  name: "bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn4e_branch2b/moving_mean"
  input: "bn4e_branch2b/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn4e_branch2b/moving_mean"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/AssignMovingAvg_1/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn4e_branch2b/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "bn4e_branch2b/AssignMovingAvg_1/sub/x"
  input: "bn4e_branch2b/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/moving_variance"
      }
    }
  }
}
node {
  name: "bn4e_branch2b/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2b/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "bn4e_branch2b/AssignMovingAvg_1/ReadVariableOp"
  input: "bn4e_branch2b/cond/Identity_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/moving_variance"
      }
    }
  }
}
node {
  name: "bn4e_branch2b/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "bn4e_branch2b/AssignMovingAvg_1/sub_1"
  input: "bn4e_branch2b/AssignMovingAvg_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/moving_variance"
      }
    }
  }
}
node {
  name: "bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn4e_branch2b/moving_variance"
  input: "bn4e_branch2b/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn4e_branch2b/moving_variance"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add_4"
  op: "Add"
  input: "bn4e_branch2b/cond/Identity"
  input: "Relu_8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_10"
  op: "Relu"
  input: "Add_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pi/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pi/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "pi/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pi/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.15249857306480408
      }
    }
  }
}
node {
  name: "pi/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pi/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15249857306480408
      }
    }
  }
}
node {
  name: "pi/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pi/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pi/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pi/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pi/kernel/Initializer/random_uniform/max"
  input: "pi/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pi/kernel"
      }
    }
  }
}
node {
  name: "pi/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pi/kernel/Initializer/random_uniform/RandomUniform"
  input: "pi/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pi/kernel"
      }
    }
  }
}
node {
  name: "pi/kernel/Initializer/random_uniform"
  op: "Add"
  input: "pi/kernel/Initializer/random_uniform/mul"
  input: "pi/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pi/kernel"
      }
    }
  }
}
node {
  name: "pi/kernel"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pi/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "pi/kernel"
    }
  }
}
node {
  name: "pi/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "pi/kernel"
  device: "/device:GPU:0"
}
node {
  name: "pi/kernel/Assign"
  op: "AssignVariableOp"
  input: "pi/kernel"
  input: "pi/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pi/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "pi/kernel"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pi/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "pi/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "pi/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pi/Conv2D"
  op: "Conv2D"
  input: "Relu_10"
  input: "pi/Conv2D/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bn_pi/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn_pi/gamma"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_pi/gamma"
    }
  }
}
node {
  name: "bn_pi/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_pi/gamma"
  device: "/device:GPU:0"
}
node {
  name: "bn_pi/gamma/Assign"
  op: "AssignVariableOp"
  input: "bn_pi/gamma"
  input: "bn_pi/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_pi/gamma"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn_pi/beta"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_pi/beta"
    }
  }
}
node {
  name: "bn_pi/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_pi/beta"
  device: "/device:GPU:0"
}
node {
  name: "bn_pi/beta/Assign"
  op: "AssignVariableOp"
  input: "bn_pi/beta"
  input: "bn_pi/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_pi/beta"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn_pi/moving_mean"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_pi/moving_mean"
    }
  }
}
node {
  name: "bn_pi/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_pi/moving_mean"
  device: "/device:GPU:0"
}
node {
  name: "bn_pi/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bn_pi/moving_mean"
  input: "bn_pi/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_pi/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn_pi/moving_variance"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_pi/moving_variance"
    }
  }
}
node {
  name: "bn_pi/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_pi/moving_variance"
  device: "/device:GPU:0"
}
node {
  name: "bn_pi/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bn_pi/moving_variance"
  input: "bn_pi/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_pi/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/cond/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn_pi/cond"
  op: "If"
  input: "bn_pi/cond/Squeeze"
  input: "bn_pi/gamma"
  input: "bn_pi/beta"
  input: "bn_pi/moving_mean"
  input: "bn_pi/moving_variance"
  input: "pi/Conv2D"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
        i: 2
        i: 3
        i: 4
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn_pi_cond_false_1358"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn_pi_cond_true_1357"
      }
    }
  }
}
node {
  name: "bn_pi/cond/Identity"
  op: "Identity"
  input: "bn_pi/cond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/cond/Identity_1"
  op: "Identity"
  input: "bn_pi/cond:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/cond/Identity_2"
  op: "Identity"
  input: "bn_pi/cond:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/cond/Identity_3"
  op: "Identity"
  input: "bn_pi/cond:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn_pi/cond/Identity_4"
  op: "Identity"
  input: "bn_pi/cond:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn_pi/cond/Identity_5"
  op: "Identity"
  input: "bn_pi/cond:5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn_pi/cond/Identity_6"
  op: "Identity"
  input: "bn_pi/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn_pi/cond/Identity_7"
  op: "Identity"
  input: "bn_pi/cond:7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn_pi/cond/Identity_8"
  op: "Identity"
  input: "bn_pi/cond:8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn_pi/cond/Identity_9"
  op: "Identity"
  input: "bn_pi/cond:9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn_pi/cond_1/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn_pi/cond_1"
  op: "StatelessIf"
  input: "bn_pi/cond_1/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn_pi_cond_1_false_1427"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn_pi_cond_1_true_1426"
      }
    }
  }
}
node {
  name: "bn_pi/cond_1/Identity"
  op: "Identity"
  input: "bn_pi/cond_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/AssignMovingAvg/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn_pi/AssignMovingAvg/sub"
  op: "Sub"
  input: "bn_pi/AssignMovingAvg/sub/x"
  input: "bn_pi/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/moving_mean"
      }
    }
  }
}
node {
  name: "bn_pi/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_pi/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "bn_pi/AssignMovingAvg/ReadVariableOp"
  input: "bn_pi/cond/Identity_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/moving_mean"
      }
    }
  }
}
node {
  name: "bn_pi/AssignMovingAvg/mul"
  op: "Mul"
  input: "bn_pi/AssignMovingAvg/sub_1"
  input: "bn_pi/AssignMovingAvg/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/moving_mean"
      }
    }
  }
}
node {
  name: "bn_pi/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn_pi/moving_mean"
  input: "bn_pi/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn_pi/moving_mean"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/AssignMovingAvg_1/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn_pi/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "bn_pi/AssignMovingAvg_1/sub/x"
  input: "bn_pi/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/moving_variance"
      }
    }
  }
}
node {
  name: "bn_pi/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_pi/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "bn_pi/AssignMovingAvg_1/ReadVariableOp"
  input: "bn_pi/cond/Identity_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/moving_variance"
      }
    }
  }
}
node {
  name: "bn_pi/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "bn_pi/AssignMovingAvg_1/sub_1"
  input: "bn_pi/AssignMovingAvg_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/moving_variance"
      }
    }
  }
}
node {
  name: "bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn_pi/moving_variance"
  input: "bn_pi/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn_pi/moving_variance"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_11"
  op: "Relu"
  input: "bn_pi/cond/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p_flatten/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377T\000\000\000"
      }
    }
  }
}
node {
  name: "p_flatten/Reshape"
  op: "Reshape"
  input: "Relu_11"
  input: "p_flatten/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "T\000\000\000+\000\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2173570692539215
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2173570692539215
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense/kernel/Initializer/random_uniform/max"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense/kernel/Initializer/random_uniform/mul"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 84
        }
        dim {
          size: 43
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/kernel"
    }
  }
}
node {
  name: "dense/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/kernel"
  device: "/device:GPU:0"
}
node {
  name: "dense/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense/kernel"
  input: "dense/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 43
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 43
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/bias"
    }
  }
}
node {
  name: "dense/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/bias"
  device: "/device:GPU:0"
}
node {
  name: "dense/bias/Assign"
  op: "AssignVariableOp"
  input: "dense/bias"
  input: "dense/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/MatMul"
  op: "MatMul"
  input: "p_flatten/Reshape"
  input: "dense/MatMul/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/BiasAdd"
  op: "BiasAdd"
  input: "dense/MatMul"
  input: "dense/BiasAdd/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "output_policy"
  op: "Softmax"
  input: "dense/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "v/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1527949720621109
      }
    }
  }
}
node {
  name: "v/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1527949720621109
      }
    }
  }
}
node {
  name: "v/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "v/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "v/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "v/kernel/Initializer/random_uniform/max"
  input: "v/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/kernel"
      }
    }
  }
}
node {
  name: "v/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "v/kernel/Initializer/random_uniform/RandomUniform"
  input: "v/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/kernel"
      }
    }
  }
}
node {
  name: "v/kernel/Initializer/random_uniform"
  op: "Add"
  input: "v/kernel/Initializer/random_uniform/mul"
  input: "v/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/kernel"
      }
    }
  }
}
node {
  name: "v/kernel"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "v/kernel"
    }
  }
}
node {
  name: "v/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "v/kernel"
  device: "/device:GPU:0"
}
node {
  name: "v/kernel/Assign"
  op: "AssignVariableOp"
  input: "v/kernel"
  input: "v/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v/kernel"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "v/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v/Conv2D"
  op: "Conv2D"
  input: "Relu_10"
  input: "v/Conv2D/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bn_v/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn_v/gamma"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_v/gamma"
    }
  }
}
node {
  name: "bn_v/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_v/gamma"
  device: "/device:GPU:0"
}
node {
  name: "bn_v/gamma/Assign"
  op: "AssignVariableOp"
  input: "bn_v/gamma"
  input: "bn_v/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_v/gamma"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn_v/beta"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_v/beta"
    }
  }
}
node {
  name: "bn_v/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_v/beta"
  device: "/device:GPU:0"
}
node {
  name: "bn_v/beta/Assign"
  op: "AssignVariableOp"
  input: "bn_v/beta"
  input: "bn_v/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_v/beta"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn_v/moving_mean"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_v/moving_mean"
    }
  }
}
node {
  name: "bn_v/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_v/moving_mean"
  device: "/device:GPU:0"
}
node {
  name: "bn_v/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bn_v/moving_mean"
  input: "bn_v/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_v/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn_v/moving_variance"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_v/moving_variance"
    }
  }
}
node {
  name: "bn_v/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_v/moving_variance"
  device: "/device:GPU:0"
}
node {
  name: "bn_v/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bn_v/moving_variance"
  input: "bn_v/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_v/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/cond/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn_v/cond"
  op: "If"
  input: "bn_v/cond/Squeeze"
  input: "bn_v/gamma"
  input: "bn_v/beta"
  input: "bn_v/moving_mean"
  input: "bn_v/moving_variance"
  input: "v/Conv2D"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
        i: 2
        i: 3
        i: 4
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn_v_cond_false_1499"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn_v_cond_true_1498"
      }
    }
  }
}
node {
  name: "bn_v/cond/Identity"
  op: "Identity"
  input: "bn_v/cond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/cond/Identity_1"
  op: "Identity"
  input: "bn_v/cond:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/cond/Identity_2"
  op: "Identity"
  input: "bn_v/cond:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/cond/Identity_3"
  op: "Identity"
  input: "bn_v/cond:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn_v/cond/Identity_4"
  op: "Identity"
  input: "bn_v/cond:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn_v/cond/Identity_5"
  op: "Identity"
  input: "bn_v/cond:5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn_v/cond/Identity_6"
  op: "Identity"
  input: "bn_v/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn_v/cond/Identity_7"
  op: "Identity"
  input: "bn_v/cond:7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn_v/cond/Identity_8"
  op: "Identity"
  input: "bn_v/cond:8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn_v/cond/Identity_9"
  op: "Identity"
  input: "bn_v/cond:9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "bn_v/cond_1/Squeeze"
  op: "Squeeze"
  input: "input_training"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "bn_v/cond_1"
  op: "StatelessIf"
  input: "bn_v/cond_1/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn_v_cond_1_false_1568"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn_v_cond_1_true_1567"
      }
    }
  }
}
node {
  name: "bn_v/cond_1/Identity"
  op: "Identity"
  input: "bn_v/cond_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/AssignMovingAvg/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn_v/AssignMovingAvg/sub"
  op: "Sub"
  input: "bn_v/AssignMovingAvg/sub/x"
  input: "bn_v/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/moving_mean"
      }
    }
  }
}
node {
  name: "bn_v/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_v/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "bn_v/AssignMovingAvg/ReadVariableOp"
  input: "bn_v/cond/Identity_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/moving_mean"
      }
    }
  }
}
node {
  name: "bn_v/AssignMovingAvg/mul"
  op: "Mul"
  input: "bn_v/AssignMovingAvg/sub_1"
  input: "bn_v/AssignMovingAvg/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/moving_mean"
      }
    }
  }
}
node {
  name: "bn_v/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn_v/moving_mean"
  input: "bn_v/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn_v/moving_mean"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/AssignMovingAvg_1/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn_v/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "bn_v/AssignMovingAvg_1/sub/x"
  input: "bn_v/cond_1/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/moving_variance"
      }
    }
  }
}
node {
  name: "bn_v/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_v/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "bn_v/AssignMovingAvg_1/ReadVariableOp"
  input: "bn_v/cond/Identity_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/moving_variance"
      }
    }
  }
}
node {
  name: "bn_v/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "bn_v/AssignMovingAvg_1/sub_1"
  input: "bn_v/AssignMovingAvg_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/moving_variance"
      }
    }
  }
}
node {
  name: "bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn_v/moving_variance"
  input: "bn_v/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn_v/moving_variance"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_12"
  op: "Relu"
  input: "bn_v/cond/Identity"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v_flatten/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377*\000\000\000"
      }
    }
  }
}
node {
  name: "v_flatten/Reshape"
  op: "Reshape"
  input: "Relu_12"
  input: "v_flatten/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "*\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14189513027668
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14189513027668
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_1/kernel/Initializer/random_uniform/max"
  input: "dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_1/kernel/Initializer/random_uniform/mul"
  input: "dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 42
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel"
    }
  }
}
node {
  name: "dense_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
  device: "/device:GPU:0"
}
node {
  name: "dense_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "dense_1/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias"
    }
  }
}
node {
  name: "dense_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
  device: "/device:GPU:0"
}
node {
  name: "dense_1/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "dense_1/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul"
  op: "MatMul"
  input: "v_flatten/Reshape"
  input: "dense_1/MatMul/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_1/MatMul"
  input: "dense_1/BiasAdd/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Relu_13"
  op: "Relu"
  input: "dense_1/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1527949720621109
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1527949720621109
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_2/kernel/Initializer/random_uniform/max"
  input: "dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_2/kernel/Initializer/random_uniform/mul"
  input: "dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
}
node {
  name: "dense_2/kernel"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/kernel"
    }
  }
}
node {
  name: "dense_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel"
  device: "/device:GPU:0"
}
node {
  name: "dense_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "dense_2/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/bias"
    }
  }
}
node {
  name: "dense_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/bias"
  device: "/device:GPU:0"
}
node {
  name: "dense_2/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "dense_2/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/MatMul"
  op: "MatMul"
  input: "Relu_13"
  input: "dense_2/MatMul/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/BiasAdd"
  op: "BiasAdd"
  input: "dense_2/MatMul"
  input: "dense_2/BiasAdd/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "output_value"
  op: "Tanh"
  input: "dense_2/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_policy"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 43
        }
      }
    }
  }
}
node {
  name: "target_value"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/labels_stop_gradient"
  op: "StopGradient"
  input: "target_policy"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "dense/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape_1"
  op: "Shape"
  input: "dense/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank_1"
  input: "softmax_cross_entropy_loss/xentropy/Sub/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice/size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape_1"
  input: "softmax_cross_entropy_loss/xentropy/Slice/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice/size"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat/values_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_loss/xentropy/concat/values_0"
  input: "softmax_cross_entropy_loss/xentropy/Slice"
  input: "softmax_cross_entropy_loss/xentropy/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape"
  op: "Reshape"
  input: "dense/BiasAdd"
  input: "softmax_cross_entropy_loss/xentropy/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape_2"
  op: "Shape"
  input: "softmax_cross_entropy_loss/labels_stop_gradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank_2"
  input: "softmax_cross_entropy_loss/xentropy/Sub_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1/size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape_2"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1/size"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1/values_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_loss/xentropy/concat_1/values_0"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1"
  input: "softmax_cross_entropy_loss/xentropy/concat_1/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape_1"
  op: "Reshape"
  input: "softmax_cross_entropy_loss/labels_stop_gradient"
  input: "softmax_cross_entropy_loss/xentropy/concat_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_loss/xentropy/Reshape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_2/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank"
  input: "softmax_cross_entropy_loss/xentropy/Sub_2/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub_2"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2/size"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_loss/xentropy"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  device: "/device:GPU:0"
}
node {
  name: "softmax_cross_entropy_loss/Cast/x"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "softmax_cross_entropy_loss/Cast/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "softmax_cross_entropy_loss/Mul"
  input: "softmax_cross_entropy_loss/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "softmax_cross_entropy_loss/Cast/x"
  input: "softmax_cross_entropy_loss/num_present/Equal/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "softmax_cross_entropy_loss/num_present/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/num_present/Equal"
  input: "softmax_cross_entropy_loss/num_present/zeros_like"
  input: "softmax_cross_entropy_loss/num_present/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "softmax_cross_entropy_loss/num_present/Select"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "softmax_cross_entropy_loss/num_present/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "softmax_cross_entropy_loss/Sum"
  input: "softmax_cross_entropy_loss/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/value"
  op: "DivNoNan"
  input: "softmax_cross_entropy_loss/Sum_1"
  input: "softmax_cross_entropy_loss/num_present"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "output_value"
  input: "Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "Reshape"
  input: "target_value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_squared_error/SquaredDifference"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  device: "/device:GPU:0"
}
node {
  name: "mean_squared_error/Cast/x"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/Mul"
  op: "Mul"
  input: "mean_squared_error/SquaredDifference"
  input: "mean_squared_error/Cast/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "mean_squared_error/Sum"
  op: "Sum"
  input: "mean_squared_error/Mul"
  input: "mean_squared_error/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/num_present/Equal/y"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/Equal"
  op: "Equal"
  input: "mean_squared_error/Cast/x"
  input: "mean_squared_error/num_present/Equal/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "mean_squared_error/num_present/zeros_like"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/ones_like/Shape"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/ones_like/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/ones_like"
  op: "Fill"
  input: "mean_squared_error/num_present/ones_like/Shape"
  input: "mean_squared_error/num_present/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/num_present/Select"
  op: "Select"
  input: "mean_squared_error/num_present/Equal"
  input: "mean_squared_error/num_present/zeros_like"
  input: "mean_squared_error/num_present/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_squared_error/SquaredDifference"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
}
node {
  name: "mean_squared_error/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "mean_squared_error/SquaredDifference"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  input: "^mean_squared_error/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  input: "^mean_squared_error/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "mean_squared_error/num_present/broadcast_weights/ones_like/Shape"
  input: "mean_squared_error/num_present/broadcast_weights/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/num_present/broadcast_weights"
  op: "Mul"
  input: "mean_squared_error/num_present/Select"
  input: "mean_squared_error/num_present/broadcast_weights/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/num_present/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present"
  op: "Sum"
  input: "mean_squared_error/num_present/broadcast_weights"
  input: "mean_squared_error/num_present/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/Const_1"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Sum_1"
  op: "Sum"
  input: "mean_squared_error/Sum"
  input: "mean_squared_error/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/value"
  op: "DivNoNan"
  input: "mean_squared_error/Sum_1"
  input: "mean_squared_error/num_present"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_5"
  op: "AddV2"
  input: "softmax_cross_entropy_loss/value"
  input: "mean_squared_error/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/Fill"
  device: "/device:GPU:0"
}
node {
  name: "gradients/add_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/add_5_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/add_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/add_5_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Shape"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Shape_1"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Shape"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "gradients/add_5_grad/tuple/control_dependency"
  input: "softmax_cross_entropy_loss/num_present"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/value_grad/div_no_nan"
  input: "gradients/softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Sum"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Neg"
  op: "Neg"
  input: "softmax_cross_entropy_loss/Sum_1"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Neg"
  input: "softmax_cross_entropy_loss/num_present"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "gradients/softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  input: "softmax_cross_entropy_loss/num_present"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/mul"
  op: "Mul"
  input: "gradients/add_5_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Sum_1"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/value_grad/mul"
  input: "gradients/softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Sum_1"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/value_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Reshape_1"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/value_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Shape"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Shape_1"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mean_squared_error/value_grad/Shape"
  input: "gradients/mean_squared_error/value_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "gradients/add_5_grad/tuple/control_dependency_1"
  input: "mean_squared_error/num_present"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Sum"
  op: "Sum"
  input: "gradients/mean_squared_error/value_grad/div_no_nan"
  input: "gradients/mean_squared_error/value_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/value_grad/Sum"
  input: "gradients/mean_squared_error/value_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Neg"
  op: "Neg"
  input: "mean_squared_error/Sum_1"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "gradients/mean_squared_error/value_grad/Neg"
  input: "mean_squared_error/num_present"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "gradients/mean_squared_error/value_grad/div_no_nan_1"
  input: "mean_squared_error/num_present"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/mul"
  op: "Mul"
  input: "gradients/add_5_grad/tuple/control_dependency_1"
  input: "gradients/mean_squared_error/value_grad/div_no_nan_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Sum_1"
  op: "Sum"
  input: "gradients/mean_squared_error/value_grad/mul"
  input: "gradients/mean_squared_error/value_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mean_squared_error/value_grad/Sum_1"
  input: "gradients/mean_squared_error/value_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/mean_squared_error/value_grad/Reshape"
  input: "^gradients/mean_squared_error/value_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/mean_squared_error/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mean_squared_error/value_grad/Reshape"
  input: "^gradients/mean_squared_error/value_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/value_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mean_squared_error/value_grad/Reshape_1"
  input: "^gradients/mean_squared_error/value_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/value_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_1_grad/Reshape/shape"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/value_grad/tuple/control_dependency"
  input: "gradients/mean_squared_error/Sum_1_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_1_grad/Const"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/mean_squared_error/Sum_1_grad/Reshape"
  input: "gradients/mean_squared_error/Sum_1_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/Mul"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Reshape/shape"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/Sum_1_grad/Tile"
  input: "gradients/mean_squared_error/Sum_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Shape"
  op: "Shape"
  input: "mean_squared_error/Mul"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/mean_squared_error/Sum_grad/Reshape"
  input: "gradients/mean_squared_error/Sum_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "softmax_cross_entropy_loss/Cast/x"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "softmax_cross_entropy_loss/Cast/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "mean_squared_error/SquaredDifference"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Shape_1"
  op: "Shape"
  input: "mean_squared_error/Cast/x"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mean_squared_error/Mul_grad/Shape"
  input: "gradients/mean_squared_error/Mul_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/mean_squared_error/Sum_grad/Tile"
  input: "mean_squared_error/Cast/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/mean_squared_error/Mul_grad/Mul"
  input: "gradients/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/Mul_grad/Sum"
  input: "gradients/mean_squared_error/Mul_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "mean_squared_error/SquaredDifference"
  input: "gradients/mean_squared_error/Sum_grad/Tile"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/mean_squared_error/Mul_grad/Mul_1"
  input: "gradients/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mean_squared_error/Mul_grad/Sum_1"
  input: "gradients/mean_squared_error/Mul_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/mean_squared_error/Mul_grad/Reshape"
  input: "^gradients/mean_squared_error/Mul_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/mean_squared_error/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mean_squared_error/Mul_grad/Reshape"
  input: "^gradients/mean_squared_error/Mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mean_squared_error/Mul_grad/Reshape_1"
  input: "^gradients/mean_squared_error/Mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/mean_squared_error/Mul_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/mean_squared_error/SquaredDifference_grad/scalar"
  input: "gradients/mean_squared_error/Mul_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Reshape"
  input: "target_value"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/mean_squared_error/Mul_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Mul"
  input: "gradients/mean_squared_error/SquaredDifference_grad/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Reshape"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "target_value"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Shape"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "gradients/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Sum"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "gradients/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^gradients/mean_squared_error/SquaredDifference_grad/Reshape"
  device: "/device:GPU:0"
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "^gradients/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^gradients/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "softmax_cross_entropy_loss/xentropy:1"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  input: "softmax_cross_entropy_loss/xentropy:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "softmax_cross_entropy_loss/xentropy/Reshape"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/Neg"
  op: "Neg"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/LogSoftmax"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1/dim"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/Neg"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
      }
    }
  }
}
node {
  name: "gradients/Reshape_grad/Shape"
  op: "Shape"
  input: "output_value"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/Reshape_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Shape"
  op: "Shape"
  input: "dense/BiasAdd"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/output_value_grad/TanhGrad"
  op: "TanhGrad"
  input: "output_value"
  input: "gradients/Reshape_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  device: "/device:GPU:0"
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  input: "^gradients/dense/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/dense/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/dense_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/output_value_grad/TanhGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/dense_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/dense_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/output_value_grad/TanhGrad"
  device: "/device:GPU:0"
}
node {
  name: "gradients/dense_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/output_value_grad/TanhGrad"
  input: "^gradients/dense_2/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/output_value_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "gradients/dense_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/dense_2/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  input: "dense/MatMul/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "p_flatten/Reshape"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/dense/MatMul_grad/MatMul"
  input: "^gradients/dense/MatMul_grad/MatMul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dense/MatMul_grad/MatMul"
  input: "^gradients/dense/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense/MatMul_grad/MatMul_1"
  input: "^gradients/dense/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/dense_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/dense_2/BiasAdd_grad/tuple/control_dependency"
  input: "dense_2/MatMul/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/dense_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Relu_13"
  input: "gradients/dense_2/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dense_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/dense_2/MatMul_grad/MatMul"
  input: "^gradients/dense_2/MatMul_grad/MatMul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/dense_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dense_2/MatMul_grad/MatMul"
  input: "^gradients/dense_2/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_2/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/dense_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense_2/MatMul_grad/MatMul_1"
  input: "^gradients/dense_2/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_2/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/p_flatten/Reshape_grad/Shape"
  op: "Shape"
  input: "Relu_11"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/p_flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/dense/MatMul_grad/tuple/control_dependency"
  input: "gradients/p_flatten/Reshape_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Relu_13_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/dense_2/MatMul_grad/tuple/control_dependency"
  input: "Relu_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Relu_11_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/p_flatten/Reshape_grad/Reshape"
  input: "Relu_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dense_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Relu_13_grad/ReluGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/dense_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/Relu_13_grad/ReluGrad"
  input: "^gradients/dense_1/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
}
node {
  name: "gradients/dense_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Relu_13_grad/ReluGrad"
  input: "^gradients/dense_1/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_13_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/dense_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/dense_1/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/dense_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/dense_1/BiasAdd_grad/tuple/control_dependency"
  input: "dense_1/MatMul/ReadVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/dense_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "v_flatten/Reshape"
  input: "gradients/dense_1/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dense_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/dense_1/MatMul_grad/MatMul"
  input: "^gradients/dense_1/MatMul_grad/MatMul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/dense_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dense_1/MatMul_grad/MatMul"
  input: "^gradients/dense_1/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_1/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/dense_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense_1/MatMul_grad/MatMul_1"
  input: "^gradients/dense_1/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_1"
  op: "ZerosLike"
  input: "bn_pi/cond:1"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_2"
  op: "ZerosLike"
  input: "bn_pi/cond:2"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_3"
  op: "ZerosLike"
  input: "bn_pi/cond:3"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_4"
  op: "ZerosLike"
  input: "bn_pi/cond:4"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_5"
  op: "ZerosLike"
  input: "bn_pi/cond:5"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_6"
  op: "ZerosLike"
  input: "bn_pi/cond:6"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_7"
  op: "ZerosLike"
  input: "bn_pi/cond:7"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_8"
  op: "ZerosLike"
  input: "bn_pi/cond:8"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_9"
  op: "ZerosLike"
  input: "bn_pi/cond:9"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/bn_pi/cond_grad/StatelessIf"
  op: "StatelessIf"
  input: "bn_pi/cond/Squeeze"
  input: "gradients/Relu_11_grad/ReluGrad"
  input: "gradients/zeros_like_1"
  input: "gradients/zeros_like_2"
  input: "gradients/zeros_like_3"
  input: "gradients/zeros_like_4"
  input: "gradients/zeros_like_5"
  input: "gradients/zeros_like_6"
  input: "gradients/zeros_like_7"
  input: "gradients/zeros_like_8"
  input: "gradients/zeros_like_9"
  input: "pi/Conv2D"
  input: "bn_pi/cond:3"
  input: "bn_pi/cond:7"
  input: "bn_pi/cond:8"
  input: "bn_pi/cond:9"
  input: "bn_pi/cond:5"
  input: "bn_pi/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn_pi_cond_false_1358_grad_1918"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn_pi_cond_true_1357_grad_1868"
      }
    }
  }
}
node {
  name: "gradients/bn_pi/cond_grad/Identity"
  op: "Identity"
  input: "gradients/bn_pi/cond_grad/StatelessIf"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn_pi/cond_grad/Identity_1"
  op: "Identity"
  input: "gradients/bn_pi/cond_grad/StatelessIf:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn_pi/cond_grad/Identity_2"
  op: "Identity"
  input: "gradients/bn_pi/cond_grad/StatelessIf:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn_pi/cond_grad/Identity_3"
  op: "Identity"
  input: "gradients/bn_pi/cond_grad/StatelessIf:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn_pi/cond_grad/Identity_4"
  op: "Identity"
  input: "gradients/bn_pi/cond_grad/StatelessIf:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn_pi/cond_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/bn_pi/cond_grad/Identity"
  input: "^gradients/bn_pi/cond_grad/Identity_1"
  input: "^gradients/bn_pi/cond_grad/Identity_2"
  input: "^gradients/bn_pi/cond_grad/Identity_3"
  input: "^gradients/bn_pi/cond_grad/Identity_4"
  device: "/device:GPU:0"
}
node {
  name: "gradients/bn_pi/cond_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bn_pi/cond_grad/Identity"
  input: "^gradients/bn_pi/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn_pi/cond_grad/Identity"
      }
    }
  }
}
node {
  name: "gradients/bn_pi/cond_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bn_pi/cond_grad/Identity_1"
  input: "^gradients/bn_pi/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn_pi/cond_grad/Identity_1"
      }
    }
  }
}
node {
  name: "gradients/bn_pi/cond_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/bn_pi/cond_grad/Identity_2"
  input: "^gradients/bn_pi/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn_pi/cond_grad/Identity_2"
      }
    }
  }
}
node {
  name: "gradients/bn_pi/cond_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/bn_pi/cond_grad/Identity_3"
  input: "^gradients/bn_pi/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn_pi/cond_grad/Identity_3"
      }
    }
  }
}
node {
  name: "gradients/bn_pi/cond_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/bn_pi/cond_grad/Identity_4"
  input: "^gradients/bn_pi/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn_pi/cond_grad/Identity_4"
      }
    }
  }
}
node {
  name: "gradients/v_flatten/Reshape_grad/Shape"
  op: "Shape"
  input: "Relu_12"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/v_flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/dense_1/MatMul_grad/tuple/control_dependency"
  input: "gradients/v_flatten/Reshape_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/pi/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_10"
  input: "pi/Conv2D/ReadVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/pi/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/pi/Conv2D_grad/ShapeN"
  input: "pi/Conv2D/ReadVariableOp"
  input: "gradients/bn_pi/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/pi/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_10"
  input: "gradients/pi/Conv2D_grad/ShapeN:1"
  input: "gradients/bn_pi/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/pi/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/pi/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/pi/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/pi/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/pi/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/pi/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/pi/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/pi/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/pi/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/pi/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/pi/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Relu_12_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/v_flatten/Reshape_grad/Reshape"
  input: "Relu_12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_10"
  op: "ZerosLike"
  input: "bn_v/cond:1"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_11"
  op: "ZerosLike"
  input: "bn_v/cond:2"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_12"
  op: "ZerosLike"
  input: "bn_v/cond:3"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_13"
  op: "ZerosLike"
  input: "bn_v/cond:4"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_14"
  op: "ZerosLike"
  input: "bn_v/cond:5"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_15"
  op: "ZerosLike"
  input: "bn_v/cond:6"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_16"
  op: "ZerosLike"
  input: "bn_v/cond:7"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_17"
  op: "ZerosLike"
  input: "bn_v/cond:8"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_18"
  op: "ZerosLike"
  input: "bn_v/cond:9"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/bn_v/cond_grad/StatelessIf"
  op: "StatelessIf"
  input: "bn_v/cond/Squeeze"
  input: "gradients/Relu_12_grad/ReluGrad"
  input: "gradients/zeros_like_10"
  input: "gradients/zeros_like_11"
  input: "gradients/zeros_like_12"
  input: "gradients/zeros_like_13"
  input: "gradients/zeros_like_14"
  input: "gradients/zeros_like_15"
  input: "gradients/zeros_like_16"
  input: "gradients/zeros_like_17"
  input: "gradients/zeros_like_18"
  input: "v/Conv2D"
  input: "bn_v/cond:3"
  input: "bn_v/cond:7"
  input: "bn_v/cond:8"
  input: "bn_v/cond:9"
  input: "bn_v/cond:5"
  input: "bn_v/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn_v_cond_false_1499_grad_2055"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn_v_cond_true_1498_grad_2005"
      }
    }
  }
}
node {
  name: "gradients/bn_v/cond_grad/Identity"
  op: "Identity"
  input: "gradients/bn_v/cond_grad/StatelessIf"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn_v/cond_grad/Identity_1"
  op: "Identity"
  input: "gradients/bn_v/cond_grad/StatelessIf:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn_v/cond_grad/Identity_2"
  op: "Identity"
  input: "gradients/bn_v/cond_grad/StatelessIf:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn_v/cond_grad/Identity_3"
  op: "Identity"
  input: "gradients/bn_v/cond_grad/StatelessIf:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn_v/cond_grad/Identity_4"
  op: "Identity"
  input: "gradients/bn_v/cond_grad/StatelessIf:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn_v/cond_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/bn_v/cond_grad/Identity"
  input: "^gradients/bn_v/cond_grad/Identity_1"
  input: "^gradients/bn_v/cond_grad/Identity_2"
  input: "^gradients/bn_v/cond_grad/Identity_3"
  input: "^gradients/bn_v/cond_grad/Identity_4"
  device: "/device:GPU:0"
}
node {
  name: "gradients/bn_v/cond_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bn_v/cond_grad/Identity"
  input: "^gradients/bn_v/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn_v/cond_grad/Identity"
      }
    }
  }
}
node {
  name: "gradients/bn_v/cond_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bn_v/cond_grad/Identity_1"
  input: "^gradients/bn_v/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn_v/cond_grad/Identity_1"
      }
    }
  }
}
node {
  name: "gradients/bn_v/cond_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/bn_v/cond_grad/Identity_2"
  input: "^gradients/bn_v/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn_v/cond_grad/Identity_2"
      }
    }
  }
}
node {
  name: "gradients/bn_v/cond_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/bn_v/cond_grad/Identity_3"
  input: "^gradients/bn_v/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn_v/cond_grad/Identity_3"
      }
    }
  }
}
node {
  name: "gradients/bn_v/cond_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/bn_v/cond_grad/Identity_4"
  input: "^gradients/bn_v/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn_v/cond_grad/Identity_4"
      }
    }
  }
}
node {
  name: "gradients/v/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_10"
  input: "v/Conv2D/ReadVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/v/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/v/Conv2D_grad/ShapeN"
  input: "v/Conv2D/ReadVariableOp"
  input: "gradients/bn_v/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/v/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_10"
  input: "gradients/v/Conv2D_grad/ShapeN:1"
  input: "gradients/bn_v/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/v/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/v/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/v/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/v/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/v/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/v/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/v/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/v/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/v/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/v/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/v/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/pi/Conv2D_grad/tuple/control_dependency"
  input: "gradients/v/Conv2D_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/pi/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Relu_10_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN"
  input: "Relu_10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add_4_grad/Shape"
  op: "Shape"
  input: "bn4e_branch2b/cond/Identity"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_4_grad/Shape_1"
  op: "Shape"
  input: "Relu_8"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Add_4_grad/Shape"
  input: "gradients/Add_4_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_4_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_10_grad/ReluGrad"
  input: "gradients/Add_4_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/Add_4_grad/Sum"
  input: "gradients/Add_4_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_10_grad/ReluGrad"
  input: "gradients/Add_4_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Add_4_grad/Sum_1"
  input: "gradients/Add_4_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/Add_4_grad/Reshape"
  input: "^gradients/Add_4_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/Add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Add_4_grad/Reshape"
  input: "^gradients/Add_4_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Add_4_grad/Reshape_1"
  input: "^gradients/Add_4_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_19"
  op: "ZerosLike"
  input: "bn4e_branch2b/cond:1"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_20"
  op: "ZerosLike"
  input: "bn4e_branch2b/cond:2"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_21"
  op: "ZerosLike"
  input: "bn4e_branch2b/cond:3"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_22"
  op: "ZerosLike"
  input: "bn4e_branch2b/cond:4"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_23"
  op: "ZerosLike"
  input: "bn4e_branch2b/cond:5"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_24"
  op: "ZerosLike"
  input: "bn4e_branch2b/cond:6"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_25"
  op: "ZerosLike"
  input: "bn4e_branch2b/cond:7"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_26"
  op: "ZerosLike"
  input: "bn4e_branch2b/cond:8"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_27"
  op: "ZerosLike"
  input: "bn4e_branch2b/cond:9"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/bn4e_branch2b/cond_grad/StatelessIf"
  op: "StatelessIf"
  input: "bn4e_branch2b/cond/Squeeze"
  input: "gradients/Add_4_grad/tuple/control_dependency"
  input: "gradients/zeros_like_19"
  input: "gradients/zeros_like_20"
  input: "gradients/zeros_like_21"
  input: "gradients/zeros_like_22"
  input: "gradients/zeros_like_23"
  input: "gradients/zeros_like_24"
  input: "gradients/zeros_like_25"
  input: "gradients/zeros_like_26"
  input: "gradients/zeros_like_27"
  input: "res4e_branch2b/Conv2D"
  input: "bn4e_branch2b/cond:3"
  input: "bn4e_branch2b/cond:7"
  input: "bn4e_branch2b/cond:8"
  input: "bn4e_branch2b/cond:9"
  input: "bn4e_branch2b/cond:5"
  input: "bn4e_branch2b/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn4e_branch2b_cond_false_1237_grad_2201"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn4e_branch2b_cond_true_1236_grad_2151"
      }
    }
  }
}
node {
  name: "gradients/bn4e_branch2b/cond_grad/Identity"
  op: "Identity"
  input: "gradients/bn4e_branch2b/cond_grad/StatelessIf"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn4e_branch2b/cond_grad/Identity_1"
  op: "Identity"
  input: "gradients/bn4e_branch2b/cond_grad/StatelessIf:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn4e_branch2b/cond_grad/Identity_2"
  op: "Identity"
  input: "gradients/bn4e_branch2b/cond_grad/StatelessIf:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn4e_branch2b/cond_grad/Identity_3"
  op: "Identity"
  input: "gradients/bn4e_branch2b/cond_grad/StatelessIf:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn4e_branch2b/cond_grad/Identity_4"
  op: "Identity"
  input: "gradients/bn4e_branch2b/cond_grad/StatelessIf:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn4e_branch2b/cond_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/bn4e_branch2b/cond_grad/Identity"
  input: "^gradients/bn4e_branch2b/cond_grad/Identity_1"
  input: "^gradients/bn4e_branch2b/cond_grad/Identity_2"
  input: "^gradients/bn4e_branch2b/cond_grad/Identity_3"
  input: "^gradients/bn4e_branch2b/cond_grad/Identity_4"
  device: "/device:GPU:0"
}
node {
  name: "gradients/bn4e_branch2b/cond_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bn4e_branch2b/cond_grad/Identity"
  input: "^gradients/bn4e_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn4e_branch2b/cond_grad/Identity"
      }
    }
  }
}
node {
  name: "gradients/bn4e_branch2b/cond_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bn4e_branch2b/cond_grad/Identity_1"
  input: "^gradients/bn4e_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn4e_branch2b/cond_grad/Identity_1"
      }
    }
  }
}
node {
  name: "gradients/bn4e_branch2b/cond_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/bn4e_branch2b/cond_grad/Identity_2"
  input: "^gradients/bn4e_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn4e_branch2b/cond_grad/Identity_2"
      }
    }
  }
}
node {
  name: "gradients/bn4e_branch2b/cond_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/bn4e_branch2b/cond_grad/Identity_3"
  input: "^gradients/bn4e_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn4e_branch2b/cond_grad/Identity_3"
      }
    }
  }
}
node {
  name: "gradients/bn4e_branch2b/cond_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/bn4e_branch2b/cond_grad/Identity_4"
  input: "^gradients/bn4e_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn4e_branch2b/cond_grad/Identity_4"
      }
    }
  }
}
node {
  name: "gradients/res4e_branch2b/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_9"
  input: "res4e_branch2b/Conv2D/ReadVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/res4e_branch2b/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/res4e_branch2b/Conv2D_grad/ShapeN"
  input: "res4e_branch2b/Conv2D/ReadVariableOp"
  input: "gradients/bn4e_branch2b/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res4e_branch2b/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_9"
  input: "gradients/res4e_branch2b/Conv2D_grad/ShapeN:1"
  input: "gradients/bn4e_branch2b/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res4e_branch2b/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/res4e_branch2b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res4e_branch2b/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/res4e_branch2b/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/res4e_branch2b/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/res4e_branch2b/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res4e_branch2b/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/res4e_branch2b/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/res4e_branch2b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res4e_branch2b/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res4e_branch2b/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Relu_9_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/res4e_branch2b/Conv2D_grad/tuple/control_dependency"
  input: "Relu_9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_28"
  op: "ZerosLike"
  input: "bn4e_branch2a/cond:1"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_29"
  op: "ZerosLike"
  input: "bn4e_branch2a/cond:2"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_30"
  op: "ZerosLike"
  input: "bn4e_branch2a/cond:3"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_31"
  op: "ZerosLike"
  input: "bn4e_branch2a/cond:4"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_32"
  op: "ZerosLike"
  input: "bn4e_branch2a/cond:5"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_33"
  op: "ZerosLike"
  input: "bn4e_branch2a/cond:6"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_34"
  op: "ZerosLike"
  input: "bn4e_branch2a/cond:7"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_35"
  op: "ZerosLike"
  input: "bn4e_branch2a/cond:8"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_36"
  op: "ZerosLike"
  input: "bn4e_branch2a/cond:9"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/bn4e_branch2a/cond_grad/StatelessIf"
  op: "StatelessIf"
  input: "bn4e_branch2a/cond/Squeeze"
  input: "gradients/Relu_9_grad/ReluGrad"
  input: "gradients/zeros_like_28"
  input: "gradients/zeros_like_29"
  input: "gradients/zeros_like_30"
  input: "gradients/zeros_like_31"
  input: "gradients/zeros_like_32"
  input: "gradients/zeros_like_33"
  input: "gradients/zeros_like_34"
  input: "gradients/zeros_like_35"
  input: "gradients/zeros_like_36"
  input: "res4e_branch2a/Conv2D"
  input: "bn4e_branch2a/cond:3"
  input: "bn4e_branch2a/cond:7"
  input: "bn4e_branch2a/cond:8"
  input: "bn4e_branch2a/cond:9"
  input: "bn4e_branch2a/cond:5"
  input: "bn4e_branch2a/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn4e_branch2a_cond_false_1117_grad_2336"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn4e_branch2a_cond_true_1116_grad_2286"
      }
    }
  }
}
node {
  name: "gradients/bn4e_branch2a/cond_grad/Identity"
  op: "Identity"
  input: "gradients/bn4e_branch2a/cond_grad/StatelessIf"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn4e_branch2a/cond_grad/Identity_1"
  op: "Identity"
  input: "gradients/bn4e_branch2a/cond_grad/StatelessIf:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn4e_branch2a/cond_grad/Identity_2"
  op: "Identity"
  input: "gradients/bn4e_branch2a/cond_grad/StatelessIf:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn4e_branch2a/cond_grad/Identity_3"
  op: "Identity"
  input: "gradients/bn4e_branch2a/cond_grad/StatelessIf:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn4e_branch2a/cond_grad/Identity_4"
  op: "Identity"
  input: "gradients/bn4e_branch2a/cond_grad/StatelessIf:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn4e_branch2a/cond_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/bn4e_branch2a/cond_grad/Identity"
  input: "^gradients/bn4e_branch2a/cond_grad/Identity_1"
  input: "^gradients/bn4e_branch2a/cond_grad/Identity_2"
  input: "^gradients/bn4e_branch2a/cond_grad/Identity_3"
  input: "^gradients/bn4e_branch2a/cond_grad/Identity_4"
  device: "/device:GPU:0"
}
node {
  name: "gradients/bn4e_branch2a/cond_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bn4e_branch2a/cond_grad/Identity"
  input: "^gradients/bn4e_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn4e_branch2a/cond_grad/Identity"
      }
    }
  }
}
node {
  name: "gradients/bn4e_branch2a/cond_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bn4e_branch2a/cond_grad/Identity_1"
  input: "^gradients/bn4e_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn4e_branch2a/cond_grad/Identity_1"
      }
    }
  }
}
node {
  name: "gradients/bn4e_branch2a/cond_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/bn4e_branch2a/cond_grad/Identity_2"
  input: "^gradients/bn4e_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn4e_branch2a/cond_grad/Identity_2"
      }
    }
  }
}
node {
  name: "gradients/bn4e_branch2a/cond_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/bn4e_branch2a/cond_grad/Identity_3"
  input: "^gradients/bn4e_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn4e_branch2a/cond_grad/Identity_3"
      }
    }
  }
}
node {
  name: "gradients/bn4e_branch2a/cond_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/bn4e_branch2a/cond_grad/Identity_4"
  input: "^gradients/bn4e_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn4e_branch2a/cond_grad/Identity_4"
      }
    }
  }
}
node {
  name: "gradients/res4e_branch2a/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_8"
  input: "res4e_branch2a/Conv2D/ReadVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/res4e_branch2a/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/res4e_branch2a/Conv2D_grad/ShapeN"
  input: "res4e_branch2a/Conv2D/ReadVariableOp"
  input: "gradients/bn4e_branch2a/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res4e_branch2a/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_8"
  input: "gradients/res4e_branch2a/Conv2D_grad/ShapeN:1"
  input: "gradients/bn4e_branch2a/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res4e_branch2a/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/res4e_branch2a/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res4e_branch2a/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/res4e_branch2a/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/res4e_branch2a/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/res4e_branch2a/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res4e_branch2a/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/res4e_branch2a/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/res4e_branch2a/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res4e_branch2a/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res4e_branch2a/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/Add_4_grad/tuple/control_dependency_1"
  input: "gradients/res4e_branch2a/Conv2D_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Relu_8_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_1"
  input: "Relu_8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add_3_grad/Shape"
  op: "Shape"
  input: "bn3d_branch2b/cond/Identity"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_3_grad/Shape_1"
  op: "Shape"
  input: "Relu_6"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Add_3_grad/Shape"
  input: "gradients/Add_3_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_8_grad/ReluGrad"
  input: "gradients/Add_3_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/Add_3_grad/Sum"
  input: "gradients/Add_3_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_8_grad/ReluGrad"
  input: "gradients/Add_3_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Add_3_grad/Sum_1"
  input: "gradients/Add_3_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/Add_3_grad/Reshape"
  input: "^gradients/Add_3_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/Add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Add_3_grad/Reshape"
  input: "^gradients/Add_3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Add_3_grad/Reshape_1"
  input: "^gradients/Add_3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_37"
  op: "ZerosLike"
  input: "bn3d_branch2b/cond:1"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_38"
  op: "ZerosLike"
  input: "bn3d_branch2b/cond:2"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_39"
  op: "ZerosLike"
  input: "bn3d_branch2b/cond:3"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_40"
  op: "ZerosLike"
  input: "bn3d_branch2b/cond:4"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_41"
  op: "ZerosLike"
  input: "bn3d_branch2b/cond:5"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_42"
  op: "ZerosLike"
  input: "bn3d_branch2b/cond:6"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_43"
  op: "ZerosLike"
  input: "bn3d_branch2b/cond:7"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_44"
  op: "ZerosLike"
  input: "bn3d_branch2b/cond:8"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_45"
  op: "ZerosLike"
  input: "bn3d_branch2b/cond:9"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/bn3d_branch2b/cond_grad/StatelessIf"
  op: "StatelessIf"
  input: "bn3d_branch2b/cond/Squeeze"
  input: "gradients/Add_3_grad/tuple/control_dependency"
  input: "gradients/zeros_like_37"
  input: "gradients/zeros_like_38"
  input: "gradients/zeros_like_39"
  input: "gradients/zeros_like_40"
  input: "gradients/zeros_like_41"
  input: "gradients/zeros_like_42"
  input: "gradients/zeros_like_43"
  input: "gradients/zeros_like_44"
  input: "gradients/zeros_like_45"
  input: "res3d_branch2b/Conv2D"
  input: "bn3d_branch2b/cond:3"
  input: "bn3d_branch2b/cond:7"
  input: "bn3d_branch2b/cond:8"
  input: "bn3d_branch2b/cond:9"
  input: "bn3d_branch2b/cond:5"
  input: "bn3d_branch2b/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn3d_branch2b_cond_false_996_grad_2482"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn3d_branch2b_cond_true_995_grad_2432"
      }
    }
  }
}
node {
  name: "gradients/bn3d_branch2b/cond_grad/Identity"
  op: "Identity"
  input: "gradients/bn3d_branch2b/cond_grad/StatelessIf"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn3d_branch2b/cond_grad/Identity_1"
  op: "Identity"
  input: "gradients/bn3d_branch2b/cond_grad/StatelessIf:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn3d_branch2b/cond_grad/Identity_2"
  op: "Identity"
  input: "gradients/bn3d_branch2b/cond_grad/StatelessIf:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn3d_branch2b/cond_grad/Identity_3"
  op: "Identity"
  input: "gradients/bn3d_branch2b/cond_grad/StatelessIf:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn3d_branch2b/cond_grad/Identity_4"
  op: "Identity"
  input: "gradients/bn3d_branch2b/cond_grad/StatelessIf:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn3d_branch2b/cond_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/bn3d_branch2b/cond_grad/Identity"
  input: "^gradients/bn3d_branch2b/cond_grad/Identity_1"
  input: "^gradients/bn3d_branch2b/cond_grad/Identity_2"
  input: "^gradients/bn3d_branch2b/cond_grad/Identity_3"
  input: "^gradients/bn3d_branch2b/cond_grad/Identity_4"
  device: "/device:GPU:0"
}
node {
  name: "gradients/bn3d_branch2b/cond_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bn3d_branch2b/cond_grad/Identity"
  input: "^gradients/bn3d_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn3d_branch2b/cond_grad/Identity"
      }
    }
  }
}
node {
  name: "gradients/bn3d_branch2b/cond_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bn3d_branch2b/cond_grad/Identity_1"
  input: "^gradients/bn3d_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn3d_branch2b/cond_grad/Identity_1"
      }
    }
  }
}
node {
  name: "gradients/bn3d_branch2b/cond_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/bn3d_branch2b/cond_grad/Identity_2"
  input: "^gradients/bn3d_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn3d_branch2b/cond_grad/Identity_2"
      }
    }
  }
}
node {
  name: "gradients/bn3d_branch2b/cond_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/bn3d_branch2b/cond_grad/Identity_3"
  input: "^gradients/bn3d_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn3d_branch2b/cond_grad/Identity_3"
      }
    }
  }
}
node {
  name: "gradients/bn3d_branch2b/cond_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/bn3d_branch2b/cond_grad/Identity_4"
  input: "^gradients/bn3d_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn3d_branch2b/cond_grad/Identity_4"
      }
    }
  }
}
node {
  name: "gradients/res3d_branch2b/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_7"
  input: "res3d_branch2b/Conv2D/ReadVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/res3d_branch2b/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/res3d_branch2b/Conv2D_grad/ShapeN"
  input: "res3d_branch2b/Conv2D/ReadVariableOp"
  input: "gradients/bn3d_branch2b/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res3d_branch2b/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_7"
  input: "gradients/res3d_branch2b/Conv2D_grad/ShapeN:1"
  input: "gradients/bn3d_branch2b/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res3d_branch2b/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/res3d_branch2b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res3d_branch2b/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/res3d_branch2b/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/res3d_branch2b/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/res3d_branch2b/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res3d_branch2b/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/res3d_branch2b/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/res3d_branch2b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res3d_branch2b/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res3d_branch2b/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Relu_7_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/res3d_branch2b/Conv2D_grad/tuple/control_dependency"
  input: "Relu_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_46"
  op: "ZerosLike"
  input: "bn3d_branch2a/cond:1"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_47"
  op: "ZerosLike"
  input: "bn3d_branch2a/cond:2"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_48"
  op: "ZerosLike"
  input: "bn3d_branch2a/cond:3"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_49"
  op: "ZerosLike"
  input: "bn3d_branch2a/cond:4"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_50"
  op: "ZerosLike"
  input: "bn3d_branch2a/cond:5"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_51"
  op: "ZerosLike"
  input: "bn3d_branch2a/cond:6"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_52"
  op: "ZerosLike"
  input: "bn3d_branch2a/cond:7"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_53"
  op: "ZerosLike"
  input: "bn3d_branch2a/cond:8"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_54"
  op: "ZerosLike"
  input: "bn3d_branch2a/cond:9"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/bn3d_branch2a/cond_grad/StatelessIf"
  op: "StatelessIf"
  input: "bn3d_branch2a/cond/Squeeze"
  input: "gradients/Relu_7_grad/ReluGrad"
  input: "gradients/zeros_like_46"
  input: "gradients/zeros_like_47"
  input: "gradients/zeros_like_48"
  input: "gradients/zeros_like_49"
  input: "gradients/zeros_like_50"
  input: "gradients/zeros_like_51"
  input: "gradients/zeros_like_52"
  input: "gradients/zeros_like_53"
  input: "gradients/zeros_like_54"
  input: "res3d_branch2a/Conv2D"
  input: "bn3d_branch2a/cond:3"
  input: "bn3d_branch2a/cond:7"
  input: "bn3d_branch2a/cond:8"
  input: "bn3d_branch2a/cond:9"
  input: "bn3d_branch2a/cond:5"
  input: "bn3d_branch2a/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn3d_branch2a_cond_false_876_grad_2617"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn3d_branch2a_cond_true_875_grad_2567"
      }
    }
  }
}
node {
  name: "gradients/bn3d_branch2a/cond_grad/Identity"
  op: "Identity"
  input: "gradients/bn3d_branch2a/cond_grad/StatelessIf"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn3d_branch2a/cond_grad/Identity_1"
  op: "Identity"
  input: "gradients/bn3d_branch2a/cond_grad/StatelessIf:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn3d_branch2a/cond_grad/Identity_2"
  op: "Identity"
  input: "gradients/bn3d_branch2a/cond_grad/StatelessIf:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn3d_branch2a/cond_grad/Identity_3"
  op: "Identity"
  input: "gradients/bn3d_branch2a/cond_grad/StatelessIf:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn3d_branch2a/cond_grad/Identity_4"
  op: "Identity"
  input: "gradients/bn3d_branch2a/cond_grad/StatelessIf:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn3d_branch2a/cond_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/bn3d_branch2a/cond_grad/Identity"
  input: "^gradients/bn3d_branch2a/cond_grad/Identity_1"
  input: "^gradients/bn3d_branch2a/cond_grad/Identity_2"
  input: "^gradients/bn3d_branch2a/cond_grad/Identity_3"
  input: "^gradients/bn3d_branch2a/cond_grad/Identity_4"
  device: "/device:GPU:0"
}
node {
  name: "gradients/bn3d_branch2a/cond_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bn3d_branch2a/cond_grad/Identity"
  input: "^gradients/bn3d_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn3d_branch2a/cond_grad/Identity"
      }
    }
  }
}
node {
  name: "gradients/bn3d_branch2a/cond_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bn3d_branch2a/cond_grad/Identity_1"
  input: "^gradients/bn3d_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn3d_branch2a/cond_grad/Identity_1"
      }
    }
  }
}
node {
  name: "gradients/bn3d_branch2a/cond_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/bn3d_branch2a/cond_grad/Identity_2"
  input: "^gradients/bn3d_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn3d_branch2a/cond_grad/Identity_2"
      }
    }
  }
}
node {
  name: "gradients/bn3d_branch2a/cond_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/bn3d_branch2a/cond_grad/Identity_3"
  input: "^gradients/bn3d_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn3d_branch2a/cond_grad/Identity_3"
      }
    }
  }
}
node {
  name: "gradients/bn3d_branch2a/cond_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/bn3d_branch2a/cond_grad/Identity_4"
  input: "^gradients/bn3d_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn3d_branch2a/cond_grad/Identity_4"
      }
    }
  }
}
node {
  name: "gradients/res3d_branch2a/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_6"
  input: "res3d_branch2a/Conv2D/ReadVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/res3d_branch2a/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/res3d_branch2a/Conv2D_grad/ShapeN"
  input: "res3d_branch2a/Conv2D/ReadVariableOp"
  input: "gradients/bn3d_branch2a/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res3d_branch2a/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_6"
  input: "gradients/res3d_branch2a/Conv2D_grad/ShapeN:1"
  input: "gradients/bn3d_branch2a/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res3d_branch2a/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/res3d_branch2a/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res3d_branch2a/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/res3d_branch2a/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/res3d_branch2a/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/res3d_branch2a/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res3d_branch2a/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/res3d_branch2a/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/res3d_branch2a/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res3d_branch2a/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res3d_branch2a/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/Add_3_grad/tuple/control_dependency_1"
  input: "gradients/res3d_branch2a/Conv2D_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Relu_6_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_2"
  input: "Relu_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add_2_grad/Shape"
  op: "Shape"
  input: "bn2c_branch2b/cond/Identity"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_2_grad/Shape_1"
  op: "Shape"
  input: "Relu_4"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Add_2_grad/Shape"
  input: "gradients/Add_2_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_2_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_6_grad/ReluGrad"
  input: "gradients/Add_2_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/Add_2_grad/Sum"
  input: "gradients/Add_2_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_6_grad/ReluGrad"
  input: "gradients/Add_2_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Add_2_grad/Sum_1"
  input: "gradients/Add_2_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/Add_2_grad/Reshape"
  input: "^gradients/Add_2_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/Add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Add_2_grad/Reshape"
  input: "^gradients/Add_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Add_2_grad/Reshape_1"
  input: "^gradients/Add_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_55"
  op: "ZerosLike"
  input: "bn2c_branch2b/cond:1"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_56"
  op: "ZerosLike"
  input: "bn2c_branch2b/cond:2"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_57"
  op: "ZerosLike"
  input: "bn2c_branch2b/cond:3"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_58"
  op: "ZerosLike"
  input: "bn2c_branch2b/cond:4"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_59"
  op: "ZerosLike"
  input: "bn2c_branch2b/cond:5"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_60"
  op: "ZerosLike"
  input: "bn2c_branch2b/cond:6"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_61"
  op: "ZerosLike"
  input: "bn2c_branch2b/cond:7"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_62"
  op: "ZerosLike"
  input: "bn2c_branch2b/cond:8"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_63"
  op: "ZerosLike"
  input: "bn2c_branch2b/cond:9"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/bn2c_branch2b/cond_grad/StatelessIf"
  op: "StatelessIf"
  input: "bn2c_branch2b/cond/Squeeze"
  input: "gradients/Add_2_grad/tuple/control_dependency"
  input: "gradients/zeros_like_55"
  input: "gradients/zeros_like_56"
  input: "gradients/zeros_like_57"
  input: "gradients/zeros_like_58"
  input: "gradients/zeros_like_59"
  input: "gradients/zeros_like_60"
  input: "gradients/zeros_like_61"
  input: "gradients/zeros_like_62"
  input: "gradients/zeros_like_63"
  input: "res2c_branch2b/Conv2D"
  input: "bn2c_branch2b/cond:3"
  input: "bn2c_branch2b/cond:7"
  input: "bn2c_branch2b/cond:8"
  input: "bn2c_branch2b/cond:9"
  input: "bn2c_branch2b/cond:5"
  input: "bn2c_branch2b/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn2c_branch2b_cond_false_755_grad_2763"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn2c_branch2b_cond_true_754_grad_2713"
      }
    }
  }
}
node {
  name: "gradients/bn2c_branch2b/cond_grad/Identity"
  op: "Identity"
  input: "gradients/bn2c_branch2b/cond_grad/StatelessIf"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn2c_branch2b/cond_grad/Identity_1"
  op: "Identity"
  input: "gradients/bn2c_branch2b/cond_grad/StatelessIf:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn2c_branch2b/cond_grad/Identity_2"
  op: "Identity"
  input: "gradients/bn2c_branch2b/cond_grad/StatelessIf:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn2c_branch2b/cond_grad/Identity_3"
  op: "Identity"
  input: "gradients/bn2c_branch2b/cond_grad/StatelessIf:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn2c_branch2b/cond_grad/Identity_4"
  op: "Identity"
  input: "gradients/bn2c_branch2b/cond_grad/StatelessIf:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn2c_branch2b/cond_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/bn2c_branch2b/cond_grad/Identity"
  input: "^gradients/bn2c_branch2b/cond_grad/Identity_1"
  input: "^gradients/bn2c_branch2b/cond_grad/Identity_2"
  input: "^gradients/bn2c_branch2b/cond_grad/Identity_3"
  input: "^gradients/bn2c_branch2b/cond_grad/Identity_4"
  device: "/device:GPU:0"
}
node {
  name: "gradients/bn2c_branch2b/cond_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bn2c_branch2b/cond_grad/Identity"
  input: "^gradients/bn2c_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn2c_branch2b/cond_grad/Identity"
      }
    }
  }
}
node {
  name: "gradients/bn2c_branch2b/cond_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bn2c_branch2b/cond_grad/Identity_1"
  input: "^gradients/bn2c_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn2c_branch2b/cond_grad/Identity_1"
      }
    }
  }
}
node {
  name: "gradients/bn2c_branch2b/cond_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/bn2c_branch2b/cond_grad/Identity_2"
  input: "^gradients/bn2c_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn2c_branch2b/cond_grad/Identity_2"
      }
    }
  }
}
node {
  name: "gradients/bn2c_branch2b/cond_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/bn2c_branch2b/cond_grad/Identity_3"
  input: "^gradients/bn2c_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn2c_branch2b/cond_grad/Identity_3"
      }
    }
  }
}
node {
  name: "gradients/bn2c_branch2b/cond_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/bn2c_branch2b/cond_grad/Identity_4"
  input: "^gradients/bn2c_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn2c_branch2b/cond_grad/Identity_4"
      }
    }
  }
}
node {
  name: "gradients/res2c_branch2b/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_5"
  input: "res2c_branch2b/Conv2D/ReadVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/res2c_branch2b/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/res2c_branch2b/Conv2D_grad/ShapeN"
  input: "res2c_branch2b/Conv2D/ReadVariableOp"
  input: "gradients/bn2c_branch2b/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res2c_branch2b/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_5"
  input: "gradients/res2c_branch2b/Conv2D_grad/ShapeN:1"
  input: "gradients/bn2c_branch2b/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res2c_branch2b/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/res2c_branch2b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res2c_branch2b/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/res2c_branch2b/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/res2c_branch2b/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/res2c_branch2b/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res2c_branch2b/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/res2c_branch2b/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/res2c_branch2b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res2c_branch2b/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res2c_branch2b/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Relu_5_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/res2c_branch2b/Conv2D_grad/tuple/control_dependency"
  input: "Relu_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_64"
  op: "ZerosLike"
  input: "bn2c_branch2a/cond:1"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_65"
  op: "ZerosLike"
  input: "bn2c_branch2a/cond:2"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_66"
  op: "ZerosLike"
  input: "bn2c_branch2a/cond:3"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_67"
  op: "ZerosLike"
  input: "bn2c_branch2a/cond:4"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_68"
  op: "ZerosLike"
  input: "bn2c_branch2a/cond:5"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_69"
  op: "ZerosLike"
  input: "bn2c_branch2a/cond:6"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_70"
  op: "ZerosLike"
  input: "bn2c_branch2a/cond:7"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_71"
  op: "ZerosLike"
  input: "bn2c_branch2a/cond:8"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_72"
  op: "ZerosLike"
  input: "bn2c_branch2a/cond:9"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/bn2c_branch2a/cond_grad/StatelessIf"
  op: "StatelessIf"
  input: "bn2c_branch2a/cond/Squeeze"
  input: "gradients/Relu_5_grad/ReluGrad"
  input: "gradients/zeros_like_64"
  input: "gradients/zeros_like_65"
  input: "gradients/zeros_like_66"
  input: "gradients/zeros_like_67"
  input: "gradients/zeros_like_68"
  input: "gradients/zeros_like_69"
  input: "gradients/zeros_like_70"
  input: "gradients/zeros_like_71"
  input: "gradients/zeros_like_72"
  input: "res2c_branch2a/Conv2D"
  input: "bn2c_branch2a/cond:3"
  input: "bn2c_branch2a/cond:7"
  input: "bn2c_branch2a/cond:8"
  input: "bn2c_branch2a/cond:9"
  input: "bn2c_branch2a/cond:5"
  input: "bn2c_branch2a/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn2c_branch2a_cond_false_635_grad_2898"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn2c_branch2a_cond_true_634_grad_2848"
      }
    }
  }
}
node {
  name: "gradients/bn2c_branch2a/cond_grad/Identity"
  op: "Identity"
  input: "gradients/bn2c_branch2a/cond_grad/StatelessIf"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn2c_branch2a/cond_grad/Identity_1"
  op: "Identity"
  input: "gradients/bn2c_branch2a/cond_grad/StatelessIf:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn2c_branch2a/cond_grad/Identity_2"
  op: "Identity"
  input: "gradients/bn2c_branch2a/cond_grad/StatelessIf:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn2c_branch2a/cond_grad/Identity_3"
  op: "Identity"
  input: "gradients/bn2c_branch2a/cond_grad/StatelessIf:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn2c_branch2a/cond_grad/Identity_4"
  op: "Identity"
  input: "gradients/bn2c_branch2a/cond_grad/StatelessIf:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn2c_branch2a/cond_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/bn2c_branch2a/cond_grad/Identity"
  input: "^gradients/bn2c_branch2a/cond_grad/Identity_1"
  input: "^gradients/bn2c_branch2a/cond_grad/Identity_2"
  input: "^gradients/bn2c_branch2a/cond_grad/Identity_3"
  input: "^gradients/bn2c_branch2a/cond_grad/Identity_4"
  device: "/device:GPU:0"
}
node {
  name: "gradients/bn2c_branch2a/cond_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bn2c_branch2a/cond_grad/Identity"
  input: "^gradients/bn2c_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn2c_branch2a/cond_grad/Identity"
      }
    }
  }
}
node {
  name: "gradients/bn2c_branch2a/cond_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bn2c_branch2a/cond_grad/Identity_1"
  input: "^gradients/bn2c_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn2c_branch2a/cond_grad/Identity_1"
      }
    }
  }
}
node {
  name: "gradients/bn2c_branch2a/cond_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/bn2c_branch2a/cond_grad/Identity_2"
  input: "^gradients/bn2c_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn2c_branch2a/cond_grad/Identity_2"
      }
    }
  }
}
node {
  name: "gradients/bn2c_branch2a/cond_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/bn2c_branch2a/cond_grad/Identity_3"
  input: "^gradients/bn2c_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn2c_branch2a/cond_grad/Identity_3"
      }
    }
  }
}
node {
  name: "gradients/bn2c_branch2a/cond_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/bn2c_branch2a/cond_grad/Identity_4"
  input: "^gradients/bn2c_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn2c_branch2a/cond_grad/Identity_4"
      }
    }
  }
}
node {
  name: "gradients/res2c_branch2a/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_4"
  input: "res2c_branch2a/Conv2D/ReadVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/res2c_branch2a/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/res2c_branch2a/Conv2D_grad/ShapeN"
  input: "res2c_branch2a/Conv2D/ReadVariableOp"
  input: "gradients/bn2c_branch2a/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res2c_branch2a/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_4"
  input: "gradients/res2c_branch2a/Conv2D_grad/ShapeN:1"
  input: "gradients/bn2c_branch2a/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res2c_branch2a/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/res2c_branch2a/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res2c_branch2a/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/res2c_branch2a/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/res2c_branch2a/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/res2c_branch2a/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res2c_branch2a/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/res2c_branch2a/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/res2c_branch2a/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res2c_branch2a/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res2c_branch2a/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/Add_2_grad/tuple/control_dependency_1"
  input: "gradients/res2c_branch2a/Conv2D_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Relu_4_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_3"
  input: "Relu_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add_1_grad/Shape"
  op: "Shape"
  input: "bn1b_branch2b/cond/Identity"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_1_grad/Shape_1"
  op: "Shape"
  input: "Relu_2"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Add_1_grad/Shape"
  input: "gradients/Add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_4_grad/ReluGrad"
  input: "gradients/Add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Add_1_grad/Sum"
  input: "gradients/Add_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_4_grad/ReluGrad"
  input: "gradients/Add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Add_1_grad/Sum_1"
  input: "gradients/Add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/Add_1_grad/Reshape"
  input: "^gradients/Add_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Add_1_grad/Reshape"
  input: "^gradients/Add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Add_1_grad/Reshape_1"
  input: "^gradients/Add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_73"
  op: "ZerosLike"
  input: "bn1b_branch2b/cond:1"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_74"
  op: "ZerosLike"
  input: "bn1b_branch2b/cond:2"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_75"
  op: "ZerosLike"
  input: "bn1b_branch2b/cond:3"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_76"
  op: "ZerosLike"
  input: "bn1b_branch2b/cond:4"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_77"
  op: "ZerosLike"
  input: "bn1b_branch2b/cond:5"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_78"
  op: "ZerosLike"
  input: "bn1b_branch2b/cond:6"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_79"
  op: "ZerosLike"
  input: "bn1b_branch2b/cond:7"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_80"
  op: "ZerosLike"
  input: "bn1b_branch2b/cond:8"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_81"
  op: "ZerosLike"
  input: "bn1b_branch2b/cond:9"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/bn1b_branch2b/cond_grad/StatelessIf"
  op: "StatelessIf"
  input: "bn1b_branch2b/cond/Squeeze"
  input: "gradients/Add_1_grad/tuple/control_dependency"
  input: "gradients/zeros_like_73"
  input: "gradients/zeros_like_74"
  input: "gradients/zeros_like_75"
  input: "gradients/zeros_like_76"
  input: "gradients/zeros_like_77"
  input: "gradients/zeros_like_78"
  input: "gradients/zeros_like_79"
  input: "gradients/zeros_like_80"
  input: "gradients/zeros_like_81"
  input: "res1b_branch2b/Conv2D"
  input: "bn1b_branch2b/cond:3"
  input: "bn1b_branch2b/cond:7"
  input: "bn1b_branch2b/cond:8"
  input: "bn1b_branch2b/cond:9"
  input: "bn1b_branch2b/cond:5"
  input: "bn1b_branch2b/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn1b_branch2b_cond_false_514_grad_3044"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn1b_branch2b_cond_true_513_grad_2994"
      }
    }
  }
}
node {
  name: "gradients/bn1b_branch2b/cond_grad/Identity"
  op: "Identity"
  input: "gradients/bn1b_branch2b/cond_grad/StatelessIf"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn1b_branch2b/cond_grad/Identity_1"
  op: "Identity"
  input: "gradients/bn1b_branch2b/cond_grad/StatelessIf:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn1b_branch2b/cond_grad/Identity_2"
  op: "Identity"
  input: "gradients/bn1b_branch2b/cond_grad/StatelessIf:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn1b_branch2b/cond_grad/Identity_3"
  op: "Identity"
  input: "gradients/bn1b_branch2b/cond_grad/StatelessIf:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn1b_branch2b/cond_grad/Identity_4"
  op: "Identity"
  input: "gradients/bn1b_branch2b/cond_grad/StatelessIf:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn1b_branch2b/cond_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/bn1b_branch2b/cond_grad/Identity"
  input: "^gradients/bn1b_branch2b/cond_grad/Identity_1"
  input: "^gradients/bn1b_branch2b/cond_grad/Identity_2"
  input: "^gradients/bn1b_branch2b/cond_grad/Identity_3"
  input: "^gradients/bn1b_branch2b/cond_grad/Identity_4"
  device: "/device:GPU:0"
}
node {
  name: "gradients/bn1b_branch2b/cond_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bn1b_branch2b/cond_grad/Identity"
  input: "^gradients/bn1b_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn1b_branch2b/cond_grad/Identity"
      }
    }
  }
}
node {
  name: "gradients/bn1b_branch2b/cond_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bn1b_branch2b/cond_grad/Identity_1"
  input: "^gradients/bn1b_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn1b_branch2b/cond_grad/Identity_1"
      }
    }
  }
}
node {
  name: "gradients/bn1b_branch2b/cond_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/bn1b_branch2b/cond_grad/Identity_2"
  input: "^gradients/bn1b_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn1b_branch2b/cond_grad/Identity_2"
      }
    }
  }
}
node {
  name: "gradients/bn1b_branch2b/cond_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/bn1b_branch2b/cond_grad/Identity_3"
  input: "^gradients/bn1b_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn1b_branch2b/cond_grad/Identity_3"
      }
    }
  }
}
node {
  name: "gradients/bn1b_branch2b/cond_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/bn1b_branch2b/cond_grad/Identity_4"
  input: "^gradients/bn1b_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn1b_branch2b/cond_grad/Identity_4"
      }
    }
  }
}
node {
  name: "gradients/res1b_branch2b/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_3"
  input: "res1b_branch2b/Conv2D/ReadVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/res1b_branch2b/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/res1b_branch2b/Conv2D_grad/ShapeN"
  input: "res1b_branch2b/Conv2D/ReadVariableOp"
  input: "gradients/bn1b_branch2b/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res1b_branch2b/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_3"
  input: "gradients/res1b_branch2b/Conv2D_grad/ShapeN:1"
  input: "gradients/bn1b_branch2b/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res1b_branch2b/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/res1b_branch2b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res1b_branch2b/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/res1b_branch2b/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/res1b_branch2b/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/res1b_branch2b/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res1b_branch2b/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/res1b_branch2b/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/res1b_branch2b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res1b_branch2b/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res1b_branch2b/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Relu_3_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/res1b_branch2b/Conv2D_grad/tuple/control_dependency"
  input: "Relu_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_82"
  op: "ZerosLike"
  input: "bn1b_branch2a/cond:1"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_83"
  op: "ZerosLike"
  input: "bn1b_branch2a/cond:2"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_84"
  op: "ZerosLike"
  input: "bn1b_branch2a/cond:3"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_85"
  op: "ZerosLike"
  input: "bn1b_branch2a/cond:4"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_86"
  op: "ZerosLike"
  input: "bn1b_branch2a/cond:5"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_87"
  op: "ZerosLike"
  input: "bn1b_branch2a/cond:6"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_88"
  op: "ZerosLike"
  input: "bn1b_branch2a/cond:7"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_89"
  op: "ZerosLike"
  input: "bn1b_branch2a/cond:8"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_90"
  op: "ZerosLike"
  input: "bn1b_branch2a/cond:9"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/bn1b_branch2a/cond_grad/StatelessIf"
  op: "StatelessIf"
  input: "bn1b_branch2a/cond/Squeeze"
  input: "gradients/Relu_3_grad/ReluGrad"
  input: "gradients/zeros_like_82"
  input: "gradients/zeros_like_83"
  input: "gradients/zeros_like_84"
  input: "gradients/zeros_like_85"
  input: "gradients/zeros_like_86"
  input: "gradients/zeros_like_87"
  input: "gradients/zeros_like_88"
  input: "gradients/zeros_like_89"
  input: "gradients/zeros_like_90"
  input: "res1b_branch2a/Conv2D"
  input: "bn1b_branch2a/cond:3"
  input: "bn1b_branch2a/cond:7"
  input: "bn1b_branch2a/cond:8"
  input: "bn1b_branch2a/cond:9"
  input: "bn1b_branch2a/cond:5"
  input: "bn1b_branch2a/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn1b_branch2a_cond_false_394_grad_3179"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn1b_branch2a_cond_true_393_grad_3129"
      }
    }
  }
}
node {
  name: "gradients/bn1b_branch2a/cond_grad/Identity"
  op: "Identity"
  input: "gradients/bn1b_branch2a/cond_grad/StatelessIf"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn1b_branch2a/cond_grad/Identity_1"
  op: "Identity"
  input: "gradients/bn1b_branch2a/cond_grad/StatelessIf:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn1b_branch2a/cond_grad/Identity_2"
  op: "Identity"
  input: "gradients/bn1b_branch2a/cond_grad/StatelessIf:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn1b_branch2a/cond_grad/Identity_3"
  op: "Identity"
  input: "gradients/bn1b_branch2a/cond_grad/StatelessIf:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn1b_branch2a/cond_grad/Identity_4"
  op: "Identity"
  input: "gradients/bn1b_branch2a/cond_grad/StatelessIf:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn1b_branch2a/cond_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/bn1b_branch2a/cond_grad/Identity"
  input: "^gradients/bn1b_branch2a/cond_grad/Identity_1"
  input: "^gradients/bn1b_branch2a/cond_grad/Identity_2"
  input: "^gradients/bn1b_branch2a/cond_grad/Identity_3"
  input: "^gradients/bn1b_branch2a/cond_grad/Identity_4"
  device: "/device:GPU:0"
}
node {
  name: "gradients/bn1b_branch2a/cond_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bn1b_branch2a/cond_grad/Identity"
  input: "^gradients/bn1b_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn1b_branch2a/cond_grad/Identity"
      }
    }
  }
}
node {
  name: "gradients/bn1b_branch2a/cond_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bn1b_branch2a/cond_grad/Identity_1"
  input: "^gradients/bn1b_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn1b_branch2a/cond_grad/Identity_1"
      }
    }
  }
}
node {
  name: "gradients/bn1b_branch2a/cond_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/bn1b_branch2a/cond_grad/Identity_2"
  input: "^gradients/bn1b_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn1b_branch2a/cond_grad/Identity_2"
      }
    }
  }
}
node {
  name: "gradients/bn1b_branch2a/cond_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/bn1b_branch2a/cond_grad/Identity_3"
  input: "^gradients/bn1b_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn1b_branch2a/cond_grad/Identity_3"
      }
    }
  }
}
node {
  name: "gradients/bn1b_branch2a/cond_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/bn1b_branch2a/cond_grad/Identity_4"
  input: "^gradients/bn1b_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn1b_branch2a/cond_grad/Identity_4"
      }
    }
  }
}
node {
  name: "gradients/res1b_branch2a/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_2"
  input: "res1b_branch2a/Conv2D/ReadVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/res1b_branch2a/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/res1b_branch2a/Conv2D_grad/ShapeN"
  input: "res1b_branch2a/Conv2D/ReadVariableOp"
  input: "gradients/bn1b_branch2a/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res1b_branch2a/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_2"
  input: "gradients/res1b_branch2a/Conv2D_grad/ShapeN:1"
  input: "gradients/bn1b_branch2a/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res1b_branch2a/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/res1b_branch2a/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res1b_branch2a/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/res1b_branch2a/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/res1b_branch2a/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/res1b_branch2a/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res1b_branch2a/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/res1b_branch2a/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/res1b_branch2a/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res1b_branch2a/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res1b_branch2a/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/Add_1_grad/tuple/control_dependency_1"
  input: "gradients/res1b_branch2a/Conv2D_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Relu_2_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_4"
  input: "Relu_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add_grad/Shape"
  op: "Shape"
  input: "bn0a_branch2b/cond/Identity"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_grad/Shape_1"
  op: "Shape"
  input: "Relu"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Add_grad/Shape"
  input: "gradients/Add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_2_grad/ReluGrad"
  input: "gradients/Add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Add_grad/Sum"
  input: "gradients/Add_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_2_grad/ReluGrad"
  input: "gradients/Add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Add_grad/Sum_1"
  input: "gradients/Add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/Add_grad/Reshape"
  input: "^gradients/Add_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Add_grad/Reshape"
  input: "^gradients/Add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Add_grad/Reshape_1"
  input: "^gradients/Add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_91"
  op: "ZerosLike"
  input: "bn0a_branch2b/cond:1"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_92"
  op: "ZerosLike"
  input: "bn0a_branch2b/cond:2"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_93"
  op: "ZerosLike"
  input: "bn0a_branch2b/cond:3"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_94"
  op: "ZerosLike"
  input: "bn0a_branch2b/cond:4"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_95"
  op: "ZerosLike"
  input: "bn0a_branch2b/cond:5"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_96"
  op: "ZerosLike"
  input: "bn0a_branch2b/cond:6"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_97"
  op: "ZerosLike"
  input: "bn0a_branch2b/cond:7"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_98"
  op: "ZerosLike"
  input: "bn0a_branch2b/cond:8"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_99"
  op: "ZerosLike"
  input: "bn0a_branch2b/cond:9"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/bn0a_branch2b/cond_grad/StatelessIf"
  op: "StatelessIf"
  input: "bn0a_branch2b/cond/Squeeze"
  input: "gradients/Add_grad/tuple/control_dependency"
  input: "gradients/zeros_like_91"
  input: "gradients/zeros_like_92"
  input: "gradients/zeros_like_93"
  input: "gradients/zeros_like_94"
  input: "gradients/zeros_like_95"
  input: "gradients/zeros_like_96"
  input: "gradients/zeros_like_97"
  input: "gradients/zeros_like_98"
  input: "gradients/zeros_like_99"
  input: "res0a_branch2b/Conv2D"
  input: "bn0a_branch2b/cond:3"
  input: "bn0a_branch2b/cond:7"
  input: "bn0a_branch2b/cond:8"
  input: "bn0a_branch2b/cond:9"
  input: "bn0a_branch2b/cond:5"
  input: "bn0a_branch2b/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn0a_branch2b_cond_false_273_grad_3325"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn0a_branch2b_cond_true_272_grad_3275"
      }
    }
  }
}
node {
  name: "gradients/bn0a_branch2b/cond_grad/Identity"
  op: "Identity"
  input: "gradients/bn0a_branch2b/cond_grad/StatelessIf"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn0a_branch2b/cond_grad/Identity_1"
  op: "Identity"
  input: "gradients/bn0a_branch2b/cond_grad/StatelessIf:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn0a_branch2b/cond_grad/Identity_2"
  op: "Identity"
  input: "gradients/bn0a_branch2b/cond_grad/StatelessIf:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn0a_branch2b/cond_grad/Identity_3"
  op: "Identity"
  input: "gradients/bn0a_branch2b/cond_grad/StatelessIf:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn0a_branch2b/cond_grad/Identity_4"
  op: "Identity"
  input: "gradients/bn0a_branch2b/cond_grad/StatelessIf:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn0a_branch2b/cond_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/bn0a_branch2b/cond_grad/Identity"
  input: "^gradients/bn0a_branch2b/cond_grad/Identity_1"
  input: "^gradients/bn0a_branch2b/cond_grad/Identity_2"
  input: "^gradients/bn0a_branch2b/cond_grad/Identity_3"
  input: "^gradients/bn0a_branch2b/cond_grad/Identity_4"
  device: "/device:GPU:0"
}
node {
  name: "gradients/bn0a_branch2b/cond_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bn0a_branch2b/cond_grad/Identity"
  input: "^gradients/bn0a_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn0a_branch2b/cond_grad/Identity"
      }
    }
  }
}
node {
  name: "gradients/bn0a_branch2b/cond_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bn0a_branch2b/cond_grad/Identity_1"
  input: "^gradients/bn0a_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn0a_branch2b/cond_grad/Identity_1"
      }
    }
  }
}
node {
  name: "gradients/bn0a_branch2b/cond_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/bn0a_branch2b/cond_grad/Identity_2"
  input: "^gradients/bn0a_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn0a_branch2b/cond_grad/Identity_2"
      }
    }
  }
}
node {
  name: "gradients/bn0a_branch2b/cond_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/bn0a_branch2b/cond_grad/Identity_3"
  input: "^gradients/bn0a_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn0a_branch2b/cond_grad/Identity_3"
      }
    }
  }
}
node {
  name: "gradients/bn0a_branch2b/cond_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/bn0a_branch2b/cond_grad/Identity_4"
  input: "^gradients/bn0a_branch2b/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn0a_branch2b/cond_grad/Identity_4"
      }
    }
  }
}
node {
  name: "gradients/res0a_branch2b/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_1"
  input: "res0a_branch2b/Conv2D/ReadVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/res0a_branch2b/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/res0a_branch2b/Conv2D_grad/ShapeN"
  input: "res0a_branch2b/Conv2D/ReadVariableOp"
  input: "gradients/bn0a_branch2b/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res0a_branch2b/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_1"
  input: "gradients/res0a_branch2b/Conv2D_grad/ShapeN:1"
  input: "gradients/bn0a_branch2b/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res0a_branch2b/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/res0a_branch2b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res0a_branch2b/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/res0a_branch2b/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/res0a_branch2b/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/res0a_branch2b/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res0a_branch2b/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/res0a_branch2b/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/res0a_branch2b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res0a_branch2b/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res0a_branch2b/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/res0a_branch2b/Conv2D_grad/tuple/control_dependency"
  input: "Relu_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_100"
  op: "ZerosLike"
  input: "bn0a_branch2a/cond:1"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_101"
  op: "ZerosLike"
  input: "bn0a_branch2a/cond:2"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_102"
  op: "ZerosLike"
  input: "bn0a_branch2a/cond:3"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_103"
  op: "ZerosLike"
  input: "bn0a_branch2a/cond:4"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_104"
  op: "ZerosLike"
  input: "bn0a_branch2a/cond:5"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_105"
  op: "ZerosLike"
  input: "bn0a_branch2a/cond:6"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_106"
  op: "ZerosLike"
  input: "bn0a_branch2a/cond:7"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_107"
  op: "ZerosLike"
  input: "bn0a_branch2a/cond:8"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_108"
  op: "ZerosLike"
  input: "bn0a_branch2a/cond:9"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/bn0a_branch2a/cond_grad/StatelessIf"
  op: "StatelessIf"
  input: "bn0a_branch2a/cond/Squeeze"
  input: "gradients/Relu_1_grad/ReluGrad"
  input: "gradients/zeros_like_100"
  input: "gradients/zeros_like_101"
  input: "gradients/zeros_like_102"
  input: "gradients/zeros_like_103"
  input: "gradients/zeros_like_104"
  input: "gradients/zeros_like_105"
  input: "gradients/zeros_like_106"
  input: "gradients/zeros_like_107"
  input: "gradients/zeros_like_108"
  input: "res0a_branch2a/Conv2D"
  input: "bn0a_branch2a/cond:3"
  input: "bn0a_branch2a/cond:7"
  input: "bn0a_branch2a/cond:8"
  input: "bn0a_branch2a/cond:9"
  input: "bn0a_branch2a/cond:5"
  input: "bn0a_branch2a/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "bn0a_branch2a_cond_false_153_grad_3460"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "bn0a_branch2a_cond_true_152_grad_3410"
      }
    }
  }
}
node {
  name: "gradients/bn0a_branch2a/cond_grad/Identity"
  op: "Identity"
  input: "gradients/bn0a_branch2a/cond_grad/StatelessIf"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn0a_branch2a/cond_grad/Identity_1"
  op: "Identity"
  input: "gradients/bn0a_branch2a/cond_grad/StatelessIf:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn0a_branch2a/cond_grad/Identity_2"
  op: "Identity"
  input: "gradients/bn0a_branch2a/cond_grad/StatelessIf:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn0a_branch2a/cond_grad/Identity_3"
  op: "Identity"
  input: "gradients/bn0a_branch2a/cond_grad/StatelessIf:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn0a_branch2a/cond_grad/Identity_4"
  op: "Identity"
  input: "gradients/bn0a_branch2a/cond_grad/StatelessIf:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bn0a_branch2a/cond_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/bn0a_branch2a/cond_grad/Identity"
  input: "^gradients/bn0a_branch2a/cond_grad/Identity_1"
  input: "^gradients/bn0a_branch2a/cond_grad/Identity_2"
  input: "^gradients/bn0a_branch2a/cond_grad/Identity_3"
  input: "^gradients/bn0a_branch2a/cond_grad/Identity_4"
  device: "/device:GPU:0"
}
node {
  name: "gradients/bn0a_branch2a/cond_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bn0a_branch2a/cond_grad/Identity"
  input: "^gradients/bn0a_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn0a_branch2a/cond_grad/Identity"
      }
    }
  }
}
node {
  name: "gradients/bn0a_branch2a/cond_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bn0a_branch2a/cond_grad/Identity_1"
  input: "^gradients/bn0a_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn0a_branch2a/cond_grad/Identity_1"
      }
    }
  }
}
node {
  name: "gradients/bn0a_branch2a/cond_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/bn0a_branch2a/cond_grad/Identity_2"
  input: "^gradients/bn0a_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn0a_branch2a/cond_grad/Identity_2"
      }
    }
  }
}
node {
  name: "gradients/bn0a_branch2a/cond_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/bn0a_branch2a/cond_grad/Identity_3"
  input: "^gradients/bn0a_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn0a_branch2a/cond_grad/Identity_3"
      }
    }
  }
}
node {
  name: "gradients/bn0a_branch2a/cond_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/bn0a_branch2a/cond_grad/Identity_4"
  input: "^gradients/bn0a_branch2a/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bn0a_branch2a/cond_grad/Identity_4"
      }
    }
  }
}
node {
  name: "gradients/res0a_branch2a/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu"
  input: "res0a_branch2a/Conv2D/ReadVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/res0a_branch2a/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/res0a_branch2a/Conv2D_grad/ShapeN"
  input: "res0a_branch2a/Conv2D/ReadVariableOp"
  input: "gradients/bn0a_branch2a/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res0a_branch2a/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu"
  input: "gradients/res0a_branch2a/Conv2D_grad/ShapeN:1"
  input: "gradients/bn0a_branch2a/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/res0a_branch2a/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/res0a_branch2a/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res0a_branch2a/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/res0a_branch2a/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/res0a_branch2a/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/res0a_branch2a/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res0a_branch2a/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/res0a_branch2a/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/res0a_branch2a/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/res0a_branch2a/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/res0a_branch2a/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/Add_grad/tuple/control_dependency_1"
  input: "gradients/res0a_branch2a/Conv2D_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_5"
  input: "Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_109"
  op: "ZerosLike"
  input: "conv_bn/cond:1"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_110"
  op: "ZerosLike"
  input: "conv_bn/cond:2"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_111"
  op: "ZerosLike"
  input: "conv_bn/cond:3"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_112"
  op: "ZerosLike"
  input: "conv_bn/cond:4"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_113"
  op: "ZerosLike"
  input: "conv_bn/cond:5"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_114"
  op: "ZerosLike"
  input: "conv_bn/cond:6"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_115"
  op: "ZerosLike"
  input: "conv_bn/cond:7"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_116"
  op: "ZerosLike"
  input: "conv_bn/cond:8"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_117"
  op: "ZerosLike"
  input: "conv_bn/cond:9"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/conv_bn/cond_grad/StatelessIf"
  op: "StatelessIf"
  input: "conv_bn/cond/Squeeze"
  input: "gradients/Relu_grad/ReluGrad"
  input: "gradients/zeros_like_109"
  input: "gradients/zeros_like_110"
  input: "gradients/zeros_like_111"
  input: "gradients/zeros_like_112"
  input: "gradients/zeros_like_113"
  input: "gradients/zeros_like_114"
  input: "gradients/zeros_like_115"
  input: "gradients/zeros_like_116"
  input: "gradients/zeros_like_117"
  input: "conv/Conv2D"
  input: "conv_bn/cond:3"
  input: "conv_bn/cond:7"
  input: "conv_bn/cond:8"
  input: "conv_bn/cond:9"
  input: "conv_bn/cond:5"
  input: "conv_bn/cond:6"
  device: "/device:GPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "conv_bn_cond_false_33_grad_3596"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
        shape {
          dim {
            size: 7
          }
        }
        shape {
          dim {
            size: 7
          }
        }
        shape {
          dim {
            size: 7
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "conv_bn_cond_true_32_grad_3546"
      }
    }
  }
}
node {
  name: "gradients/conv_bn/cond_grad/Identity"
  op: "Identity"
  input: "gradients/conv_bn/cond_grad/StatelessIf"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/conv_bn/cond_grad/Identity_1"
  op: "Identity"
  input: "gradients/conv_bn/cond_grad/StatelessIf:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/conv_bn/cond_grad/Identity_2"
  op: "Identity"
  input: "gradients/conv_bn/cond_grad/StatelessIf:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/conv_bn/cond_grad/Identity_3"
  op: "Identity"
  input: "gradients/conv_bn/cond_grad/StatelessIf:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/conv_bn/cond_grad/Identity_4"
  op: "Identity"
  input: "gradients/conv_bn/cond_grad/StatelessIf:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/conv_bn/cond_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/conv_bn/cond_grad/Identity"
  input: "^gradients/conv_bn/cond_grad/Identity_1"
  input: "^gradients/conv_bn/cond_grad/Identity_2"
  input: "^gradients/conv_bn/cond_grad/Identity_3"
  input: "^gradients/conv_bn/cond_grad/Identity_4"
  device: "/device:GPU:0"
}
node {
  name: "gradients/conv_bn/cond_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_bn/cond_grad/Identity"
  input: "^gradients/conv_bn/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_bn/cond_grad/Identity"
      }
    }
  }
}
node {
  name: "gradients/conv_bn/cond_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_bn/cond_grad/Identity_1"
  input: "^gradients/conv_bn/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_bn/cond_grad/Identity_1"
      }
    }
  }
}
node {
  name: "gradients/conv_bn/cond_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/conv_bn/cond_grad/Identity_2"
  input: "^gradients/conv_bn/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_bn/cond_grad/Identity_2"
      }
    }
  }
}
node {
  name: "gradients/conv_bn/cond_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/conv_bn/cond_grad/Identity_3"
  input: "^gradients/conv_bn/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_bn/cond_grad/Identity_3"
      }
    }
  }
}
node {
  name: "gradients/conv_bn/cond_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/conv_bn/cond_grad/Identity_4"
  input: "^gradients/conv_bn/cond_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_bn/cond_grad/Identity_4"
      }
    }
  }
}
node {
  name: "gradients/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "input_state"
  input: "conv/Conv2D/ReadVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv/Conv2D_grad/ShapeN"
  input: "conv/Conv2D/ReadVariableOp"
  input: "gradients/conv_bn/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "input_state"
  input: "gradients/conv/Conv2D_grad/ShapeN:1"
  input: "gradients/conv_bn/cond_grad/tuple/control_dependency_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^gradients/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "beta1_power/Initializer/initial_value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta1_power"
    }
  }
}
node {
  name: "beta1_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "beta1_power/Initializer/initial_value"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/Initializer/initial_value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta2_power"
    }
  }
}
node {
  name: "beta2_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "beta2_power/Initializer/initial_value"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta2_power"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv/kernel/optimize/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\014\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv/kernel/optimize/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv/kernel/optimize/Initializer/zeros"
  op: "Fill"
  input: "conv/kernel/optimize/Initializer/zeros/shape_as_tensor"
  input: "conv/kernel/optimize/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv/kernel/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 12
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv/kernel/optimize"
    }
  }
}
node {
  name: "conv/kernel/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
}
node {
  name: "conv/kernel/optimize/Assign"
  op: "AssignVariableOp"
  input: "conv/kernel/optimize"
  input: "conv/kernel/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv/kernel/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\014\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv/kernel/optimize_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv/kernel/optimize_1/Initializer/zeros"
  op: "Fill"
  input: "conv/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  input: "conv/kernel/optimize_1/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv/kernel/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 12
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv/kernel/optimize_1"
    }
  }
}
node {
  name: "conv/kernel/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
}
node {
  name: "conv/kernel/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "conv/kernel/optimize_1"
  input: "conv/kernel/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv/kernel/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/gamma/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_bn/gamma/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_bn/gamma/optimize"
    }
  }
}
node {
  name: "conv_bn/gamma/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_bn/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_bn/gamma/optimize/Assign"
  op: "AssignVariableOp"
  input: "conv_bn/gamma/optimize"
  input: "conv_bn/gamma/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/gamma/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_bn/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/gamma/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_bn/gamma/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_bn/gamma/optimize_1"
    }
  }
}
node {
  name: "conv_bn/gamma/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_bn/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_bn/gamma/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "conv_bn/gamma/optimize_1"
  input: "conv_bn/gamma/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/gamma/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_bn/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/beta/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_bn/beta/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_bn/beta/optimize"
    }
  }
}
node {
  name: "conv_bn/beta/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_bn/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/beta"
      }
    }
  }
}
node {
  name: "conv_bn/beta/optimize/Assign"
  op: "AssignVariableOp"
  input: "conv_bn/beta/optimize"
  input: "conv_bn/beta/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/beta/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_bn/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/beta/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_bn/beta/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_bn/beta/optimize_1"
    }
  }
}
node {
  name: "conv_bn/beta/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_bn/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/beta"
      }
    }
  }
}
node {
  name: "conv_bn/beta/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "conv_bn/beta/optimize_1"
  input: "conv_bn/beta/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bn/beta/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_bn/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res0a_branch2a/kernel/optimize/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res0a_branch2a/kernel/optimize/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res0a_branch2a/kernel/optimize/Initializer/zeros"
  op: "Fill"
  input: "res0a_branch2a/kernel/optimize/Initializer/zeros/shape_as_tensor"
  input: "res0a_branch2a/kernel/optimize/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res0a_branch2a/kernel/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res0a_branch2a/kernel/optimize"
    }
  }
}
node {
  name: "res0a_branch2a/kernel/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res0a_branch2a/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res0a_branch2a/kernel/optimize/Assign"
  op: "AssignVariableOp"
  input: "res0a_branch2a/kernel/optimize"
  input: "res0a_branch2a/kernel/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res0a_branch2a/kernel/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res0a_branch2a/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res0a_branch2a/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res0a_branch2a/kernel/optimize_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res0a_branch2a/kernel/optimize_1/Initializer/zeros"
  op: "Fill"
  input: "res0a_branch2a/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  input: "res0a_branch2a/kernel/optimize_1/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res0a_branch2a/kernel/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res0a_branch2a/kernel/optimize_1"
    }
  }
}
node {
  name: "res0a_branch2a/kernel/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res0a_branch2a/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res0a_branch2a/kernel/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "res0a_branch2a/kernel/optimize_1"
  input: "res0a_branch2a/kernel/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res0a_branch2a/kernel/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res0a_branch2a/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/gamma/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn0a_branch2a/gamma/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn0a_branch2a/gamma/optimize"
    }
  }
}
node {
  name: "bn0a_branch2a/gamma/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn0a_branch2a/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/gamma"
      }
    }
  }
}
node {
  name: "bn0a_branch2a/gamma/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn0a_branch2a/gamma/optimize"
  input: "bn0a_branch2a/gamma/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/gamma/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2a/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/gamma/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn0a_branch2a/gamma/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn0a_branch2a/gamma/optimize_1"
    }
  }
}
node {
  name: "bn0a_branch2a/gamma/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn0a_branch2a/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/gamma"
      }
    }
  }
}
node {
  name: "bn0a_branch2a/gamma/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn0a_branch2a/gamma/optimize_1"
  input: "bn0a_branch2a/gamma/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/gamma/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2a/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/beta/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn0a_branch2a/beta/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn0a_branch2a/beta/optimize"
    }
  }
}
node {
  name: "bn0a_branch2a/beta/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn0a_branch2a/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
}
node {
  name: "bn0a_branch2a/beta/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn0a_branch2a/beta/optimize"
  input: "bn0a_branch2a/beta/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/beta/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2a/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/beta/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn0a_branch2a/beta/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn0a_branch2a/beta/optimize_1"
    }
  }
}
node {
  name: "bn0a_branch2a/beta/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn0a_branch2a/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
}
node {
  name: "bn0a_branch2a/beta/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn0a_branch2a/beta/optimize_1"
  input: "bn0a_branch2a/beta/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2a/beta/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2a/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res0a_branch2b/kernel/optimize/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res0a_branch2b/kernel/optimize/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res0a_branch2b/kernel/optimize/Initializer/zeros"
  op: "Fill"
  input: "res0a_branch2b/kernel/optimize/Initializer/zeros/shape_as_tensor"
  input: "res0a_branch2b/kernel/optimize/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res0a_branch2b/kernel/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res0a_branch2b/kernel/optimize"
    }
  }
}
node {
  name: "res0a_branch2b/kernel/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res0a_branch2b/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res0a_branch2b/kernel/optimize/Assign"
  op: "AssignVariableOp"
  input: "res0a_branch2b/kernel/optimize"
  input: "res0a_branch2b/kernel/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res0a_branch2b/kernel/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res0a_branch2b/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res0a_branch2b/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res0a_branch2b/kernel/optimize_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res0a_branch2b/kernel/optimize_1/Initializer/zeros"
  op: "Fill"
  input: "res0a_branch2b/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  input: "res0a_branch2b/kernel/optimize_1/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res0a_branch2b/kernel/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res0a_branch2b/kernel/optimize_1"
    }
  }
}
node {
  name: "res0a_branch2b/kernel/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res0a_branch2b/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res0a_branch2b/kernel/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "res0a_branch2b/kernel/optimize_1"
  input: "res0a_branch2b/kernel/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res0a_branch2b/kernel/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res0a_branch2b/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/gamma/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn0a_branch2b/gamma/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn0a_branch2b/gamma/optimize"
    }
  }
}
node {
  name: "bn0a_branch2b/gamma/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn0a_branch2b/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/gamma"
      }
    }
  }
}
node {
  name: "bn0a_branch2b/gamma/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn0a_branch2b/gamma/optimize"
  input: "bn0a_branch2b/gamma/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/gamma/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2b/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/gamma/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn0a_branch2b/gamma/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn0a_branch2b/gamma/optimize_1"
    }
  }
}
node {
  name: "bn0a_branch2b/gamma/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn0a_branch2b/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/gamma"
      }
    }
  }
}
node {
  name: "bn0a_branch2b/gamma/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn0a_branch2b/gamma/optimize_1"
  input: "bn0a_branch2b/gamma/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/gamma/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2b/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/beta/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn0a_branch2b/beta/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn0a_branch2b/beta/optimize"
    }
  }
}
node {
  name: "bn0a_branch2b/beta/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn0a_branch2b/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/beta"
      }
    }
  }
}
node {
  name: "bn0a_branch2b/beta/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn0a_branch2b/beta/optimize"
  input: "bn0a_branch2b/beta/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/beta/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2b/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/beta/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn0a_branch2b/beta/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn0a_branch2b/beta/optimize_1"
    }
  }
}
node {
  name: "bn0a_branch2b/beta/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn0a_branch2b/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/beta"
      }
    }
  }
}
node {
  name: "bn0a_branch2b/beta/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn0a_branch2b/beta/optimize_1"
  input: "bn0a_branch2b/beta/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn0a_branch2b/beta/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn0a_branch2b/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res1b_branch2a/kernel/optimize/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res1b_branch2a/kernel/optimize/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res1b_branch2a/kernel/optimize/Initializer/zeros"
  op: "Fill"
  input: "res1b_branch2a/kernel/optimize/Initializer/zeros/shape_as_tensor"
  input: "res1b_branch2a/kernel/optimize/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res1b_branch2a/kernel/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res1b_branch2a/kernel/optimize"
    }
  }
}
node {
  name: "res1b_branch2a/kernel/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res1b_branch2a/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res1b_branch2a/kernel/optimize/Assign"
  op: "AssignVariableOp"
  input: "res1b_branch2a/kernel/optimize"
  input: "res1b_branch2a/kernel/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res1b_branch2a/kernel/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res1b_branch2a/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res1b_branch2a/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res1b_branch2a/kernel/optimize_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res1b_branch2a/kernel/optimize_1/Initializer/zeros"
  op: "Fill"
  input: "res1b_branch2a/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  input: "res1b_branch2a/kernel/optimize_1/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res1b_branch2a/kernel/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res1b_branch2a/kernel/optimize_1"
    }
  }
}
node {
  name: "res1b_branch2a/kernel/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res1b_branch2a/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res1b_branch2a/kernel/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "res1b_branch2a/kernel/optimize_1"
  input: "res1b_branch2a/kernel/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res1b_branch2a/kernel/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res1b_branch2a/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/gamma/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn1b_branch2a/gamma/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn1b_branch2a/gamma/optimize"
    }
  }
}
node {
  name: "bn1b_branch2a/gamma/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn1b_branch2a/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/gamma"
      }
    }
  }
}
node {
  name: "bn1b_branch2a/gamma/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn1b_branch2a/gamma/optimize"
  input: "bn1b_branch2a/gamma/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/gamma/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2a/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/gamma/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn1b_branch2a/gamma/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn1b_branch2a/gamma/optimize_1"
    }
  }
}
node {
  name: "bn1b_branch2a/gamma/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn1b_branch2a/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/gamma"
      }
    }
  }
}
node {
  name: "bn1b_branch2a/gamma/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn1b_branch2a/gamma/optimize_1"
  input: "bn1b_branch2a/gamma/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/gamma/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2a/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/beta/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn1b_branch2a/beta/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn1b_branch2a/beta/optimize"
    }
  }
}
node {
  name: "bn1b_branch2a/beta/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn1b_branch2a/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/beta"
      }
    }
  }
}
node {
  name: "bn1b_branch2a/beta/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn1b_branch2a/beta/optimize"
  input: "bn1b_branch2a/beta/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/beta/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2a/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/beta/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn1b_branch2a/beta/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn1b_branch2a/beta/optimize_1"
    }
  }
}
node {
  name: "bn1b_branch2a/beta/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn1b_branch2a/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/beta"
      }
    }
  }
}
node {
  name: "bn1b_branch2a/beta/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn1b_branch2a/beta/optimize_1"
  input: "bn1b_branch2a/beta/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2a/beta/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2a/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res1b_branch2b/kernel/optimize/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res1b_branch2b/kernel/optimize/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res1b_branch2b/kernel/optimize/Initializer/zeros"
  op: "Fill"
  input: "res1b_branch2b/kernel/optimize/Initializer/zeros/shape_as_tensor"
  input: "res1b_branch2b/kernel/optimize/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res1b_branch2b/kernel/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res1b_branch2b/kernel/optimize"
    }
  }
}
node {
  name: "res1b_branch2b/kernel/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res1b_branch2b/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res1b_branch2b/kernel/optimize/Assign"
  op: "AssignVariableOp"
  input: "res1b_branch2b/kernel/optimize"
  input: "res1b_branch2b/kernel/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res1b_branch2b/kernel/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res1b_branch2b/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res1b_branch2b/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res1b_branch2b/kernel/optimize_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res1b_branch2b/kernel/optimize_1/Initializer/zeros"
  op: "Fill"
  input: "res1b_branch2b/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  input: "res1b_branch2b/kernel/optimize_1/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res1b_branch2b/kernel/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res1b_branch2b/kernel/optimize_1"
    }
  }
}
node {
  name: "res1b_branch2b/kernel/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res1b_branch2b/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res1b_branch2b/kernel/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "res1b_branch2b/kernel/optimize_1"
  input: "res1b_branch2b/kernel/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res1b_branch2b/kernel/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res1b_branch2b/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/gamma/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn1b_branch2b/gamma/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn1b_branch2b/gamma/optimize"
    }
  }
}
node {
  name: "bn1b_branch2b/gamma/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn1b_branch2b/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/gamma"
      }
    }
  }
}
node {
  name: "bn1b_branch2b/gamma/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn1b_branch2b/gamma/optimize"
  input: "bn1b_branch2b/gamma/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/gamma/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2b/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/gamma/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn1b_branch2b/gamma/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn1b_branch2b/gamma/optimize_1"
    }
  }
}
node {
  name: "bn1b_branch2b/gamma/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn1b_branch2b/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/gamma"
      }
    }
  }
}
node {
  name: "bn1b_branch2b/gamma/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn1b_branch2b/gamma/optimize_1"
  input: "bn1b_branch2b/gamma/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/gamma/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2b/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/beta/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn1b_branch2b/beta/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn1b_branch2b/beta/optimize"
    }
  }
}
node {
  name: "bn1b_branch2b/beta/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn1b_branch2b/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/beta"
      }
    }
  }
}
node {
  name: "bn1b_branch2b/beta/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn1b_branch2b/beta/optimize"
  input: "bn1b_branch2b/beta/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/beta/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2b/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/beta/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn1b_branch2b/beta/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn1b_branch2b/beta/optimize_1"
    }
  }
}
node {
  name: "bn1b_branch2b/beta/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn1b_branch2b/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/beta"
      }
    }
  }
}
node {
  name: "bn1b_branch2b/beta/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn1b_branch2b/beta/optimize_1"
  input: "bn1b_branch2b/beta/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn1b_branch2b/beta/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn1b_branch2b/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res2c_branch2a/kernel/optimize/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res2c_branch2a/kernel/optimize/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res2c_branch2a/kernel/optimize/Initializer/zeros"
  op: "Fill"
  input: "res2c_branch2a/kernel/optimize/Initializer/zeros/shape_as_tensor"
  input: "res2c_branch2a/kernel/optimize/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res2c_branch2a/kernel/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res2c_branch2a/kernel/optimize"
    }
  }
}
node {
  name: "res2c_branch2a/kernel/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res2c_branch2a/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res2c_branch2a/kernel/optimize/Assign"
  op: "AssignVariableOp"
  input: "res2c_branch2a/kernel/optimize"
  input: "res2c_branch2a/kernel/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res2c_branch2a/kernel/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res2c_branch2a/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res2c_branch2a/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res2c_branch2a/kernel/optimize_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res2c_branch2a/kernel/optimize_1/Initializer/zeros"
  op: "Fill"
  input: "res2c_branch2a/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  input: "res2c_branch2a/kernel/optimize_1/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res2c_branch2a/kernel/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res2c_branch2a/kernel/optimize_1"
    }
  }
}
node {
  name: "res2c_branch2a/kernel/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res2c_branch2a/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res2c_branch2a/kernel/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "res2c_branch2a/kernel/optimize_1"
  input: "res2c_branch2a/kernel/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res2c_branch2a/kernel/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res2c_branch2a/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/gamma/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn2c_branch2a/gamma/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn2c_branch2a/gamma/optimize"
    }
  }
}
node {
  name: "bn2c_branch2a/gamma/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn2c_branch2a/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/gamma"
      }
    }
  }
}
node {
  name: "bn2c_branch2a/gamma/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn2c_branch2a/gamma/optimize"
  input: "bn2c_branch2a/gamma/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/gamma/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2a/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/gamma/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn2c_branch2a/gamma/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn2c_branch2a/gamma/optimize_1"
    }
  }
}
node {
  name: "bn2c_branch2a/gamma/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn2c_branch2a/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/gamma"
      }
    }
  }
}
node {
  name: "bn2c_branch2a/gamma/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn2c_branch2a/gamma/optimize_1"
  input: "bn2c_branch2a/gamma/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/gamma/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2a/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/beta/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn2c_branch2a/beta/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn2c_branch2a/beta/optimize"
    }
  }
}
node {
  name: "bn2c_branch2a/beta/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn2c_branch2a/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/beta"
      }
    }
  }
}
node {
  name: "bn2c_branch2a/beta/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn2c_branch2a/beta/optimize"
  input: "bn2c_branch2a/beta/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/beta/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2a/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/beta/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn2c_branch2a/beta/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn2c_branch2a/beta/optimize_1"
    }
  }
}
node {
  name: "bn2c_branch2a/beta/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn2c_branch2a/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/beta"
      }
    }
  }
}
node {
  name: "bn2c_branch2a/beta/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn2c_branch2a/beta/optimize_1"
  input: "bn2c_branch2a/beta/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2a/beta/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2a/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res2c_branch2b/kernel/optimize/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res2c_branch2b/kernel/optimize/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res2c_branch2b/kernel/optimize/Initializer/zeros"
  op: "Fill"
  input: "res2c_branch2b/kernel/optimize/Initializer/zeros/shape_as_tensor"
  input: "res2c_branch2b/kernel/optimize/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res2c_branch2b/kernel/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res2c_branch2b/kernel/optimize"
    }
  }
}
node {
  name: "res2c_branch2b/kernel/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res2c_branch2b/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res2c_branch2b/kernel/optimize/Assign"
  op: "AssignVariableOp"
  input: "res2c_branch2b/kernel/optimize"
  input: "res2c_branch2b/kernel/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res2c_branch2b/kernel/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res2c_branch2b/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res2c_branch2b/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res2c_branch2b/kernel/optimize_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res2c_branch2b/kernel/optimize_1/Initializer/zeros"
  op: "Fill"
  input: "res2c_branch2b/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  input: "res2c_branch2b/kernel/optimize_1/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res2c_branch2b/kernel/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res2c_branch2b/kernel/optimize_1"
    }
  }
}
node {
  name: "res2c_branch2b/kernel/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res2c_branch2b/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res2c_branch2b/kernel/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "res2c_branch2b/kernel/optimize_1"
  input: "res2c_branch2b/kernel/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res2c_branch2b/kernel/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res2c_branch2b/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/gamma/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn2c_branch2b/gamma/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn2c_branch2b/gamma/optimize"
    }
  }
}
node {
  name: "bn2c_branch2b/gamma/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn2c_branch2b/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/gamma"
      }
    }
  }
}
node {
  name: "bn2c_branch2b/gamma/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn2c_branch2b/gamma/optimize"
  input: "bn2c_branch2b/gamma/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/gamma/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2b/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/gamma/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn2c_branch2b/gamma/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn2c_branch2b/gamma/optimize_1"
    }
  }
}
node {
  name: "bn2c_branch2b/gamma/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn2c_branch2b/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/gamma"
      }
    }
  }
}
node {
  name: "bn2c_branch2b/gamma/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn2c_branch2b/gamma/optimize_1"
  input: "bn2c_branch2b/gamma/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/gamma/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2b/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/beta/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn2c_branch2b/beta/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn2c_branch2b/beta/optimize"
    }
  }
}
node {
  name: "bn2c_branch2b/beta/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn2c_branch2b/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/beta"
      }
    }
  }
}
node {
  name: "bn2c_branch2b/beta/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn2c_branch2b/beta/optimize"
  input: "bn2c_branch2b/beta/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/beta/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2b/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/beta/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn2c_branch2b/beta/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn2c_branch2b/beta/optimize_1"
    }
  }
}
node {
  name: "bn2c_branch2b/beta/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn2c_branch2b/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/beta"
      }
    }
  }
}
node {
  name: "bn2c_branch2b/beta/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn2c_branch2b/beta/optimize_1"
  input: "bn2c_branch2b/beta/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn2c_branch2b/beta/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn2c_branch2b/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res3d_branch2a/kernel/optimize/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res3d_branch2a/kernel/optimize/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res3d_branch2a/kernel/optimize/Initializer/zeros"
  op: "Fill"
  input: "res3d_branch2a/kernel/optimize/Initializer/zeros/shape_as_tensor"
  input: "res3d_branch2a/kernel/optimize/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res3d_branch2a/kernel/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res3d_branch2a/kernel/optimize"
    }
  }
}
node {
  name: "res3d_branch2a/kernel/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res3d_branch2a/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res3d_branch2a/kernel/optimize/Assign"
  op: "AssignVariableOp"
  input: "res3d_branch2a/kernel/optimize"
  input: "res3d_branch2a/kernel/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res3d_branch2a/kernel/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res3d_branch2a/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res3d_branch2a/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res3d_branch2a/kernel/optimize_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res3d_branch2a/kernel/optimize_1/Initializer/zeros"
  op: "Fill"
  input: "res3d_branch2a/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  input: "res3d_branch2a/kernel/optimize_1/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res3d_branch2a/kernel/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res3d_branch2a/kernel/optimize_1"
    }
  }
}
node {
  name: "res3d_branch2a/kernel/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res3d_branch2a/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res3d_branch2a/kernel/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "res3d_branch2a/kernel/optimize_1"
  input: "res3d_branch2a/kernel/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res3d_branch2a/kernel/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res3d_branch2a/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/gamma/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn3d_branch2a/gamma/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn3d_branch2a/gamma/optimize"
    }
  }
}
node {
  name: "bn3d_branch2a/gamma/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn3d_branch2a/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/gamma"
      }
    }
  }
}
node {
  name: "bn3d_branch2a/gamma/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn3d_branch2a/gamma/optimize"
  input: "bn3d_branch2a/gamma/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/gamma/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2a/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/gamma/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn3d_branch2a/gamma/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn3d_branch2a/gamma/optimize_1"
    }
  }
}
node {
  name: "bn3d_branch2a/gamma/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn3d_branch2a/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/gamma"
      }
    }
  }
}
node {
  name: "bn3d_branch2a/gamma/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn3d_branch2a/gamma/optimize_1"
  input: "bn3d_branch2a/gamma/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/gamma/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2a/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/beta/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn3d_branch2a/beta/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn3d_branch2a/beta/optimize"
    }
  }
}
node {
  name: "bn3d_branch2a/beta/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn3d_branch2a/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/beta"
      }
    }
  }
}
node {
  name: "bn3d_branch2a/beta/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn3d_branch2a/beta/optimize"
  input: "bn3d_branch2a/beta/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/beta/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2a/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/beta/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn3d_branch2a/beta/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn3d_branch2a/beta/optimize_1"
    }
  }
}
node {
  name: "bn3d_branch2a/beta/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn3d_branch2a/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/beta"
      }
    }
  }
}
node {
  name: "bn3d_branch2a/beta/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn3d_branch2a/beta/optimize_1"
  input: "bn3d_branch2a/beta/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2a/beta/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2a/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res3d_branch2b/kernel/optimize/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res3d_branch2b/kernel/optimize/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res3d_branch2b/kernel/optimize/Initializer/zeros"
  op: "Fill"
  input: "res3d_branch2b/kernel/optimize/Initializer/zeros/shape_as_tensor"
  input: "res3d_branch2b/kernel/optimize/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res3d_branch2b/kernel/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res3d_branch2b/kernel/optimize"
    }
  }
}
node {
  name: "res3d_branch2b/kernel/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res3d_branch2b/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res3d_branch2b/kernel/optimize/Assign"
  op: "AssignVariableOp"
  input: "res3d_branch2b/kernel/optimize"
  input: "res3d_branch2b/kernel/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res3d_branch2b/kernel/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res3d_branch2b/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res3d_branch2b/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res3d_branch2b/kernel/optimize_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res3d_branch2b/kernel/optimize_1/Initializer/zeros"
  op: "Fill"
  input: "res3d_branch2b/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  input: "res3d_branch2b/kernel/optimize_1/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res3d_branch2b/kernel/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res3d_branch2b/kernel/optimize_1"
    }
  }
}
node {
  name: "res3d_branch2b/kernel/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res3d_branch2b/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res3d_branch2b/kernel/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "res3d_branch2b/kernel/optimize_1"
  input: "res3d_branch2b/kernel/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res3d_branch2b/kernel/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res3d_branch2b/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/gamma/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn3d_branch2b/gamma/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn3d_branch2b/gamma/optimize"
    }
  }
}
node {
  name: "bn3d_branch2b/gamma/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn3d_branch2b/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/gamma"
      }
    }
  }
}
node {
  name: "bn3d_branch2b/gamma/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn3d_branch2b/gamma/optimize"
  input: "bn3d_branch2b/gamma/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/gamma/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2b/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/gamma/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn3d_branch2b/gamma/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn3d_branch2b/gamma/optimize_1"
    }
  }
}
node {
  name: "bn3d_branch2b/gamma/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn3d_branch2b/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/gamma"
      }
    }
  }
}
node {
  name: "bn3d_branch2b/gamma/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn3d_branch2b/gamma/optimize_1"
  input: "bn3d_branch2b/gamma/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/gamma/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2b/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/beta/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn3d_branch2b/beta/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn3d_branch2b/beta/optimize"
    }
  }
}
node {
  name: "bn3d_branch2b/beta/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn3d_branch2b/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/beta"
      }
    }
  }
}
node {
  name: "bn3d_branch2b/beta/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn3d_branch2b/beta/optimize"
  input: "bn3d_branch2b/beta/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/beta/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2b/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/beta/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn3d_branch2b/beta/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn3d_branch2b/beta/optimize_1"
    }
  }
}
node {
  name: "bn3d_branch2b/beta/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn3d_branch2b/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/beta"
      }
    }
  }
}
node {
  name: "bn3d_branch2b/beta/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn3d_branch2b/beta/optimize_1"
  input: "bn3d_branch2b/beta/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn3d_branch2b/beta/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn3d_branch2b/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res4e_branch2a/kernel/optimize/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res4e_branch2a/kernel/optimize/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res4e_branch2a/kernel/optimize/Initializer/zeros"
  op: "Fill"
  input: "res4e_branch2a/kernel/optimize/Initializer/zeros/shape_as_tensor"
  input: "res4e_branch2a/kernel/optimize/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res4e_branch2a/kernel/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res4e_branch2a/kernel/optimize"
    }
  }
}
node {
  name: "res4e_branch2a/kernel/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res4e_branch2a/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res4e_branch2a/kernel/optimize/Assign"
  op: "AssignVariableOp"
  input: "res4e_branch2a/kernel/optimize"
  input: "res4e_branch2a/kernel/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res4e_branch2a/kernel/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res4e_branch2a/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res4e_branch2a/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res4e_branch2a/kernel/optimize_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res4e_branch2a/kernel/optimize_1/Initializer/zeros"
  op: "Fill"
  input: "res4e_branch2a/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  input: "res4e_branch2a/kernel/optimize_1/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res4e_branch2a/kernel/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res4e_branch2a/kernel/optimize_1"
    }
  }
}
node {
  name: "res4e_branch2a/kernel/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res4e_branch2a/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
}
node {
  name: "res4e_branch2a/kernel/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "res4e_branch2a/kernel/optimize_1"
  input: "res4e_branch2a/kernel/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res4e_branch2a/kernel/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res4e_branch2a/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/gamma/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn4e_branch2a/gamma/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn4e_branch2a/gamma/optimize"
    }
  }
}
node {
  name: "bn4e_branch2a/gamma/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn4e_branch2a/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/gamma"
      }
    }
  }
}
node {
  name: "bn4e_branch2a/gamma/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn4e_branch2a/gamma/optimize"
  input: "bn4e_branch2a/gamma/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/gamma/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2a/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/gamma/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn4e_branch2a/gamma/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn4e_branch2a/gamma/optimize_1"
    }
  }
}
node {
  name: "bn4e_branch2a/gamma/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn4e_branch2a/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/gamma"
      }
    }
  }
}
node {
  name: "bn4e_branch2a/gamma/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn4e_branch2a/gamma/optimize_1"
  input: "bn4e_branch2a/gamma/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/gamma/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2a/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/beta/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn4e_branch2a/beta/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn4e_branch2a/beta/optimize"
    }
  }
}
node {
  name: "bn4e_branch2a/beta/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn4e_branch2a/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/beta"
      }
    }
  }
}
node {
  name: "bn4e_branch2a/beta/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn4e_branch2a/beta/optimize"
  input: "bn4e_branch2a/beta/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/beta/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2a/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/beta/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn4e_branch2a/beta/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn4e_branch2a/beta/optimize_1"
    }
  }
}
node {
  name: "bn4e_branch2a/beta/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn4e_branch2a/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/beta"
      }
    }
  }
}
node {
  name: "bn4e_branch2a/beta/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn4e_branch2a/beta/optimize_1"
  input: "bn4e_branch2a/beta/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2a/beta/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2a/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res4e_branch2b/kernel/optimize/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res4e_branch2b/kernel/optimize/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res4e_branch2b/kernel/optimize/Initializer/zeros"
  op: "Fill"
  input: "res4e_branch2b/kernel/optimize/Initializer/zeros/shape_as_tensor"
  input: "res4e_branch2b/kernel/optimize/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res4e_branch2b/kernel/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res4e_branch2b/kernel/optimize"
    }
  }
}
node {
  name: "res4e_branch2b/kernel/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res4e_branch2b/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res4e_branch2b/kernel/optimize/Assign"
  op: "AssignVariableOp"
  input: "res4e_branch2b/kernel/optimize"
  input: "res4e_branch2b/kernel/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res4e_branch2b/kernel/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res4e_branch2b/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res4e_branch2b/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "res4e_branch2b/kernel/optimize_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "res4e_branch2b/kernel/optimize_1/Initializer/zeros"
  op: "Fill"
  input: "res4e_branch2b/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  input: "res4e_branch2b/kernel/optimize_1/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "res4e_branch2b/kernel/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "res4e_branch2b/kernel/optimize_1"
    }
  }
}
node {
  name: "res4e_branch2b/kernel/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "res4e_branch2b/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
}
node {
  name: "res4e_branch2b/kernel/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "res4e_branch2b/kernel/optimize_1"
  input: "res4e_branch2b/kernel/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "res4e_branch2b/kernel/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "res4e_branch2b/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/gamma/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn4e_branch2b/gamma/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn4e_branch2b/gamma/optimize"
    }
  }
}
node {
  name: "bn4e_branch2b/gamma/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn4e_branch2b/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/gamma"
      }
    }
  }
}
node {
  name: "bn4e_branch2b/gamma/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn4e_branch2b/gamma/optimize"
  input: "bn4e_branch2b/gamma/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/gamma/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2b/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/gamma/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn4e_branch2b/gamma/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn4e_branch2b/gamma/optimize_1"
    }
  }
}
node {
  name: "bn4e_branch2b/gamma/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn4e_branch2b/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/gamma"
      }
    }
  }
}
node {
  name: "bn4e_branch2b/gamma/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn4e_branch2b/gamma/optimize_1"
  input: "bn4e_branch2b/gamma/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/gamma/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2b/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/beta/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn4e_branch2b/beta/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn4e_branch2b/beta/optimize"
    }
  }
}
node {
  name: "bn4e_branch2b/beta/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn4e_branch2b/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/beta"
      }
    }
  }
}
node {
  name: "bn4e_branch2b/beta/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn4e_branch2b/beta/optimize"
  input: "bn4e_branch2b/beta/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/beta/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2b/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/beta/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn4e_branch2b/beta/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn4e_branch2b/beta/optimize_1"
    }
  }
}
node {
  name: "bn4e_branch2b/beta/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn4e_branch2b/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/beta"
      }
    }
  }
}
node {
  name: "bn4e_branch2b/beta/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn4e_branch2b/beta/optimize_1"
  input: "bn4e_branch2b/beta/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn4e_branch2b/beta/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn4e_branch2b/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pi/kernel/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pi/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pi/kernel/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pi/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "pi/kernel/optimize"
    }
  }
}
node {
  name: "pi/kernel/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "pi/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pi/kernel"
      }
    }
  }
}
node {
  name: "pi/kernel/optimize/Assign"
  op: "AssignVariableOp"
  input: "pi/kernel/optimize"
  input: "pi/kernel/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pi/kernel/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "pi/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pi/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pi/kernel/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pi/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pi/kernel/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pi/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "pi/kernel/optimize_1"
    }
  }
}
node {
  name: "pi/kernel/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "pi/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pi/kernel"
      }
    }
  }
}
node {
  name: "pi/kernel/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "pi/kernel/optimize_1"
  input: "pi/kernel/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pi/kernel/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "pi/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pi/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/gamma/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn_pi/gamma/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_pi/gamma/optimize"
    }
  }
}
node {
  name: "bn_pi/gamma/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_pi/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/gamma"
      }
    }
  }
}
node {
  name: "bn_pi/gamma/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn_pi/gamma/optimize"
  input: "bn_pi/gamma/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/gamma/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_pi/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/gamma/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn_pi/gamma/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_pi/gamma/optimize_1"
    }
  }
}
node {
  name: "bn_pi/gamma/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_pi/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/gamma"
      }
    }
  }
}
node {
  name: "bn_pi/gamma/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn_pi/gamma/optimize_1"
  input: "bn_pi/gamma/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/gamma/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_pi/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/beta/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn_pi/beta/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_pi/beta/optimize"
    }
  }
}
node {
  name: "bn_pi/beta/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_pi/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/beta"
      }
    }
  }
}
node {
  name: "bn_pi/beta/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn_pi/beta/optimize"
  input: "bn_pi/beta/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/beta/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_pi/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/beta/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn_pi/beta/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_pi/beta/optimize_1"
    }
  }
}
node {
  name: "bn_pi/beta/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_pi/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/beta"
      }
    }
  }
}
node {
  name: "bn_pi/beta/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn_pi/beta/optimize_1"
  input: "bn_pi/beta/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_pi/beta/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_pi/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/optimize/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "T\000\000\000+\000\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/optimize/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/optimize/Initializer/zeros"
  op: "Fill"
  input: "dense/kernel/optimize/Initializer/zeros/shape_as_tensor"
  input: "dense/kernel/optimize/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/kernel/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 84
        }
        dim {
          size: 43
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/kernel/optimize"
    }
  }
}
node {
  name: "dense/kernel/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/optimize/Assign"
  op: "AssignVariableOp"
  input: "dense/kernel/optimize"
  input: "dense/kernel/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "T\000\000\000+\000\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/optimize_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/optimize_1/Initializer/zeros"
  op: "Fill"
  input: "dense/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  input: "dense/kernel/optimize_1/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/kernel/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 84
        }
        dim {
          size: 43
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/kernel/optimize_1"
    }
  }
}
node {
  name: "dense/kernel/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "dense/kernel/optimize_1"
  input: "dense/kernel/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 43
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 43
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/bias/optimize"
    }
  }
}
node {
  name: "dense/bias/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/bias/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
}
node {
  name: "dense/bias/optimize/Assign"
  op: "AssignVariableOp"
  input: "dense/bias/optimize"
  input: "dense/bias/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 43
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 43
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/bias/optimize_1"
    }
  }
}
node {
  name: "dense/bias/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/bias/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
}
node {
  name: "dense/bias/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "dense/bias/optimize_1"
  input: "dense/bias/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v/kernel/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v/kernel/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "v/kernel/optimize"
    }
  }
}
node {
  name: "v/kernel/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "v/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/kernel"
      }
    }
  }
}
node {
  name: "v/kernel/optimize/Assign"
  op: "AssignVariableOp"
  input: "v/kernel/optimize"
  input: "v/kernel/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v/kernel/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v/kernel/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v/kernel/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "v/kernel/optimize_1"
    }
  }
}
node {
  name: "v/kernel/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "v/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/kernel"
      }
    }
  }
}
node {
  name: "v/kernel/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "v/kernel/optimize_1"
  input: "v/kernel/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v/kernel/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/gamma/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn_v/gamma/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_v/gamma/optimize"
    }
  }
}
node {
  name: "bn_v/gamma/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_v/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/gamma"
      }
    }
  }
}
node {
  name: "bn_v/gamma/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn_v/gamma/optimize"
  input: "bn_v/gamma/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/gamma/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_v/gamma/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/gamma/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn_v/gamma/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_v/gamma/optimize_1"
    }
  }
}
node {
  name: "bn_v/gamma/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_v/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/gamma"
      }
    }
  }
}
node {
  name: "bn_v/gamma/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn_v/gamma/optimize_1"
  input: "bn_v/gamma/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/gamma/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_v/gamma/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/beta/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn_v/beta/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_v/beta/optimize"
    }
  }
}
node {
  name: "bn_v/beta/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_v/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/beta"
      }
    }
  }
}
node {
  name: "bn_v/beta/optimize/Assign"
  op: "AssignVariableOp"
  input: "bn_v/beta/optimize"
  input: "bn_v/beta/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/beta/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_v/beta/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/beta/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn_v/beta/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_v/beta/optimize_1"
    }
  }
}
node {
  name: "bn_v/beta/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_v/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/beta"
      }
    }
  }
}
node {
  name: "bn_v/beta/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "bn_v/beta/optimize_1"
  input: "bn_v/beta/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_v/beta/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_v/beta/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/optimize/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "*\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/optimize/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/kernel/optimize/Initializer/zeros"
  op: "Fill"
  input: "dense_1/kernel/optimize/Initializer/zeros/shape_as_tensor"
  input: "dense_1/kernel/optimize/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_1/kernel/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 42
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel/optimize"
    }
  }
}
node {
  name: "dense_1/kernel/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel/optimize/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel/optimize"
  input: "dense_1/kernel/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "*\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/optimize_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/kernel/optimize_1/Initializer/zeros"
  op: "Fill"
  input: "dense_1/kernel/optimize_1/Initializer/zeros/shape_as_tensor"
  input: "dense_1/kernel/optimize_1/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_1/kernel/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 42
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel/optimize_1"
    }
  }
}
node {
  name: "dense_1/kernel/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel/optimize_1"
  input: "dense_1/kernel/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias/optimize"
    }
  }
}
node {
  name: "dense_1/bias/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
}
node {
  name: "dense_1/bias/optimize/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias/optimize"
  input: "dense_1/bias/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias/optimize_1"
    }
  }
}
node {
  name: "dense_1/bias/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
}
node {
  name: "dense_1/bias/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias/optimize_1"
  input: "dense_1/bias/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/kernel/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/kernel/optimize"
    }
  }
}
node {
  name: "dense_2/kernel/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
}
node {
  name: "dense_2/kernel/optimize/Assign"
  op: "AssignVariableOp"
  input: "dense_2/kernel/optimize"
  input: "dense_2/kernel/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/kernel/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/kernel/optimize_1"
    }
  }
}
node {
  name: "dense_2/kernel/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
}
node {
  name: "dense_2/kernel/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "dense_2/kernel/optimize_1"
  input: "dense_2/kernel/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/optimize/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias/optimize"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/bias/optimize"
    }
  }
}
node {
  name: "dense_2/bias/optimize/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
}
node {
  name: "dense_2/bias/optimize/Assign"
  op: "AssignVariableOp"
  input: "dense_2/bias/optimize"
  input: "dense_2/bias/optimize/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/optimize/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias/optimize"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/optimize_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias/optimize_1"
  op: "VarHandleOp"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/bias/optimize_1"
    }
  }
}
node {
  name: "dense_2/bias/optimize_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
}
node {
  name: "dense_2/bias/optimize_1/Assign"
  op: "AssignVariableOp"
  input: "dense_2/bias/optimize_1"
  input: "dense_2/bias/optimize_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/optimize_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias/optimize_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/learning_rate"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "optimize/beta1"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "optimize/beta2"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "optimize/epsilon"
  op: "Const"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "optimize/update_conv/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_conv/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_conv/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv/kernel"
  input: "conv/kernel/optimize"
  input: "conv/kernel/optimize_1"
  input: "optimize/update_conv/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_conv/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/conv/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_conv_bn/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_conv_bn/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_conv_bn/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv_bn/gamma"
  input: "conv_bn/gamma/optimize"
  input: "conv_bn/gamma/optimize_1"
  input: "optimize/update_conv_bn/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_conv_bn/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/conv_bn/cond_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_conv_bn/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_conv_bn/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_conv_bn/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv_bn/beta"
  input: "conv_bn/beta/optimize"
  input: "conv_bn/beta/optimize_1"
  input: "optimize/update_conv_bn/beta/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_conv_bn/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/conv_bn/cond_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_res0a_branch2a/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res0a_branch2a/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res0a_branch2a/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "res0a_branch2a/kernel"
  input: "res0a_branch2a/kernel/optimize"
  input: "res0a_branch2a/kernel/optimize_1"
  input: "optimize/update_res0a_branch2a/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_res0a_branch2a/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/res0a_branch2a/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2a/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn0a_branch2a/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn0a_branch2a/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn0a_branch2a/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn0a_branch2a/gamma"
  input: "bn0a_branch2a/gamma/optimize"
  input: "bn0a_branch2a/gamma/optimize_1"
  input: "optimize/update_bn0a_branch2a/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn0a_branch2a/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn0a_branch2a/cond_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn0a_branch2a/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn0a_branch2a/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn0a_branch2a/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn0a_branch2a/beta"
  input: "bn0a_branch2a/beta/optimize"
  input: "bn0a_branch2a/beta/optimize_1"
  input: "optimize/update_bn0a_branch2a/beta/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn0a_branch2a/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn0a_branch2a/cond_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_res0a_branch2b/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res0a_branch2b/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res0a_branch2b/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "res0a_branch2b/kernel"
  input: "res0a_branch2b/kernel/optimize"
  input: "res0a_branch2b/kernel/optimize_1"
  input: "optimize/update_res0a_branch2b/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_res0a_branch2b/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/res0a_branch2b/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res0a_branch2b/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn0a_branch2b/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn0a_branch2b/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn0a_branch2b/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn0a_branch2b/gamma"
  input: "bn0a_branch2b/gamma/optimize"
  input: "bn0a_branch2b/gamma/optimize_1"
  input: "optimize/update_bn0a_branch2b/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn0a_branch2b/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn0a_branch2b/cond_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn0a_branch2b/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn0a_branch2b/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn0a_branch2b/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn0a_branch2b/beta"
  input: "bn0a_branch2b/beta/optimize"
  input: "bn0a_branch2b/beta/optimize_1"
  input: "optimize/update_bn0a_branch2b/beta/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn0a_branch2b/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn0a_branch2b/cond_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_res1b_branch2a/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res1b_branch2a/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res1b_branch2a/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "res1b_branch2a/kernel"
  input: "res1b_branch2a/kernel/optimize"
  input: "res1b_branch2a/kernel/optimize_1"
  input: "optimize/update_res1b_branch2a/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_res1b_branch2a/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/res1b_branch2a/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2a/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn1b_branch2a/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn1b_branch2a/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn1b_branch2a/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn1b_branch2a/gamma"
  input: "bn1b_branch2a/gamma/optimize"
  input: "bn1b_branch2a/gamma/optimize_1"
  input: "optimize/update_bn1b_branch2a/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn1b_branch2a/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn1b_branch2a/cond_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn1b_branch2a/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn1b_branch2a/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn1b_branch2a/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn1b_branch2a/beta"
  input: "bn1b_branch2a/beta/optimize"
  input: "bn1b_branch2a/beta/optimize_1"
  input: "optimize/update_bn1b_branch2a/beta/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn1b_branch2a/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn1b_branch2a/cond_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_res1b_branch2b/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res1b_branch2b/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res1b_branch2b/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "res1b_branch2b/kernel"
  input: "res1b_branch2b/kernel/optimize"
  input: "res1b_branch2b/kernel/optimize_1"
  input: "optimize/update_res1b_branch2b/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_res1b_branch2b/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/res1b_branch2b/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res1b_branch2b/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn1b_branch2b/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn1b_branch2b/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn1b_branch2b/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn1b_branch2b/gamma"
  input: "bn1b_branch2b/gamma/optimize"
  input: "bn1b_branch2b/gamma/optimize_1"
  input: "optimize/update_bn1b_branch2b/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn1b_branch2b/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn1b_branch2b/cond_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn1b_branch2b/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn1b_branch2b/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn1b_branch2b/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn1b_branch2b/beta"
  input: "bn1b_branch2b/beta/optimize"
  input: "bn1b_branch2b/beta/optimize_1"
  input: "optimize/update_bn1b_branch2b/beta/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn1b_branch2b/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn1b_branch2b/cond_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn1b_branch2b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_res2c_branch2a/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res2c_branch2a/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res2c_branch2a/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "res2c_branch2a/kernel"
  input: "res2c_branch2a/kernel/optimize"
  input: "res2c_branch2a/kernel/optimize_1"
  input: "optimize/update_res2c_branch2a/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_res2c_branch2a/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/res2c_branch2a/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2a/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn2c_branch2a/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn2c_branch2a/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn2c_branch2a/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn2c_branch2a/gamma"
  input: "bn2c_branch2a/gamma/optimize"
  input: "bn2c_branch2a/gamma/optimize_1"
  input: "optimize/update_bn2c_branch2a/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn2c_branch2a/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn2c_branch2a/cond_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn2c_branch2a/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn2c_branch2a/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn2c_branch2a/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn2c_branch2a/beta"
  input: "bn2c_branch2a/beta/optimize"
  input: "bn2c_branch2a/beta/optimize_1"
  input: "optimize/update_bn2c_branch2a/beta/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn2c_branch2a/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn2c_branch2a/cond_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_res2c_branch2b/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res2c_branch2b/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res2c_branch2b/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "res2c_branch2b/kernel"
  input: "res2c_branch2b/kernel/optimize"
  input: "res2c_branch2b/kernel/optimize_1"
  input: "optimize/update_res2c_branch2b/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_res2c_branch2b/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/res2c_branch2b/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res2c_branch2b/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn2c_branch2b/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn2c_branch2b/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn2c_branch2b/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn2c_branch2b/gamma"
  input: "bn2c_branch2b/gamma/optimize"
  input: "bn2c_branch2b/gamma/optimize_1"
  input: "optimize/update_bn2c_branch2b/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn2c_branch2b/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn2c_branch2b/cond_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn2c_branch2b/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn2c_branch2b/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn2c_branch2b/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn2c_branch2b/beta"
  input: "bn2c_branch2b/beta/optimize"
  input: "bn2c_branch2b/beta/optimize_1"
  input: "optimize/update_bn2c_branch2b/beta/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn2c_branch2b/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn2c_branch2b/cond_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn2c_branch2b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_res3d_branch2a/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res3d_branch2a/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res3d_branch2a/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "res3d_branch2a/kernel"
  input: "res3d_branch2a/kernel/optimize"
  input: "res3d_branch2a/kernel/optimize_1"
  input: "optimize/update_res3d_branch2a/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_res3d_branch2a/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/res3d_branch2a/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2a/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn3d_branch2a/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn3d_branch2a/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn3d_branch2a/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn3d_branch2a/gamma"
  input: "bn3d_branch2a/gamma/optimize"
  input: "bn3d_branch2a/gamma/optimize_1"
  input: "optimize/update_bn3d_branch2a/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn3d_branch2a/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn3d_branch2a/cond_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn3d_branch2a/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn3d_branch2a/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn3d_branch2a/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn3d_branch2a/beta"
  input: "bn3d_branch2a/beta/optimize"
  input: "bn3d_branch2a/beta/optimize_1"
  input: "optimize/update_bn3d_branch2a/beta/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn3d_branch2a/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn3d_branch2a/cond_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_res3d_branch2b/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res3d_branch2b/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res3d_branch2b/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "res3d_branch2b/kernel"
  input: "res3d_branch2b/kernel/optimize"
  input: "res3d_branch2b/kernel/optimize_1"
  input: "optimize/update_res3d_branch2b/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_res3d_branch2b/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/res3d_branch2b/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res3d_branch2b/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn3d_branch2b/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn3d_branch2b/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn3d_branch2b/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn3d_branch2b/gamma"
  input: "bn3d_branch2b/gamma/optimize"
  input: "bn3d_branch2b/gamma/optimize_1"
  input: "optimize/update_bn3d_branch2b/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn3d_branch2b/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn3d_branch2b/cond_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn3d_branch2b/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn3d_branch2b/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn3d_branch2b/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn3d_branch2b/beta"
  input: "bn3d_branch2b/beta/optimize"
  input: "bn3d_branch2b/beta/optimize_1"
  input: "optimize/update_bn3d_branch2b/beta/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn3d_branch2b/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn3d_branch2b/cond_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn3d_branch2b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_res4e_branch2a/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res4e_branch2a/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res4e_branch2a/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "res4e_branch2a/kernel"
  input: "res4e_branch2a/kernel/optimize"
  input: "res4e_branch2a/kernel/optimize_1"
  input: "optimize/update_res4e_branch2a/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_res4e_branch2a/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/res4e_branch2a/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2a/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn4e_branch2a/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn4e_branch2a/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn4e_branch2a/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn4e_branch2a/gamma"
  input: "bn4e_branch2a/gamma/optimize"
  input: "bn4e_branch2a/gamma/optimize_1"
  input: "optimize/update_bn4e_branch2a/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn4e_branch2a/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn4e_branch2a/cond_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn4e_branch2a/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn4e_branch2a/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn4e_branch2a/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn4e_branch2a/beta"
  input: "bn4e_branch2a/beta/optimize"
  input: "bn4e_branch2a/beta/optimize_1"
  input: "optimize/update_bn4e_branch2a/beta/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn4e_branch2a/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn4e_branch2a/cond_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_res4e_branch2b/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res4e_branch2b/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_res4e_branch2b/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "res4e_branch2b/kernel"
  input: "res4e_branch2b/kernel/optimize"
  input: "res4e_branch2b/kernel/optimize_1"
  input: "optimize/update_res4e_branch2b/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_res4e_branch2b/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/res4e_branch2b/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@res4e_branch2b/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn4e_branch2b/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn4e_branch2b/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn4e_branch2b/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn4e_branch2b/gamma"
  input: "bn4e_branch2b/gamma/optimize"
  input: "bn4e_branch2b/gamma/optimize_1"
  input: "optimize/update_bn4e_branch2b/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn4e_branch2b/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn4e_branch2b/cond_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn4e_branch2b/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn4e_branch2b/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn4e_branch2b/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn4e_branch2b/beta"
  input: "bn4e_branch2b/beta/optimize"
  input: "bn4e_branch2b/beta/optimize_1"
  input: "optimize/update_bn4e_branch2b/beta/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn4e_branch2b/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn4e_branch2b/cond_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn4e_branch2b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_pi/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_pi/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_pi/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "pi/kernel"
  input: "pi/kernel/optimize"
  input: "pi/kernel/optimize_1"
  input: "optimize/update_pi/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_pi/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/pi/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pi/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn_pi/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn_pi/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn_pi/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn_pi/gamma"
  input: "bn_pi/gamma/optimize"
  input: "bn_pi/gamma/optimize_1"
  input: "optimize/update_bn_pi/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn_pi/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn_pi/cond_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn_pi/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn_pi/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn_pi/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn_pi/beta"
  input: "bn_pi/beta/optimize"
  input: "bn_pi/beta/optimize_1"
  input: "optimize/update_bn_pi/beta/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn_pi/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn_pi/cond_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_pi/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_dense/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_dense/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_dense/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense/kernel"
  input: "dense/kernel/optimize"
  input: "dense/kernel/optimize_1"
  input: "optimize/update_dense/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_dense/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/dense/MatMul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_dense/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_dense/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_dense/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense/bias"
  input: "dense/bias/optimize"
  input: "dense/bias/optimize_1"
  input: "optimize/update_dense/bias/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_dense/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_v/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_v/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_v/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "v/kernel"
  input: "v/kernel/optimize"
  input: "v/kernel/optimize_1"
  input: "optimize/update_v/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_v/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/v/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn_v/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn_v/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn_v/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn_v/gamma"
  input: "bn_v/gamma/optimize"
  input: "bn_v/gamma/optimize_1"
  input: "optimize/update_bn_v/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn_v/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn_v/cond_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_bn_v/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn_v/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_bn_v/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bn_v/beta"
  input: "bn_v/beta/optimize"
  input: "bn_v/beta/optimize_1"
  input: "optimize/update_bn_v/beta/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_bn_v/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/bn_v/cond_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_v/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_dense_1/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_dense_1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_dense_1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_1/kernel"
  input: "dense_1/kernel/optimize"
  input: "dense_1/kernel/optimize_1"
  input: "optimize/update_dense_1/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_dense_1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/dense_1/MatMul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_dense_1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_dense_1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_dense_1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_1/bias"
  input: "dense_1/bias/optimize"
  input: "dense_1/bias/optimize_1"
  input: "optimize/update_dense_1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_dense_1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/dense_1/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_dense_2/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_dense_2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_dense_2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_2/kernel"
  input: "dense_2/kernel/optimize"
  input: "dense_2/kernel/optimize_1"
  input: "optimize/update_dense_2/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_dense_2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/dense_2/MatMul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/update_dense_2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_dense_2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/update_dense_2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_2/bias"
  input: "dense_2/bias/optimize"
  input: "dense_2/bias/optimize_1"
  input: "optimize/update_dense_2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "optimize/update_dense_2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "optimize/learning_rate"
  input: "optimize/beta1"
  input: "optimize/beta2"
  input: "optimize/epsilon"
  input: "gradients/dense_2/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimize/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^optimize/update_bn0a_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn0a_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn0a_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn0a_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn_pi/beta/ResourceApplyAdam"
  input: "^optimize/update_bn_pi/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn_v/beta/ResourceApplyAdam"
  input: "^optimize/update_bn_v/gamma/ResourceApplyAdam"
  input: "^optimize/update_conv/kernel/ResourceApplyAdam"
  input: "^optimize/update_conv_bn/beta/ResourceApplyAdam"
  input: "^optimize/update_conv_bn/gamma/ResourceApplyAdam"
  input: "^optimize/update_dense/bias/ResourceApplyAdam"
  input: "^optimize/update_dense/kernel/ResourceApplyAdam"
  input: "^optimize/update_dense_1/bias/ResourceApplyAdam"
  input: "^optimize/update_dense_1/kernel/ResourceApplyAdam"
  input: "^optimize/update_dense_2/bias/ResourceApplyAdam"
  input: "^optimize/update_dense_2/kernel/ResourceApplyAdam"
  input: "^optimize/update_pi/kernel/ResourceApplyAdam"
  input: "^optimize/update_res0a_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res0a_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res1b_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res1b_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res2c_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res2c_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res3d_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res3d_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res4e_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res4e_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_v/kernel/ResourceApplyAdam"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/mul"
  op: "Mul"
  input: "optimize/ReadVariableOp"
  input: "optimize/beta1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
}
node {
  name: "optimize/AssignVariableOp"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "optimize/mul"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^optimize/AssignVariableOp"
  input: "^optimize/update_bn0a_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn0a_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn0a_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn0a_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn_pi/beta/ResourceApplyAdam"
  input: "^optimize/update_bn_pi/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn_v/beta/ResourceApplyAdam"
  input: "^optimize/update_bn_v/gamma/ResourceApplyAdam"
  input: "^optimize/update_conv/kernel/ResourceApplyAdam"
  input: "^optimize/update_conv_bn/beta/ResourceApplyAdam"
  input: "^optimize/update_conv_bn/gamma/ResourceApplyAdam"
  input: "^optimize/update_dense/bias/ResourceApplyAdam"
  input: "^optimize/update_dense/kernel/ResourceApplyAdam"
  input: "^optimize/update_dense_1/bias/ResourceApplyAdam"
  input: "^optimize/update_dense_1/kernel/ResourceApplyAdam"
  input: "^optimize/update_dense_2/bias/ResourceApplyAdam"
  input: "^optimize/update_dense_2/kernel/ResourceApplyAdam"
  input: "^optimize/update_pi/kernel/ResourceApplyAdam"
  input: "^optimize/update_res0a_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res0a_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res1b_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res1b_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res2c_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res2c_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res3d_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res3d_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res4e_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res4e_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_v/kernel/ResourceApplyAdam"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^optimize/update_bn0a_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn0a_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn0a_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn0a_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn_pi/beta/ResourceApplyAdam"
  input: "^optimize/update_bn_pi/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn_v/beta/ResourceApplyAdam"
  input: "^optimize/update_bn_v/gamma/ResourceApplyAdam"
  input: "^optimize/update_conv/kernel/ResourceApplyAdam"
  input: "^optimize/update_conv_bn/beta/ResourceApplyAdam"
  input: "^optimize/update_conv_bn/gamma/ResourceApplyAdam"
  input: "^optimize/update_dense/bias/ResourceApplyAdam"
  input: "^optimize/update_dense/kernel/ResourceApplyAdam"
  input: "^optimize/update_dense_1/bias/ResourceApplyAdam"
  input: "^optimize/update_dense_1/kernel/ResourceApplyAdam"
  input: "^optimize/update_dense_2/bias/ResourceApplyAdam"
  input: "^optimize/update_dense_2/kernel/ResourceApplyAdam"
  input: "^optimize/update_pi/kernel/ResourceApplyAdam"
  input: "^optimize/update_res0a_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res0a_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res1b_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res1b_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res2c_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res2c_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res3d_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res3d_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res4e_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res4e_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_v/kernel/ResourceApplyAdam"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/mul_1"
  op: "Mul"
  input: "optimize/ReadVariableOp_2"
  input: "optimize/beta2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
}
node {
  name: "optimize/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "optimize/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^optimize/AssignVariableOp_1"
  input: "^optimize/update_bn0a_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn0a_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn0a_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn0a_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn_pi/beta/ResourceApplyAdam"
  input: "^optimize/update_bn_pi/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn_v/beta/ResourceApplyAdam"
  input: "^optimize/update_bn_v/gamma/ResourceApplyAdam"
  input: "^optimize/update_conv/kernel/ResourceApplyAdam"
  input: "^optimize/update_conv_bn/beta/ResourceApplyAdam"
  input: "^optimize/update_conv_bn/gamma/ResourceApplyAdam"
  input: "^optimize/update_dense/bias/ResourceApplyAdam"
  input: "^optimize/update_dense/kernel/ResourceApplyAdam"
  input: "^optimize/update_dense_1/bias/ResourceApplyAdam"
  input: "^optimize/update_dense_1/kernel/ResourceApplyAdam"
  input: "^optimize/update_dense_2/bias/ResourceApplyAdam"
  input: "^optimize/update_dense_2/kernel/ResourceApplyAdam"
  input: "^optimize/update_pi/kernel/ResourceApplyAdam"
  input: "^optimize/update_res0a_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res0a_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res1b_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res1b_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res2c_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res2c_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res3d_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res3d_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res4e_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res4e_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_v/kernel/ResourceApplyAdam"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn0a_branch2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimize"
  op: "NoOp"
  input: "^bn0a_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn0a_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn1b_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn2c_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn3d_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2a/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn4e_branch2b/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_pi/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg/AssignSubVariableOp"
  input: "^bn_v/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg/AssignSubVariableOp"
  input: "^conv_bn/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^optimize/AssignVariableOp"
  input: "^optimize/AssignVariableOp_1"
  input: "^optimize/update_bn0a_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn0a_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn0a_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn0a_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn1b_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn2c_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn3d_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2a/beta/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2a/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2b/beta/ResourceApplyAdam"
  input: "^optimize/update_bn4e_branch2b/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn_pi/beta/ResourceApplyAdam"
  input: "^optimize/update_bn_pi/gamma/ResourceApplyAdam"
  input: "^optimize/update_bn_v/beta/ResourceApplyAdam"
  input: "^optimize/update_bn_v/gamma/ResourceApplyAdam"
  input: "^optimize/update_conv/kernel/ResourceApplyAdam"
  input: "^optimize/update_conv_bn/beta/ResourceApplyAdam"
  input: "^optimize/update_conv_bn/gamma/ResourceApplyAdam"
  input: "^optimize/update_dense/bias/ResourceApplyAdam"
  input: "^optimize/update_dense/kernel/ResourceApplyAdam"
  input: "^optimize/update_dense_1/bias/ResourceApplyAdam"
  input: "^optimize/update_dense_1/kernel/ResourceApplyAdam"
  input: "^optimize/update_dense_2/bias/ResourceApplyAdam"
  input: "^optimize/update_dense_2/kernel/ResourceApplyAdam"
  input: "^optimize/update_pi/kernel/ResourceApplyAdam"
  input: "^optimize/update_res0a_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res0a_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res1b_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res1b_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res2c_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res2c_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res3d_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res3d_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_res4e_branch2a/kernel/ResourceApplyAdam"
  input: "^optimize/update_res4e_branch2b/kernel/ResourceApplyAdam"
  input: "^optimize/update_v/kernel/ResourceApplyAdam"
  device: "/device:GPU:0"
}
node {
  name: "init"
  op: "NoOp"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^bn0a_branch2a/beta/Assign"
  input: "^bn0a_branch2a/beta/optimize/Assign"
  input: "^bn0a_branch2a/beta/optimize_1/Assign"
  input: "^bn0a_branch2a/gamma/Assign"
  input: "^bn0a_branch2a/gamma/optimize/Assign"
  input: "^bn0a_branch2a/gamma/optimize_1/Assign"
  input: "^bn0a_branch2a/moving_mean/Assign"
  input: "^bn0a_branch2a/moving_variance/Assign"
  input: "^bn0a_branch2b/beta/Assign"
  input: "^bn0a_branch2b/beta/optimize/Assign"
  input: "^bn0a_branch2b/beta/optimize_1/Assign"
  input: "^bn0a_branch2b/gamma/Assign"
  input: "^bn0a_branch2b/gamma/optimize/Assign"
  input: "^bn0a_branch2b/gamma/optimize_1/Assign"
  input: "^bn0a_branch2b/moving_mean/Assign"
  input: "^bn0a_branch2b/moving_variance/Assign"
  input: "^bn1b_branch2a/beta/Assign"
  input: "^bn1b_branch2a/beta/optimize/Assign"
  input: "^bn1b_branch2a/beta/optimize_1/Assign"
  input: "^bn1b_branch2a/gamma/Assign"
  input: "^bn1b_branch2a/gamma/optimize/Assign"
  input: "^bn1b_branch2a/gamma/optimize_1/Assign"
  input: "^bn1b_branch2a/moving_mean/Assign"
  input: "^bn1b_branch2a/moving_variance/Assign"
  input: "^bn1b_branch2b/beta/Assign"
  input: "^bn1b_branch2b/beta/optimize/Assign"
  input: "^bn1b_branch2b/beta/optimize_1/Assign"
  input: "^bn1b_branch2b/gamma/Assign"
  input: "^bn1b_branch2b/gamma/optimize/Assign"
  input: "^bn1b_branch2b/gamma/optimize_1/Assign"
  input: "^bn1b_branch2b/moving_mean/Assign"
  input: "^bn1b_branch2b/moving_variance/Assign"
  input: "^bn2c_branch2a/beta/Assign"
  input: "^bn2c_branch2a/beta/optimize/Assign"
  input: "^bn2c_branch2a/beta/optimize_1/Assign"
  input: "^bn2c_branch2a/gamma/Assign"
  input: "^bn2c_branch2a/gamma/optimize/Assign"
  input: "^bn2c_branch2a/gamma/optimize_1/Assign"
  input: "^bn2c_branch2a/moving_mean/Assign"
  input: "^bn2c_branch2a/moving_variance/Assign"
  input: "^bn2c_branch2b/beta/Assign"
  input: "^bn2c_branch2b/beta/optimize/Assign"
  input: "^bn2c_branch2b/beta/optimize_1/Assign"
  input: "^bn2c_branch2b/gamma/Assign"
  input: "^bn2c_branch2b/gamma/optimize/Assign"
  input: "^bn2c_branch2b/gamma/optimize_1/Assign"
  input: "^bn2c_branch2b/moving_mean/Assign"
  input: "^bn2c_branch2b/moving_variance/Assign"
  input: "^bn3d_branch2a/beta/Assign"
  input: "^bn3d_branch2a/beta/optimize/Assign"
  input: "^bn3d_branch2a/beta/optimize_1/Assign"
  input: "^bn3d_branch2a/gamma/Assign"
  input: "^bn3d_branch2a/gamma/optimize/Assign"
  input: "^bn3d_branch2a/gamma/optimize_1/Assign"
  input: "^bn3d_branch2a/moving_mean/Assign"
  input: "^bn3d_branch2a/moving_variance/Assign"
  input: "^bn3d_branch2b/beta/Assign"
  input: "^bn3d_branch2b/beta/optimize/Assign"
  input: "^bn3d_branch2b/beta/optimize_1/Assign"
  input: "^bn3d_branch2b/gamma/Assign"
  input: "^bn3d_branch2b/gamma/optimize/Assign"
  input: "^bn3d_branch2b/gamma/optimize_1/Assign"
  input: "^bn3d_branch2b/moving_mean/Assign"
  input: "^bn3d_branch2b/moving_variance/Assign"
  input: "^bn4e_branch2a/beta/Assign"
  input: "^bn4e_branch2a/beta/optimize/Assign"
  input: "^bn4e_branch2a/beta/optimize_1/Assign"
  input: "^bn4e_branch2a/gamma/Assign"
  input: "^bn4e_branch2a/gamma/optimize/Assign"
  input: "^bn4e_branch2a/gamma/optimize_1/Assign"
  input: "^bn4e_branch2a/moving_mean/Assign"
  input: "^bn4e_branch2a/moving_variance/Assign"
  input: "^bn4e_branch2b/beta/Assign"
  input: "^bn4e_branch2b/beta/optimize/Assign"
  input: "^bn4e_branch2b/beta/optimize_1/Assign"
  input: "^bn4e_branch2b/gamma/Assign"
  input: "^bn4e_branch2b/gamma/optimize/Assign"
  input: "^bn4e_branch2b/gamma/optimize_1/Assign"
  input: "^bn4e_branch2b/moving_mean/Assign"
  input: "^bn4e_branch2b/moving_variance/Assign"
  input: "^bn_pi/beta/Assign"
  input: "^bn_pi/beta/optimize/Assign"
  input: "^bn_pi/beta/optimize_1/Assign"
  input: "^bn_pi/gamma/Assign"
  input: "^bn_pi/gamma/optimize/Assign"
  input: "^bn_pi/gamma/optimize_1/Assign"
  input: "^bn_pi/moving_mean/Assign"
  input: "^bn_pi/moving_variance/Assign"
  input: "^bn_v/beta/Assign"
  input: "^bn_v/beta/optimize/Assign"
  input: "^bn_v/beta/optimize_1/Assign"
  input: "^bn_v/gamma/Assign"
  input: "^bn_v/gamma/optimize/Assign"
  input: "^bn_v/gamma/optimize_1/Assign"
  input: "^bn_v/moving_mean/Assign"
  input: "^bn_v/moving_variance/Assign"
  input: "^conv/kernel/Assign"
  input: "^conv/kernel/optimize/Assign"
  input: "^conv/kernel/optimize_1/Assign"
  input: "^conv_bn/beta/Assign"
  input: "^conv_bn/beta/optimize/Assign"
  input: "^conv_bn/beta/optimize_1/Assign"
  input: "^conv_bn/gamma/Assign"
  input: "^conv_bn/gamma/optimize/Assign"
  input: "^conv_bn/gamma/optimize_1/Assign"
  input: "^conv_bn/moving_mean/Assign"
  input: "^conv_bn/moving_variance/Assign"
  input: "^dense/bias/Assign"
  input: "^dense/bias/optimize/Assign"
  input: "^dense/bias/optimize_1/Assign"
  input: "^dense/kernel/Assign"
  input: "^dense/kernel/optimize/Assign"
  input: "^dense/kernel/optimize_1/Assign"
  input: "^dense_1/bias/Assign"
  input: "^dense_1/bias/optimize/Assign"
  input: "^dense_1/bias/optimize_1/Assign"
  input: "^dense_1/kernel/Assign"
  input: "^dense_1/kernel/optimize/Assign"
  input: "^dense_1/kernel/optimize_1/Assign"
  input: "^dense_2/bias/Assign"
  input: "^dense_2/bias/optimize/Assign"
  input: "^dense_2/bias/optimize_1/Assign"
  input: "^dense_2/kernel/Assign"
  input: "^dense_2/kernel/optimize/Assign"
  input: "^dense_2/kernel/optimize_1/Assign"
  input: "^pi/kernel/Assign"
  input: "^pi/kernel/optimize/Assign"
  input: "^pi/kernel/optimize_1/Assign"
  input: "^res0a_branch2a/kernel/Assign"
  input: "^res0a_branch2a/kernel/optimize/Assign"
  input: "^res0a_branch2a/kernel/optimize_1/Assign"
  input: "^res0a_branch2b/kernel/Assign"
  input: "^res0a_branch2b/kernel/optimize/Assign"
  input: "^res0a_branch2b/kernel/optimize_1/Assign"
  input: "^res1b_branch2a/kernel/Assign"
  input: "^res1b_branch2a/kernel/optimize/Assign"
  input: "^res1b_branch2a/kernel/optimize_1/Assign"
  input: "^res1b_branch2b/kernel/Assign"
  input: "^res1b_branch2b/kernel/optimize/Assign"
  input: "^res1b_branch2b/kernel/optimize_1/Assign"
  input: "^res2c_branch2a/kernel/Assign"
  input: "^res2c_branch2a/kernel/optimize/Assign"
  input: "^res2c_branch2a/kernel/optimize_1/Assign"
  input: "^res2c_branch2b/kernel/Assign"
  input: "^res2c_branch2b/kernel/optimize/Assign"
  input: "^res2c_branch2b/kernel/optimize_1/Assign"
  input: "^res3d_branch2a/kernel/Assign"
  input: "^res3d_branch2a/kernel/optimize/Assign"
  input: "^res3d_branch2a/kernel/optimize_1/Assign"
  input: "^res3d_branch2b/kernel/Assign"
  input: "^res3d_branch2b/kernel/optimize/Assign"
  input: "^res3d_branch2b/kernel/optimize_1/Assign"
  input: "^res4e_branch2a/kernel/Assign"
  input: "^res4e_branch2a/kernel/optimize/Assign"
  input: "^res4e_branch2a/kernel/optimize_1/Assign"
  input: "^res4e_branch2b/kernel/Assign"
  input: "^res4e_branch2b/kernel/optimize/Assign"
  input: "^res4e_branch2b/kernel/optimize_1/Assign"
  input: "^v/kernel/Assign"
  input: "^v/kernel/optimize/Assign"
  input: "^v/kernel/optimize_1/Assign"
  device: "/device:GPU:0"
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 163
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "bn0a_branch2a/beta"
        string_val: "bn0a_branch2a/beta/optimize"
        string_val: "bn0a_branch2a/beta/optimize_1"
        string_val: "bn0a_branch2a/gamma"
        string_val: "bn0a_branch2a/gamma/optimize"
        string_val: "bn0a_branch2a/gamma/optimize_1"
        string_val: "bn0a_branch2a/moving_mean"
        string_val: "bn0a_branch2a/moving_variance"
        string_val: "bn0a_branch2b/beta"
        string_val: "bn0a_branch2b/beta/optimize"
        string_val: "bn0a_branch2b/beta/optimize_1"
        string_val: "bn0a_branch2b/gamma"
        string_val: "bn0a_branch2b/gamma/optimize"
        string_val: "bn0a_branch2b/gamma/optimize_1"
        string_val: "bn0a_branch2b/moving_mean"
        string_val: "bn0a_branch2b/moving_variance"
        string_val: "bn1b_branch2a/beta"
        string_val: "bn1b_branch2a/beta/optimize"
        string_val: "bn1b_branch2a/beta/optimize_1"
        string_val: "bn1b_branch2a/gamma"
        string_val: "bn1b_branch2a/gamma/optimize"
        string_val: "bn1b_branch2a/gamma/optimize_1"
        string_val: "bn1b_branch2a/moving_mean"
        string_val: "bn1b_branch2a/moving_variance"
        string_val: "bn1b_branch2b/beta"
        string_val: "bn1b_branch2b/beta/optimize"
        string_val: "bn1b_branch2b/beta/optimize_1"
        string_val: "bn1b_branch2b/gamma"
        string_val: "bn1b_branch2b/gamma/optimize"
        string_val: "bn1b_branch2b/gamma/optimize_1"
        string_val: "bn1b_branch2b/moving_mean"
        string_val: "bn1b_branch2b/moving_variance"
        string_val: "bn2c_branch2a/beta"
        string_val: "bn2c_branch2a/beta/optimize"
        string_val: "bn2c_branch2a/beta/optimize_1"
        string_val: "bn2c_branch2a/gamma"
        string_val: "bn2c_branch2a/gamma/optimize"
        string_val: "bn2c_branch2a/gamma/optimize_1"
        string_val: "bn2c_branch2a/moving_mean"
        string_val: "bn2c_branch2a/moving_variance"
        string_val: "bn2c_branch2b/beta"
        string_val: "bn2c_branch2b/beta/optimize"
        string_val: "bn2c_branch2b/beta/optimize_1"
        string_val: "bn2c_branch2b/gamma"
        string_val: "bn2c_branch2b/gamma/optimize"
        string_val: "bn2c_branch2b/gamma/optimize_1"
        string_val: "bn2c_branch2b/moving_mean"
        string_val: "bn2c_branch2b/moving_variance"
        string_val: "bn3d_branch2a/beta"
        string_val: "bn3d_branch2a/beta/optimize"
        string_val: "bn3d_branch2a/beta/optimize_1"
        string_val: "bn3d_branch2a/gamma"
        string_val: "bn3d_branch2a/gamma/optimize"
        string_val: "bn3d_branch2a/gamma/optimize_1"
        string_val: "bn3d_branch2a/moving_mean"
        string_val: "bn3d_branch2a/moving_variance"
        string_val: "bn3d_branch2b/beta"
        string_val: "bn3d_branch2b/beta/optimize"
        string_val: "bn3d_branch2b/beta/optimize_1"
        string_val: "bn3d_branch2b/gamma"
        string_val: "bn3d_branch2b/gamma/optimize"
        string_val: "bn3d_branch2b/gamma/optimize_1"
        string_val: "bn3d_branch2b/moving_mean"
        string_val: "bn3d_branch2b/moving_variance"
        string_val: "bn4e_branch2a/beta"
        string_val: "bn4e_branch2a/beta/optimize"
        string_val: "bn4e_branch2a/beta/optimize_1"
        string_val: "bn4e_branch2a/gamma"
        string_val: "bn4e_branch2a/gamma/optimize"
        string_val: "bn4e_branch2a/gamma/optimize_1"
        string_val: "bn4e_branch2a/moving_mean"
        string_val: "bn4e_branch2a/moving_variance"
        string_val: "bn4e_branch2b/beta"
        string_val: "bn4e_branch2b/beta/optimize"
        string_val: "bn4e_branch2b/beta/optimize_1"
        string_val: "bn4e_branch2b/gamma"
        string_val: "bn4e_branch2b/gamma/optimize"
        string_val: "bn4e_branch2b/gamma/optimize_1"
        string_val: "bn4e_branch2b/moving_mean"
        string_val: "bn4e_branch2b/moving_variance"
        string_val: "bn_pi/beta"
        string_val: "bn_pi/beta/optimize"
        string_val: "bn_pi/beta/optimize_1"
        string_val: "bn_pi/gamma"
        string_val: "bn_pi/gamma/optimize"
        string_val: "bn_pi/gamma/optimize_1"
        string_val: "bn_pi/moving_mean"
        string_val: "bn_pi/moving_variance"
        string_val: "bn_v/beta"
        string_val: "bn_v/beta/optimize"
        string_val: "bn_v/beta/optimize_1"
        string_val: "bn_v/gamma"
        string_val: "bn_v/gamma/optimize"
        string_val: "bn_v/gamma/optimize_1"
        string_val: "bn_v/moving_mean"
        string_val: "bn_v/moving_variance"
        string_val: "conv/kernel"
        string_val: "conv/kernel/optimize"
        string_val: "conv/kernel/optimize_1"
        string_val: "conv_bn/beta"
        string_val: "conv_bn/beta/optimize"
        string_val: "conv_bn/beta/optimize_1"
        string_val: "conv_bn/gamma"
        string_val: "conv_bn/gamma/optimize"
        string_val: "conv_bn/gamma/optimize_1"
        string_val: "conv_bn/moving_mean"
        string_val: "conv_bn/moving_variance"
        string_val: "dense/bias"
        string_val: "dense/bias/optimize"
        string_val: "dense/bias/optimize_1"
        string_val: "dense/kernel"
        string_val: "dense/kernel/optimize"
        string_val: "dense/kernel/optimize_1"
        string_val: "dense_1/bias"
        string_val: "dense_1/bias/optimize"
        string_val: "dense_1/bias/optimize_1"
        string_val: "dense_1/kernel"
        string_val: "dense_1/kernel/optimize"
        string_val: "dense_1/kernel/optimize_1"
        string_val: "dense_2/bias"
        string_val: "dense_2/bias/optimize"
        string_val: "dense_2/bias/optimize_1"
        string_val: "dense_2/kernel"
        string_val: "dense_2/kernel/optimize"
        string_val: "dense_2/kernel/optimize_1"
        string_val: "pi/kernel"
        string_val: "pi/kernel/optimize"
        string_val: "pi/kernel/optimize_1"
        string_val: "res0a_branch2a/kernel"
        string_val: "res0a_branch2a/kernel/optimize"
        string_val: "res0a_branch2a/kernel/optimize_1"
        string_val: "res0a_branch2b/kernel"
        string_val: "res0a_branch2b/kernel/optimize"
        string_val: "res0a_branch2b/kernel/optimize_1"
        string_val: "res1b_branch2a/kernel"
        string_val: "res1b_branch2a/kernel/optimize"
        string_val: "res1b_branch2a/kernel/optimize_1"
        string_val: "res1b_branch2b/kernel"
        string_val: "res1b_branch2b/kernel/optimize"
        string_val: "res1b_branch2b/kernel/optimize_1"
        string_val: "res2c_branch2a/kernel"
        string_val: "res2c_branch2a/kernel/optimize"
        string_val: "res2c_branch2a/kernel/optimize_1"
        string_val: "res2c_branch2b/kernel"
        string_val: "res2c_branch2b/kernel/optimize"
        string_val: "res2c_branch2b/kernel/optimize_1"
        string_val: "res3d_branch2a/kernel"
        string_val: "res3d_branch2a/kernel/optimize"
        string_val: "res3d_branch2a/kernel/optimize_1"
        string_val: "res3d_branch2b/kernel"
        string_val: "res3d_branch2b/kernel/optimize"
        string_val: "res3d_branch2b/kernel/optimize_1"
        string_val: "res4e_branch2a/kernel"
        string_val: "res4e_branch2a/kernel/optimize"
        string_val: "res4e_branch2a/kernel/optimize_1"
        string_val: "res4e_branch2b/kernel"
        string_val: "res4e_branch2b/kernel/optimize"
        string_val: "res4e_branch2b/kernel/optimize_1"
        string_val: "v/kernel"
        string_val: "v/kernel/optimize"
        string_val: "v/kernel/optimize_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 163
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "beta1_power/Read/ReadVariableOp"
  input: "beta2_power/Read/ReadVariableOp"
  input: "bn0a_branch2a/beta/Read/ReadVariableOp"
  input: "bn0a_branch2a/beta/optimize/Read/ReadVariableOp"
  input: "bn0a_branch2a/beta/optimize_1/Read/ReadVariableOp"
  input: "bn0a_branch2a/gamma/Read/ReadVariableOp"
  input: "bn0a_branch2a/gamma/optimize/Read/ReadVariableOp"
  input: "bn0a_branch2a/gamma/optimize_1/Read/ReadVariableOp"
  input: "bn0a_branch2a/moving_mean/Read/ReadVariableOp"
  input: "bn0a_branch2a/moving_variance/Read/ReadVariableOp"
  input: "bn0a_branch2b/beta/Read/ReadVariableOp"
  input: "bn0a_branch2b/beta/optimize/Read/ReadVariableOp"
  input: "bn0a_branch2b/beta/optimize_1/Read/ReadVariableOp"
  input: "bn0a_branch2b/gamma/Read/ReadVariableOp"
  input: "bn0a_branch2b/gamma/optimize/Read/ReadVariableOp"
  input: "bn0a_branch2b/gamma/optimize_1/Read/ReadVariableOp"
  input: "bn0a_branch2b/moving_mean/Read/ReadVariableOp"
  input: "bn0a_branch2b/moving_variance/Read/ReadVariableOp"
  input: "bn1b_branch2a/beta/Read/ReadVariableOp"
  input: "bn1b_branch2a/beta/optimize/Read/ReadVariableOp"
  input: "bn1b_branch2a/beta/optimize_1/Read/ReadVariableOp"
  input: "bn1b_branch2a/gamma/Read/ReadVariableOp"
  input: "bn1b_branch2a/gamma/optimize/Read/ReadVariableOp"
  input: "bn1b_branch2a/gamma/optimize_1/Read/ReadVariableOp"
  input: "bn1b_branch2a/moving_mean/Read/ReadVariableOp"
  input: "bn1b_branch2a/moving_variance/Read/ReadVariableOp"
  input: "bn1b_branch2b/beta/Read/ReadVariableOp"
  input: "bn1b_branch2b/beta/optimize/Read/ReadVariableOp"
  input: "bn1b_branch2b/beta/optimize_1/Read/ReadVariableOp"
  input: "bn1b_branch2b/gamma/Read/ReadVariableOp"
  input: "bn1b_branch2b/gamma/optimize/Read/ReadVariableOp"
  input: "bn1b_branch2b/gamma/optimize_1/Read/ReadVariableOp"
  input: "bn1b_branch2b/moving_mean/Read/ReadVariableOp"
  input: "bn1b_branch2b/moving_variance/Read/ReadVariableOp"
  input: "bn2c_branch2a/beta/Read/ReadVariableOp"
  input: "bn2c_branch2a/beta/optimize/Read/ReadVariableOp"
  input: "bn2c_branch2a/beta/optimize_1/Read/ReadVariableOp"
  input: "bn2c_branch2a/gamma/Read/ReadVariableOp"
  input: "bn2c_branch2a/gamma/optimize/Read/ReadVariableOp"
  input: "bn2c_branch2a/gamma/optimize_1/Read/ReadVariableOp"
  input: "bn2c_branch2a/moving_mean/Read/ReadVariableOp"
  input: "bn2c_branch2a/moving_variance/Read/ReadVariableOp"
  input: "bn2c_branch2b/beta/Read/ReadVariableOp"
  input: "bn2c_branch2b/beta/optimize/Read/ReadVariableOp"
  input: "bn2c_branch2b/beta/optimize_1/Read/ReadVariableOp"
  input: "bn2c_branch2b/gamma/Read/ReadVariableOp"
  input: "bn2c_branch2b/gamma/optimize/Read/ReadVariableOp"
  input: "bn2c_branch2b/gamma/optimize_1/Read/ReadVariableOp"
  input: "bn2c_branch2b/moving_mean/Read/ReadVariableOp"
  input: "bn2c_branch2b/moving_variance/Read/ReadVariableOp"
  input: "bn3d_branch2a/beta/Read/ReadVariableOp"
  input: "bn3d_branch2a/beta/optimize/Read/ReadVariableOp"
  input: "bn3d_branch2a/beta/optimize_1/Read/ReadVariableOp"
  input: "bn3d_branch2a/gamma/Read/ReadVariableOp"
  input: "bn3d_branch2a/gamma/optimize/Read/ReadVariableOp"
  input: "bn3d_branch2a/gamma/optimize_1/Read/ReadVariableOp"
  input: "bn3d_branch2a/moving_mean/Read/ReadVariableOp"
  input: "bn3d_branch2a/moving_variance/Read/ReadVariableOp"
  input: "bn3d_branch2b/beta/Read/ReadVariableOp"
  input: "bn3d_branch2b/beta/optimize/Read/ReadVariableOp"
  input: "bn3d_branch2b/beta/optimize_1/Read/ReadVariableOp"
  input: "bn3d_branch2b/gamma/Read/ReadVariableOp"
  input: "bn3d_branch2b/gamma/optimize/Read/ReadVariableOp"
  input: "bn3d_branch2b/gamma/optimize_1/Read/ReadVariableOp"
  input: "bn3d_branch2b/moving_mean/Read/ReadVariableOp"
  input: "bn3d_branch2b/moving_variance/Read/ReadVariableOp"
  input: "bn4e_branch2a/beta/Read/ReadVariableOp"
  input: "bn4e_branch2a/beta/optimize/Read/ReadVariableOp"
  input: "bn4e_branch2a/beta/optimize_1/Read/ReadVariableOp"
  input: "bn4e_branch2a/gamma/Read/ReadVariableOp"
  input: "bn4e_branch2a/gamma/optimize/Read/ReadVariableOp"
  input: "bn4e_branch2a/gamma/optimize_1/Read/ReadVariableOp"
  input: "bn4e_branch2a/moving_mean/Read/ReadVariableOp"
  input: "bn4e_branch2a/moving_variance/Read/ReadVariableOp"
  input: "bn4e_branch2b/beta/Read/ReadVariableOp"
  input: "bn4e_branch2b/beta/optimize/Read/ReadVariableOp"
  input: "bn4e_branch2b/beta/optimize_1/Read/ReadVariableOp"
  input: "bn4e_branch2b/gamma/Read/ReadVariableOp"
  input: "bn4e_branch2b/gamma/optimize/Read/ReadVariableOp"
  input: "bn4e_branch2b/gamma/optimize_1/Read/ReadVariableOp"
  input: "bn4e_branch2b/moving_mean/Read/ReadVariableOp"
  input: "bn4e_branch2b/moving_variance/Read/ReadVariableOp"
  input: "bn_pi/beta/Read/ReadVariableOp"
  input: "bn_pi/beta/optimize/Read/ReadVariableOp"
  input: "bn_pi/beta/optimize_1/Read/ReadVariableOp"
  input: "bn_pi/gamma/Read/ReadVariableOp"
  input: "bn_pi/gamma/optimize/Read/ReadVariableOp"
  input: "bn_pi/gamma/optimize_1/Read/ReadVariableOp"
  input: "bn_pi/moving_mean/Read/ReadVariableOp"
  input: "bn_pi/moving_variance/Read/ReadVariableOp"
  input: "bn_v/beta/Read/ReadVariableOp"
  input: "bn_v/beta/optimize/Read/ReadVariableOp"
  input: "bn_v/beta/optimize_1/Read/ReadVariableOp"
  input: "bn_v/gamma/Read/ReadVariableOp"
  input: "bn_v/gamma/optimize/Read/ReadVariableOp"
  input: "bn_v/gamma/optimize_1/Read/ReadVariableOp"
  input: "bn_v/moving_mean/Read/ReadVariableOp"
  input: "bn_v/moving_variance/Read/ReadVariableOp"
  input: "conv/kernel/Read/ReadVariableOp"
  input: "conv/kernel/optimize/Read/ReadVariableOp"
  input: "conv/kernel/optimize_1/Read/ReadVariableOp"
  input: "conv_bn/beta/Read/ReadVariableOp"
  input: "conv_bn/beta/optimize/Read/ReadVariableOp"
  input: "conv_bn/beta/optimize_1/Read/ReadVariableOp"
  input: "conv_bn/gamma/Read/ReadVariableOp"
  input: "conv_bn/gamma/optimize/Read/ReadVariableOp"
  input: "conv_bn/gamma/optimize_1/Read/ReadVariableOp"
  input: "conv_bn/moving_mean/Read/ReadVariableOp"
  input: "conv_bn/moving_variance/Read/ReadVariableOp"
  input: "dense/bias/Read/ReadVariableOp"
  input: "dense/bias/optimize/Read/ReadVariableOp"
  input: "dense/bias/optimize_1/Read/ReadVariableOp"
  input: "dense/kernel/Read/ReadVariableOp"
  input: "dense/kernel/optimize/Read/ReadVariableOp"
  input: "dense/kernel/optimize_1/Read/ReadVariableOp"
  input: "dense_1/bias/Read/ReadVariableOp"
  input: "dense_1/bias/optimize/Read/ReadVariableOp"
  input: "dense_1/bias/optimize_1/Read/ReadVariableOp"
  input: "dense_1/kernel/Read/ReadVariableOp"
  input: "dense_1/kernel/optimize/Read/ReadVariableOp"
  input: "dense_1/kernel/optimize_1/Read/ReadVariableOp"
  input: "dense_2/bias/Read/ReadVariableOp"
  input: "dense_2/bias/optimize/Read/ReadVariableOp"
  input: "dense_2/bias/optimize_1/Read/ReadVariableOp"
  input: "dense_2/kernel/Read/ReadVariableOp"
  input: "dense_2/kernel/optimize/Read/ReadVariableOp"
  input: "dense_2/kernel/optimize_1/Read/ReadVariableOp"
  input: "pi/kernel/Read/ReadVariableOp"
  input: "pi/kernel/optimize/Read/ReadVariableOp"
  input: "pi/kernel/optimize_1/Read/ReadVariableOp"
  input: "res0a_branch2a/kernel/Read/ReadVariableOp"
  input: "res0a_branch2a/kernel/optimize/Read/ReadVariableOp"
  input: "res0a_branch2a/kernel/optimize_1/Read/ReadVariableOp"
  input: "res0a_branch2b/kernel/Read/ReadVariableOp"
  input: "res0a_branch2b/kernel/optimize/Read/ReadVariableOp"
  input: "res0a_branch2b/kernel/optimize_1/Read/ReadVariableOp"
  input: "res1b_branch2a/kernel/Read/ReadVariableOp"
  input: "res1b_branch2a/kernel/optimize/Read/ReadVariableOp"
  input: "res1b_branch2a/kernel/optimize_1/Read/ReadVariableOp"
  input: "res1b_branch2b/kernel/Read/ReadVariableOp"
  input: "res1b_branch2b/kernel/optimize/Read/ReadVariableOp"
  input: "res1b_branch2b/kernel/optimize_1/Read/ReadVariableOp"
  input: "res2c_branch2a/kernel/Read/ReadVariableOp"
  input: "res2c_branch2a/kernel/optimize/Read/ReadVariableOp"
  input: "res2c_branch2a/kernel/optimize_1/Read/ReadVariableOp"
  input: "res2c_branch2b/kernel/Read/ReadVariableOp"
  input: "res2c_branch2b/kernel/optimize/Read/ReadVariableOp"
  input: "res2c_branch2b/kernel/optimize_1/Read/ReadVariableOp"
  input: "res3d_branch2a/kernel/Read/ReadVariableOp"
  input: "res3d_branch2a/kernel/optimize/Read/ReadVariableOp"
  input: "res3d_branch2a/kernel/optimize_1/Read/ReadVariableOp"
  input: "res3d_branch2b/kernel/Read/ReadVariableOp"
  input: "res3d_branch2b/kernel/optimize/Read/ReadVariableOp"
  input: "res3d_branch2b/kernel/optimize_1/Read/ReadVariableOp"
  input: "res4e_branch2a/kernel/Read/ReadVariableOp"
  input: "res4e_branch2a/kernel/optimize/Read/ReadVariableOp"
  input: "res4e_branch2a/kernel/optimize_1/Read/ReadVariableOp"
  input: "res4e_branch2b/kernel/Read/ReadVariableOp"
  input: "res4e_branch2b/kernel/optimize/Read/ReadVariableOp"
  input: "res4e_branch2b/kernel/optimize_1/Read/ReadVariableOp"
  input: "v/kernel/Read/ReadVariableOp"
  input: "v/kernel/optimize/Read/ReadVariableOp"
  input: "v/kernel/optimize_1/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 163
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "bn0a_branch2a/beta"
        string_val: "bn0a_branch2a/beta/optimize"
        string_val: "bn0a_branch2a/beta/optimize_1"
        string_val: "bn0a_branch2a/gamma"
        string_val: "bn0a_branch2a/gamma/optimize"
        string_val: "bn0a_branch2a/gamma/optimize_1"
        string_val: "bn0a_branch2a/moving_mean"
        string_val: "bn0a_branch2a/moving_variance"
        string_val: "bn0a_branch2b/beta"
        string_val: "bn0a_branch2b/beta/optimize"
        string_val: "bn0a_branch2b/beta/optimize_1"
        string_val: "bn0a_branch2b/gamma"
        string_val: "bn0a_branch2b/gamma/optimize"
        string_val: "bn0a_branch2b/gamma/optimize_1"
        string_val: "bn0a_branch2b/moving_mean"
        string_val: "bn0a_branch2b/moving_variance"
        string_val: "bn1b_branch2a/beta"
        string_val: "bn1b_branch2a/beta/optimize"
        string_val: "bn1b_branch2a/beta/optimize_1"
        string_val: "bn1b_branch2a/gamma"
        string_val: "bn1b_branch2a/gamma/optimize"
        string_val: "bn1b_branch2a/gamma/optimize_1"
        string_val: "bn1b_branch2a/moving_mean"
        string_val: "bn1b_branch2a/moving_variance"
        string_val: "bn1b_branch2b/beta"
        string_val: "bn1b_branch2b/beta/optimize"
        string_val: "bn1b_branch2b/beta/optimize_1"
        string_val: "bn1b_branch2b/gamma"
        string_val: "bn1b_branch2b/gamma/optimize"
        string_val: "bn1b_branch2b/gamma/optimize_1"
        string_val: "bn1b_branch2b/moving_mean"
        string_val: "bn1b_branch2b/moving_variance"
        string_val: "bn2c_branch2a/beta"
        string_val: "bn2c_branch2a/beta/optimize"
        string_val: "bn2c_branch2a/beta/optimize_1"
        string_val: "bn2c_branch2a/gamma"
        string_val: "bn2c_branch2a/gamma/optimize"
        string_val: "bn2c_branch2a/gamma/optimize_1"
        string_val: "bn2c_branch2a/moving_mean"
        string_val: "bn2c_branch2a/moving_variance"
        string_val: "bn2c_branch2b/beta"
        string_val: "bn2c_branch2b/beta/optimize"
        string_val: "bn2c_branch2b/beta/optimize_1"
        string_val: "bn2c_branch2b/gamma"
        string_val: "bn2c_branch2b/gamma/optimize"
        string_val: "bn2c_branch2b/gamma/optimize_1"
        string_val: "bn2c_branch2b/moving_mean"
        string_val: "bn2c_branch2b/moving_variance"
        string_val: "bn3d_branch2a/beta"
        string_val: "bn3d_branch2a/beta/optimize"
        string_val: "bn3d_branch2a/beta/optimize_1"
        string_val: "bn3d_branch2a/gamma"
        string_val: "bn3d_branch2a/gamma/optimize"
        string_val: "bn3d_branch2a/gamma/optimize_1"
        string_val: "bn3d_branch2a/moving_mean"
        string_val: "bn3d_branch2a/moving_variance"
        string_val: "bn3d_branch2b/beta"
        string_val: "bn3d_branch2b/beta/optimize"
        string_val: "bn3d_branch2b/beta/optimize_1"
        string_val: "bn3d_branch2b/gamma"
        string_val: "bn3d_branch2b/gamma/optimize"
        string_val: "bn3d_branch2b/gamma/optimize_1"
        string_val: "bn3d_branch2b/moving_mean"
        string_val: "bn3d_branch2b/moving_variance"
        string_val: "bn4e_branch2a/beta"
        string_val: "bn4e_branch2a/beta/optimize"
        string_val: "bn4e_branch2a/beta/optimize_1"
        string_val: "bn4e_branch2a/gamma"
        string_val: "bn4e_branch2a/gamma/optimize"
        string_val: "bn4e_branch2a/gamma/optimize_1"
        string_val: "bn4e_branch2a/moving_mean"
        string_val: "bn4e_branch2a/moving_variance"
        string_val: "bn4e_branch2b/beta"
        string_val: "bn4e_branch2b/beta/optimize"
        string_val: "bn4e_branch2b/beta/optimize_1"
        string_val: "bn4e_branch2b/gamma"
        string_val: "bn4e_branch2b/gamma/optimize"
        string_val: "bn4e_branch2b/gamma/optimize_1"
        string_val: "bn4e_branch2b/moving_mean"
        string_val: "bn4e_branch2b/moving_variance"
        string_val: "bn_pi/beta"
        string_val: "bn_pi/beta/optimize"
        string_val: "bn_pi/beta/optimize_1"
        string_val: "bn_pi/gamma"
        string_val: "bn_pi/gamma/optimize"
        string_val: "bn_pi/gamma/optimize_1"
        string_val: "bn_pi/moving_mean"
        string_val: "bn_pi/moving_variance"
        string_val: "bn_v/beta"
        string_val: "bn_v/beta/optimize"
        string_val: "bn_v/beta/optimize_1"
        string_val: "bn_v/gamma"
        string_val: "bn_v/gamma/optimize"
        string_val: "bn_v/gamma/optimize_1"
        string_val: "bn_v/moving_mean"
        string_val: "bn_v/moving_variance"
        string_val: "conv/kernel"
        string_val: "conv/kernel/optimize"
        string_val: "conv/kernel/optimize_1"
        string_val: "conv_bn/beta"
        string_val: "conv_bn/beta/optimize"
        string_val: "conv_bn/beta/optimize_1"
        string_val: "conv_bn/gamma"
        string_val: "conv_bn/gamma/optimize"
        string_val: "conv_bn/gamma/optimize_1"
        string_val: "conv_bn/moving_mean"
        string_val: "conv_bn/moving_variance"
        string_val: "dense/bias"
        string_val: "dense/bias/optimize"
        string_val: "dense/bias/optimize_1"
        string_val: "dense/kernel"
        string_val: "dense/kernel/optimize"
        string_val: "dense/kernel/optimize_1"
        string_val: "dense_1/bias"
        string_val: "dense_1/bias/optimize"
        string_val: "dense_1/bias/optimize_1"
        string_val: "dense_1/kernel"
        string_val: "dense_1/kernel/optimize"
        string_val: "dense_1/kernel/optimize_1"
        string_val: "dense_2/bias"
        string_val: "dense_2/bias/optimize"
        string_val: "dense_2/bias/optimize_1"
        string_val: "dense_2/kernel"
        string_val: "dense_2/kernel/optimize"
        string_val: "dense_2/kernel/optimize_1"
        string_val: "pi/kernel"
        string_val: "pi/kernel/optimize"
        string_val: "pi/kernel/optimize_1"
        string_val: "res0a_branch2a/kernel"
        string_val: "res0a_branch2a/kernel/optimize"
        string_val: "res0a_branch2a/kernel/optimize_1"
        string_val: "res0a_branch2b/kernel"
        string_val: "res0a_branch2b/kernel/optimize"
        string_val: "res0a_branch2b/kernel/optimize_1"
        string_val: "res1b_branch2a/kernel"
        string_val: "res1b_branch2a/kernel/optimize"
        string_val: "res1b_branch2a/kernel/optimize_1"
        string_val: "res1b_branch2b/kernel"
        string_val: "res1b_branch2b/kernel/optimize"
        string_val: "res1b_branch2b/kernel/optimize_1"
        string_val: "res2c_branch2a/kernel"
        string_val: "res2c_branch2a/kernel/optimize"
        string_val: "res2c_branch2a/kernel/optimize_1"
        string_val: "res2c_branch2b/kernel"
        string_val: "res2c_branch2b/kernel/optimize"
        string_val: "res2c_branch2b/kernel/optimize_1"
        string_val: "res3d_branch2a/kernel"
        string_val: "res3d_branch2a/kernel/optimize"
        string_val: "res3d_branch2a/kernel/optimize_1"
        string_val: "res3d_branch2b/kernel"
        string_val: "res3d_branch2b/kernel/optimize"
        string_val: "res3d_branch2b/kernel/optimize_1"
        string_val: "res4e_branch2a/kernel"
        string_val: "res4e_branch2a/kernel/optimize"
        string_val: "res4e_branch2a/kernel/optimize_1"
        string_val: "res4e_branch2b/kernel"
        string_val: "res4e_branch2b/kernel/optimize"
        string_val: "res4e_branch2b/kernel/optimize_1"
        string_val: "v/kernel"
        string_val: "v/kernel/optimize"
        string_val: "v/kernel/optimize_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 163
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/RestoreV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "save/Identity"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "save/Identity_1"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "bn0a_branch2a/beta"
  input: "save/Identity_2"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "bn0a_branch2a/beta/optimize"
  input: "save/Identity_3"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "bn0a_branch2a/beta/optimize_1"
  input: "save/Identity_4"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "bn0a_branch2a/gamma"
  input: "save/Identity_5"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "bn0a_branch2a/gamma/optimize"
  input: "save/Identity_6"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "bn0a_branch2a/gamma/optimize_1"
  input: "save/Identity_7"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "bn0a_branch2a/moving_mean"
  input: "save/Identity_8"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "bn0a_branch2a/moving_variance"
  input: "save/Identity_9"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "bn0a_branch2b/beta"
  input: "save/Identity_10"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "bn0a_branch2b/beta/optimize"
  input: "save/Identity_11"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "bn0a_branch2b/beta/optimize_1"
  input: "save/Identity_12"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "bn0a_branch2b/gamma"
  input: "save/Identity_13"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:14"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "bn0a_branch2b/gamma/optimize"
  input: "save/Identity_14"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:15"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "bn0a_branch2b/gamma/optimize_1"
  input: "save/Identity_15"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:16"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "bn0a_branch2b/moving_mean"
  input: "save/Identity_16"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:17"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "bn0a_branch2b/moving_variance"
  input: "save/Identity_17"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:18"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "bn1b_branch2a/beta"
  input: "save/Identity_18"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:19"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "bn1b_branch2a/beta/optimize"
  input: "save/Identity_19"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:20"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "bn1b_branch2a/beta/optimize_1"
  input: "save/Identity_20"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:21"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "bn1b_branch2a/gamma"
  input: "save/Identity_21"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:22"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "bn1b_branch2a/gamma/optimize"
  input: "save/Identity_22"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:23"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "bn1b_branch2a/gamma/optimize_1"
  input: "save/Identity_23"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:24"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "bn1b_branch2a/moving_mean"
  input: "save/Identity_24"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:25"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "bn1b_branch2a/moving_variance"
  input: "save/Identity_25"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:26"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "bn1b_branch2b/beta"
  input: "save/Identity_26"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:27"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "bn1b_branch2b/beta/optimize"
  input: "save/Identity_27"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:28"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "bn1b_branch2b/beta/optimize_1"
  input: "save/Identity_28"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:29"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "bn1b_branch2b/gamma"
  input: "save/Identity_29"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:30"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "bn1b_branch2b/gamma/optimize"
  input: "save/Identity_30"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:31"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "bn1b_branch2b/gamma/optimize_1"
  input: "save/Identity_31"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:32"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "bn1b_branch2b/moving_mean"
  input: "save/Identity_32"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:33"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "bn1b_branch2b/moving_variance"
  input: "save/Identity_33"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:34"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "bn2c_branch2a/beta"
  input: "save/Identity_34"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:35"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "bn2c_branch2a/beta/optimize"
  input: "save/Identity_35"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:36"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "bn2c_branch2a/beta/optimize_1"
  input: "save/Identity_36"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:37"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "bn2c_branch2a/gamma"
  input: "save/Identity_37"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:38"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "bn2c_branch2a/gamma/optimize"
  input: "save/Identity_38"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/RestoreV2:39"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "bn2c_branch2a/gamma/optimize_1"
  input: "save/Identity_39"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/RestoreV2:40"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "bn2c_branch2a/moving_mean"
  input: "save/Identity_40"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/RestoreV2:41"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "bn2c_branch2a/moving_variance"
  input: "save/Identity_41"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/RestoreV2:42"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "bn2c_branch2b/beta"
  input: "save/Identity_42"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/RestoreV2:43"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "bn2c_branch2b/beta/optimize"
  input: "save/Identity_43"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/RestoreV2:44"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "bn2c_branch2b/beta/optimize_1"
  input: "save/Identity_44"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_45"
  op: "Identity"
  input: "save/RestoreV2:45"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "bn2c_branch2b/gamma"
  input: "save/Identity_45"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_46"
  op: "Identity"
  input: "save/RestoreV2:46"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "bn2c_branch2b/gamma/optimize"
  input: "save/Identity_46"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_47"
  op: "Identity"
  input: "save/RestoreV2:47"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "bn2c_branch2b/gamma/optimize_1"
  input: "save/Identity_47"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_48"
  op: "Identity"
  input: "save/RestoreV2:48"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "bn2c_branch2b/moving_mean"
  input: "save/Identity_48"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_49"
  op: "Identity"
  input: "save/RestoreV2:49"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "bn2c_branch2b/moving_variance"
  input: "save/Identity_49"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_50"
  op: "Identity"
  input: "save/RestoreV2:50"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "bn3d_branch2a/beta"
  input: "save/Identity_50"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_51"
  op: "Identity"
  input: "save/RestoreV2:51"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "bn3d_branch2a/beta/optimize"
  input: "save/Identity_51"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_52"
  op: "Identity"
  input: "save/RestoreV2:52"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "bn3d_branch2a/beta/optimize_1"
  input: "save/Identity_52"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_53"
  op: "Identity"
  input: "save/RestoreV2:53"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "bn3d_branch2a/gamma"
  input: "save/Identity_53"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_54"
  op: "Identity"
  input: "save/RestoreV2:54"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "bn3d_branch2a/gamma/optimize"
  input: "save/Identity_54"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_55"
  op: "Identity"
  input: "save/RestoreV2:55"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "bn3d_branch2a/gamma/optimize_1"
  input: "save/Identity_55"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_56"
  op: "Identity"
  input: "save/RestoreV2:56"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "bn3d_branch2a/moving_mean"
  input: "save/Identity_56"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_57"
  op: "Identity"
  input: "save/RestoreV2:57"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "bn3d_branch2a/moving_variance"
  input: "save/Identity_57"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_58"
  op: "Identity"
  input: "save/RestoreV2:58"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "bn3d_branch2b/beta"
  input: "save/Identity_58"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_59"
  op: "Identity"
  input: "save/RestoreV2:59"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "bn3d_branch2b/beta/optimize"
  input: "save/Identity_59"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_60"
  op: "Identity"
  input: "save/RestoreV2:60"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "bn3d_branch2b/beta/optimize_1"
  input: "save/Identity_60"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_61"
  op: "Identity"
  input: "save/RestoreV2:61"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "bn3d_branch2b/gamma"
  input: "save/Identity_61"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_62"
  op: "Identity"
  input: "save/RestoreV2:62"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "bn3d_branch2b/gamma/optimize"
  input: "save/Identity_62"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_63"
  op: "Identity"
  input: "save/RestoreV2:63"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "bn3d_branch2b/gamma/optimize_1"
  input: "save/Identity_63"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_64"
  op: "Identity"
  input: "save/RestoreV2:64"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "bn3d_branch2b/moving_mean"
  input: "save/Identity_64"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_65"
  op: "Identity"
  input: "save/RestoreV2:65"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "bn3d_branch2b/moving_variance"
  input: "save/Identity_65"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_66"
  op: "Identity"
  input: "save/RestoreV2:66"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "bn4e_branch2a/beta"
  input: "save/Identity_66"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_67"
  op: "Identity"
  input: "save/RestoreV2:67"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "bn4e_branch2a/beta/optimize"
  input: "save/Identity_67"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_68"
  op: "Identity"
  input: "save/RestoreV2:68"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "bn4e_branch2a/beta/optimize_1"
  input: "save/Identity_68"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_69"
  op: "Identity"
  input: "save/RestoreV2:69"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "bn4e_branch2a/gamma"
  input: "save/Identity_69"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_70"
  op: "Identity"
  input: "save/RestoreV2:70"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "bn4e_branch2a/gamma/optimize"
  input: "save/Identity_70"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_71"
  op: "Identity"
  input: "save/RestoreV2:71"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "bn4e_branch2a/gamma/optimize_1"
  input: "save/Identity_71"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_72"
  op: "Identity"
  input: "save/RestoreV2:72"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "bn4e_branch2a/moving_mean"
  input: "save/Identity_72"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_73"
  op: "Identity"
  input: "save/RestoreV2:73"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "bn4e_branch2a/moving_variance"
  input: "save/Identity_73"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_74"
  op: "Identity"
  input: "save/RestoreV2:74"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "bn4e_branch2b/beta"
  input: "save/Identity_74"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_75"
  op: "Identity"
  input: "save/RestoreV2:75"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "bn4e_branch2b/beta/optimize"
  input: "save/Identity_75"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_76"
  op: "Identity"
  input: "save/RestoreV2:76"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "bn4e_branch2b/beta/optimize_1"
  input: "save/Identity_76"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_77"
  op: "Identity"
  input: "save/RestoreV2:77"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "bn4e_branch2b/gamma"
  input: "save/Identity_77"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_78"
  op: "Identity"
  input: "save/RestoreV2:78"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "bn4e_branch2b/gamma/optimize"
  input: "save/Identity_78"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_79"
  op: "Identity"
  input: "save/RestoreV2:79"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "bn4e_branch2b/gamma/optimize_1"
  input: "save/Identity_79"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_80"
  op: "Identity"
  input: "save/RestoreV2:80"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "bn4e_branch2b/moving_mean"
  input: "save/Identity_80"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_81"
  op: "Identity"
  input: "save/RestoreV2:81"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "bn4e_branch2b/moving_variance"
  input: "save/Identity_81"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_82"
  op: "Identity"
  input: "save/RestoreV2:82"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "bn_pi/beta"
  input: "save/Identity_82"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_83"
  op: "Identity"
  input: "save/RestoreV2:83"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "bn_pi/beta/optimize"
  input: "save/Identity_83"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_84"
  op: "Identity"
  input: "save/RestoreV2:84"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "bn_pi/beta/optimize_1"
  input: "save/Identity_84"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_85"
  op: "Identity"
  input: "save/RestoreV2:85"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "bn_pi/gamma"
  input: "save/Identity_85"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_86"
  op: "Identity"
  input: "save/RestoreV2:86"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "bn_pi/gamma/optimize"
  input: "save/Identity_86"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_87"
  op: "Identity"
  input: "save/RestoreV2:87"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "bn_pi/gamma/optimize_1"
  input: "save/Identity_87"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_88"
  op: "Identity"
  input: "save/RestoreV2:88"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "bn_pi/moving_mean"
  input: "save/Identity_88"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_89"
  op: "Identity"
  input: "save/RestoreV2:89"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "bn_pi/moving_variance"
  input: "save/Identity_89"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_90"
  op: "Identity"
  input: "save/RestoreV2:90"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "bn_v/beta"
  input: "save/Identity_90"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_91"
  op: "Identity"
  input: "save/RestoreV2:91"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "bn_v/beta/optimize"
  input: "save/Identity_91"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_92"
  op: "Identity"
  input: "save/RestoreV2:92"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "bn_v/beta/optimize_1"
  input: "save/Identity_92"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_93"
  op: "Identity"
  input: "save/RestoreV2:93"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "bn_v/gamma"
  input: "save/Identity_93"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_94"
  op: "Identity"
  input: "save/RestoreV2:94"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "bn_v/gamma/optimize"
  input: "save/Identity_94"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_95"
  op: "Identity"
  input: "save/RestoreV2:95"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "bn_v/gamma/optimize_1"
  input: "save/Identity_95"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_96"
  op: "Identity"
  input: "save/RestoreV2:96"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "bn_v/moving_mean"
  input: "save/Identity_96"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_97"
  op: "Identity"
  input: "save/RestoreV2:97"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "bn_v/moving_variance"
  input: "save/Identity_97"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_98"
  op: "Identity"
  input: "save/RestoreV2:98"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "conv/kernel"
  input: "save/Identity_98"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_99"
  op: "Identity"
  input: "save/RestoreV2:99"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "conv/kernel/optimize"
  input: "save/Identity_99"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_100"
  op: "Identity"
  input: "save/RestoreV2:100"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "conv/kernel/optimize_1"
  input: "save/Identity_100"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_101"
  op: "Identity"
  input: "save/RestoreV2:101"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "conv_bn/beta"
  input: "save/Identity_101"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_102"
  op: "Identity"
  input: "save/RestoreV2:102"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "conv_bn/beta/optimize"
  input: "save/Identity_102"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_103"
  op: "Identity"
  input: "save/RestoreV2:103"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "conv_bn/beta/optimize_1"
  input: "save/Identity_103"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_104"
  op: "Identity"
  input: "save/RestoreV2:104"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "conv_bn/gamma"
  input: "save/Identity_104"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_105"
  op: "Identity"
  input: "save/RestoreV2:105"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "conv_bn/gamma/optimize"
  input: "save/Identity_105"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_106"
  op: "Identity"
  input: "save/RestoreV2:106"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "conv_bn/gamma/optimize_1"
  input: "save/Identity_106"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_107"
  op: "Identity"
  input: "save/RestoreV2:107"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "conv_bn/moving_mean"
  input: "save/Identity_107"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_108"
  op: "Identity"
  input: "save/RestoreV2:108"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "conv_bn/moving_variance"
  input: "save/Identity_108"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_109"
  op: "Identity"
  input: "save/RestoreV2:109"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "dense/bias"
  input: "save/Identity_109"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_110"
  op: "Identity"
  input: "save/RestoreV2:110"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "dense/bias/optimize"
  input: "save/Identity_110"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_111"
  op: "Identity"
  input: "save/RestoreV2:111"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "dense/bias/optimize_1"
  input: "save/Identity_111"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_112"
  op: "Identity"
  input: "save/RestoreV2:112"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "dense/kernel"
  input: "save/Identity_112"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_113"
  op: "Identity"
  input: "save/RestoreV2:113"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "dense/kernel/optimize"
  input: "save/Identity_113"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_114"
  op: "Identity"
  input: "save/RestoreV2:114"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "dense/kernel/optimize_1"
  input: "save/Identity_114"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_115"
  op: "Identity"
  input: "save/RestoreV2:115"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "save/Identity_115"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_116"
  op: "Identity"
  input: "save/RestoreV2:116"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "dense_1/bias/optimize"
  input: "save/Identity_116"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_117"
  op: "Identity"
  input: "save/RestoreV2:117"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "dense_1/bias/optimize_1"
  input: "save/Identity_117"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_118"
  op: "Identity"
  input: "save/RestoreV2:118"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "save/Identity_118"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_119"
  op: "Identity"
  input: "save/RestoreV2:119"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "dense_1/kernel/optimize"
  input: "save/Identity_119"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_120"
  op: "Identity"
  input: "save/RestoreV2:120"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "dense_1/kernel/optimize_1"
  input: "save/Identity_120"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_121"
  op: "Identity"
  input: "save/RestoreV2:121"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "save/Identity_121"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_122"
  op: "Identity"
  input: "save/RestoreV2:122"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "dense_2/bias/optimize"
  input: "save/Identity_122"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_123"
  op: "Identity"
  input: "save/RestoreV2:123"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "dense_2/bias/optimize_1"
  input: "save/Identity_123"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_124"
  op: "Identity"
  input: "save/RestoreV2:124"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "save/Identity_124"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_125"
  op: "Identity"
  input: "save/RestoreV2:125"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "dense_2/kernel/optimize"
  input: "save/Identity_125"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_126"
  op: "Identity"
  input: "save/RestoreV2:126"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "dense_2/kernel/optimize_1"
  input: "save/Identity_126"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_127"
  op: "Identity"
  input: "save/RestoreV2:127"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "pi/kernel"
  input: "save/Identity_127"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_128"
  op: "Identity"
  input: "save/RestoreV2:128"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "pi/kernel/optimize"
  input: "save/Identity_128"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_129"
  op: "Identity"
  input: "save/RestoreV2:129"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "pi/kernel/optimize_1"
  input: "save/Identity_129"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_130"
  op: "Identity"
  input: "save/RestoreV2:130"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "res0a_branch2a/kernel"
  input: "save/Identity_130"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_131"
  op: "Identity"
  input: "save/RestoreV2:131"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "res0a_branch2a/kernel/optimize"
  input: "save/Identity_131"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_132"
  op: "Identity"
  input: "save/RestoreV2:132"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "res0a_branch2a/kernel/optimize_1"
  input: "save/Identity_132"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_133"
  op: "Identity"
  input: "save/RestoreV2:133"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "res0a_branch2b/kernel"
  input: "save/Identity_133"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_134"
  op: "Identity"
  input: "save/RestoreV2:134"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "res0a_branch2b/kernel/optimize"
  input: "save/Identity_134"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_135"
  op: "Identity"
  input: "save/RestoreV2:135"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "res0a_branch2b/kernel/optimize_1"
  input: "save/Identity_135"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_136"
  op: "Identity"
  input: "save/RestoreV2:136"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "res1b_branch2a/kernel"
  input: "save/Identity_136"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_137"
  op: "Identity"
  input: "save/RestoreV2:137"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "res1b_branch2a/kernel/optimize"
  input: "save/Identity_137"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_138"
  op: "Identity"
  input: "save/RestoreV2:138"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "res1b_branch2a/kernel/optimize_1"
  input: "save/Identity_138"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_139"
  op: "Identity"
  input: "save/RestoreV2:139"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "res1b_branch2b/kernel"
  input: "save/Identity_139"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_140"
  op: "Identity"
  input: "save/RestoreV2:140"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "res1b_branch2b/kernel/optimize"
  input: "save/Identity_140"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_141"
  op: "Identity"
  input: "save/RestoreV2:141"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "res1b_branch2b/kernel/optimize_1"
  input: "save/Identity_141"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_142"
  op: "Identity"
  input: "save/RestoreV2:142"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "res2c_branch2a/kernel"
  input: "save/Identity_142"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_143"
  op: "Identity"
  input: "save/RestoreV2:143"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "res2c_branch2a/kernel/optimize"
  input: "save/Identity_143"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_144"
  op: "Identity"
  input: "save/RestoreV2:144"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "res2c_branch2a/kernel/optimize_1"
  input: "save/Identity_144"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_145"
  op: "Identity"
  input: "save/RestoreV2:145"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "res2c_branch2b/kernel"
  input: "save/Identity_145"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_146"
  op: "Identity"
  input: "save/RestoreV2:146"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "res2c_branch2b/kernel/optimize"
  input: "save/Identity_146"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_147"
  op: "Identity"
  input: "save/RestoreV2:147"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "res2c_branch2b/kernel/optimize_1"
  input: "save/Identity_147"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_148"
  op: "Identity"
  input: "save/RestoreV2:148"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "res3d_branch2a/kernel"
  input: "save/Identity_148"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_149"
  op: "Identity"
  input: "save/RestoreV2:149"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "res3d_branch2a/kernel/optimize"
  input: "save/Identity_149"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_150"
  op: "Identity"
  input: "save/RestoreV2:150"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "res3d_branch2a/kernel/optimize_1"
  input: "save/Identity_150"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_151"
  op: "Identity"
  input: "save/RestoreV2:151"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "res3d_branch2b/kernel"
  input: "save/Identity_151"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_152"
  op: "Identity"
  input: "save/RestoreV2:152"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "res3d_branch2b/kernel/optimize"
  input: "save/Identity_152"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_153"
  op: "Identity"
  input: "save/RestoreV2:153"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "res3d_branch2b/kernel/optimize_1"
  input: "save/Identity_153"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_154"
  op: "Identity"
  input: "save/RestoreV2:154"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "res4e_branch2a/kernel"
  input: "save/Identity_154"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_155"
  op: "Identity"
  input: "save/RestoreV2:155"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "res4e_branch2a/kernel/optimize"
  input: "save/Identity_155"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_156"
  op: "Identity"
  input: "save/RestoreV2:156"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "res4e_branch2a/kernel/optimize_1"
  input: "save/Identity_156"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_157"
  op: "Identity"
  input: "save/RestoreV2:157"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "res4e_branch2b/kernel"
  input: "save/Identity_157"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_158"
  op: "Identity"
  input: "save/RestoreV2:158"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "res4e_branch2b/kernel/optimize"
  input: "save/Identity_158"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_159"
  op: "Identity"
  input: "save/RestoreV2:159"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "res4e_branch2b/kernel/optimize_1"
  input: "save/Identity_159"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_160"
  op: "Identity"
  input: "save/RestoreV2:160"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "v/kernel"
  input: "save/Identity_160"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_161"
  op: "Identity"
  input: "save/RestoreV2:161"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "v/kernel/optimize"
  input: "save/Identity_161"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_162"
  op: "Identity"
  input: "save/RestoreV2:162"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_162"
  op: "AssignVariableOp"
  input: "v/kernel/optimize_1"
  input: "save/Identity_162"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_100"
  input: "^save/AssignVariableOp_101"
  input: "^save/AssignVariableOp_102"
  input: "^save/AssignVariableOp_103"
  input: "^save/AssignVariableOp_104"
  input: "^save/AssignVariableOp_105"
  input: "^save/AssignVariableOp_106"
  input: "^save/AssignVariableOp_107"
  input: "^save/AssignVariableOp_108"
  input: "^save/AssignVariableOp_109"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_110"
  input: "^save/AssignVariableOp_111"
  input: "^save/AssignVariableOp_112"
  input: "^save/AssignVariableOp_113"
  input: "^save/AssignVariableOp_114"
  input: "^save/AssignVariableOp_115"
  input: "^save/AssignVariableOp_116"
  input: "^save/AssignVariableOp_117"
  input: "^save/AssignVariableOp_118"
  input: "^save/AssignVariableOp_119"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_120"
  input: "^save/AssignVariableOp_121"
  input: "^save/AssignVariableOp_122"
  input: "^save/AssignVariableOp_123"
  input: "^save/AssignVariableOp_124"
  input: "^save/AssignVariableOp_125"
  input: "^save/AssignVariableOp_126"
  input: "^save/AssignVariableOp_127"
  input: "^save/AssignVariableOp_128"
  input: "^save/AssignVariableOp_129"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_130"
  input: "^save/AssignVariableOp_131"
  input: "^save/AssignVariableOp_132"
  input: "^save/AssignVariableOp_133"
  input: "^save/AssignVariableOp_134"
  input: "^save/AssignVariableOp_135"
  input: "^save/AssignVariableOp_136"
  input: "^save/AssignVariableOp_137"
  input: "^save/AssignVariableOp_138"
  input: "^save/AssignVariableOp_139"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_140"
  input: "^save/AssignVariableOp_141"
  input: "^save/AssignVariableOp_142"
  input: "^save/AssignVariableOp_143"
  input: "^save/AssignVariableOp_144"
  input: "^save/AssignVariableOp_145"
  input: "^save/AssignVariableOp_146"
  input: "^save/AssignVariableOp_147"
  input: "^save/AssignVariableOp_148"
  input: "^save/AssignVariableOp_149"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_150"
  input: "^save/AssignVariableOp_151"
  input: "^save/AssignVariableOp_152"
  input: "^save/AssignVariableOp_153"
  input: "^save/AssignVariableOp_154"
  input: "^save/AssignVariableOp_155"
  input: "^save/AssignVariableOp_156"
  input: "^save/AssignVariableOp_157"
  input: "^save/AssignVariableOp_158"
  input: "^save/AssignVariableOp_159"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_160"
  input: "^save/AssignVariableOp_161"
  input: "^save/AssignVariableOp_162"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_38"
  input: "^save/AssignVariableOp_39"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_40"
  input: "^save/AssignVariableOp_41"
  input: "^save/AssignVariableOp_42"
  input: "^save/AssignVariableOp_43"
  input: "^save/AssignVariableOp_44"
  input: "^save/AssignVariableOp_45"
  input: "^save/AssignVariableOp_46"
  input: "^save/AssignVariableOp_47"
  input: "^save/AssignVariableOp_48"
  input: "^save/AssignVariableOp_49"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_50"
  input: "^save/AssignVariableOp_51"
  input: "^save/AssignVariableOp_52"
  input: "^save/AssignVariableOp_53"
  input: "^save/AssignVariableOp_54"
  input: "^save/AssignVariableOp_55"
  input: "^save/AssignVariableOp_56"
  input: "^save/AssignVariableOp_57"
  input: "^save/AssignVariableOp_58"
  input: "^save/AssignVariableOp_59"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_60"
  input: "^save/AssignVariableOp_61"
  input: "^save/AssignVariableOp_62"
  input: "^save/AssignVariableOp_63"
  input: "^save/AssignVariableOp_64"
  input: "^save/AssignVariableOp_65"
  input: "^save/AssignVariableOp_66"
  input: "^save/AssignVariableOp_67"
  input: "^save/AssignVariableOp_68"
  input: "^save/AssignVariableOp_69"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_70"
  input: "^save/AssignVariableOp_71"
  input: "^save/AssignVariableOp_72"
  input: "^save/AssignVariableOp_73"
  input: "^save/AssignVariableOp_74"
  input: "^save/AssignVariableOp_75"
  input: "^save/AssignVariableOp_76"
  input: "^save/AssignVariableOp_77"
  input: "^save/AssignVariableOp_78"
  input: "^save/AssignVariableOp_79"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_80"
  input: "^save/AssignVariableOp_81"
  input: "^save/AssignVariableOp_82"
  input: "^save/AssignVariableOp_83"
  input: "^save/AssignVariableOp_84"
  input: "^save/AssignVariableOp_85"
  input: "^save/AssignVariableOp_86"
  input: "^save/AssignVariableOp_87"
  input: "^save/AssignVariableOp_88"
  input: "^save/AssignVariableOp_89"
  input: "^save/AssignVariableOp_9"
  input: "^save/AssignVariableOp_90"
  input: "^save/AssignVariableOp_91"
  input: "^save/AssignVariableOp_92"
  input: "^save/AssignVariableOp_93"
  input: "^save/AssignVariableOp_94"
  input: "^save/AssignVariableOp_95"
  input: "^save/AssignVariableOp_96"
  input: "^save/AssignVariableOp_97"
  input: "^save/AssignVariableOp_98"
  input: "^save/AssignVariableOp_99"
  device: "/device:GPU:0"
}
library {
  function {
    signature {
      name: "bn2c_branch2b_cond_true_754"
      input_arg {
        name: "readvariableop_bn2c_branch2b_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn2c_branch2b_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn2c_branch2b_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn2c_branch2b_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res2c_branch2b_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn2c_branch2b_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn2c_branch2b_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn2c_branch2b_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn2c_branch2b_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res2c_branch2b_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn_v_cond_false_1499"
      input_arg {
        name: "readvariableop_bn_v_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn_v_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn_v_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn_v_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_v_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn_v_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn_v_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn_v_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn_v_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_v_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn2c_branch2a_cond_1_true_703"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9900000095367432
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn4e_branch2a_cond_true_1116"
      input_arg {
        name: "readvariableop_bn4e_branch2a_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn4e_branch2a_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn4e_branch2a_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn4e_branch2a_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res4e_branch2a_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn4e_branch2a_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn4e_branch2a_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn4e_branch2a_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn4e_branch2a_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res4e_branch2a_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn0a_branch2b_cond_true_272_grad_3275"
      input_arg {
        name: "gradients_grad_ys_0_gradients_add_grad_tuple_control_dependency"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_91"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_92"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_93"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_94"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_95"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_96"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_97"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_98"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_99"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res0a_branch2b_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_add_grad_tuple_control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_91"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_92"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_93"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_94"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_95"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_96"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_97"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_98"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_99"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res0a_branch2b_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn2c_branch2b_cond_1_false_824"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn4e_branch2b_cond_1_false_1306"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn2c_branch2a_cond_true_634_grad_2848"
      input_arg {
        name: "gradients_grad_ys_0_gradients_relu_5_grad_relugrad"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_64"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_65"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_66"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_67"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_68"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_69"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_70"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_71"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_72"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res2c_branch2a_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_relu_5_grad_relugrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_64"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_65"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_66"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_67"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_68"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_69"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_70"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_71"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_72"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res2c_branch2a_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn2c_branch2a_cond_1_false_704"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn_v_cond_true_1498"
      input_arg {
        name: "readvariableop_bn_v_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn_v_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn_v_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn_v_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_v_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn_v_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn_v_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn_v_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn_v_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_v_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn2c_branch2a_cond_false_635"
      input_arg {
        name: "readvariableop_bn2c_branch2a_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn2c_branch2a_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn2c_branch2a_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn2c_branch2a_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res2c_branch2a_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn2c_branch2a_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn2c_branch2a_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn2c_branch2a_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn2c_branch2a_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res2c_branch2a_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn_v_cond_true_1498_grad_2005"
      input_arg {
        name: "gradients_grad_ys_0_gradients_relu_12_grad_relugrad"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_10"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_11"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_12"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_13"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_14"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_15"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_16"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_17"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_18"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_v_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_relu_12_grad_relugrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_12"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_13"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_14"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_15"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_16"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_17"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_18"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_v_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn4e_branch2a_cond_1_false_1186"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn3d_branch2b_cond_false_996"
      input_arg {
        name: "readvariableop_bn3d_branch2b_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn3d_branch2b_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn3d_branch2b_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn3d_branch2b_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res3d_branch2b_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn3d_branch2b_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn3d_branch2b_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn3d_branch2b_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn3d_branch2b_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res3d_branch2b_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn4e_branch2b_cond_false_1237_grad_2201"
      input_arg {
        name: "gradients_grad_ys_0_gradients_add_4_grad_tuple_control_dependency"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_19"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_20"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_21"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_22"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_23"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_24"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_25"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_26"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_27"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res4e_branch2b_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_add_4_grad_tuple_control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_21"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_22"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_23"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_24"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_25"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_26"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_27"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res4e_branch2b_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn4e_branch2b_cond_true_1236_grad_2151"
      input_arg {
        name: "gradients_grad_ys_0_gradients_add_4_grad_tuple_control_dependency"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_19"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_20"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_21"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_22"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_23"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_24"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_25"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_26"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_27"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res4e_branch2b_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_add_4_grad_tuple_control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_21"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_22"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_23"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_24"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_25"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_26"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_27"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res4e_branch2b_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn3d_branch2b_cond_true_995_grad_2432"
      input_arg {
        name: "gradients_grad_ys_0_gradients_add_3_grad_tuple_control_dependency"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_37"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_38"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_39"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_40"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_41"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_42"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_43"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_44"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_45"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res3d_branch2b_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_add_3_grad_tuple_control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_38"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_39"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_40"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_41"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_42"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_43"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_44"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_45"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res3d_branch2b_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn2c_branch2a_cond_true_634"
      input_arg {
        name: "readvariableop_bn2c_branch2a_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn2c_branch2a_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn2c_branch2a_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn2c_branch2a_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res2c_branch2a_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn2c_branch2a_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn2c_branch2a_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn2c_branch2a_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn2c_branch2a_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res2c_branch2a_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn1b_branch2a_cond_1_true_462"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9900000095367432
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn3d_branch2a_cond_true_875"
      input_arg {
        name: "readvariableop_bn3d_branch2a_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn3d_branch2a_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn3d_branch2a_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn3d_branch2a_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res3d_branch2a_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn3d_branch2a_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn3d_branch2a_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn3d_branch2a_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn3d_branch2a_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res3d_branch2a_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn4e_branch2a_cond_false_1117_grad_2336"
      input_arg {
        name: "gradients_grad_ys_0_gradients_relu_9_grad_relugrad"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_28"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_29"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_30"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_31"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_32"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_33"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_34"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_35"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_36"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res4e_branch2a_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_relu_9_grad_relugrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_30"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_31"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_32"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_33"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_34"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_35"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_36"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res4e_branch2a_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn4e_branch2b_cond_false_1237"
      input_arg {
        name: "readvariableop_bn4e_branch2b_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn4e_branch2b_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn4e_branch2b_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn4e_branch2b_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res4e_branch2b_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn4e_branch2b_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn4e_branch2b_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn4e_branch2b_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn4e_branch2b_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res4e_branch2b_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn1b_branch2a_cond_false_394"
      input_arg {
        name: "readvariableop_bn1b_branch2a_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn1b_branch2a_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn1b_branch2a_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn1b_branch2a_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res1b_branch2a_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn1b_branch2a_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn1b_branch2a_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn1b_branch2a_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn1b_branch2a_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res1b_branch2a_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "conv_bn_cond_true_32"
      input_arg {
        name: "readvariableop_conv_bn_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_conv_bn_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_conv_bn_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_conv_bn_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_conv_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_conv_bn_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_conv_bn_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_conv_bn_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_conv_bn_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_conv_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NCHW"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn0a_branch2b_cond_1_false_342"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn2c_branch2b_cond_false_755"
      input_arg {
        name: "readvariableop_bn2c_branch2b_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn2c_branch2b_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn2c_branch2b_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn2c_branch2b_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res2c_branch2b_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn2c_branch2b_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn2c_branch2b_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn2c_branch2b_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn2c_branch2b_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res2c_branch2b_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn3d_branch2a_cond_true_875_grad_2567"
      input_arg {
        name: "gradients_grad_ys_0_gradients_relu_7_grad_relugrad"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_46"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_47"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_48"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_49"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_50"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_51"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_52"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_53"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_54"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res3d_branch2a_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_relu_7_grad_relugrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_46"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_47"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_48"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_49"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_50"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_51"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_52"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_53"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_54"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res3d_branch2a_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn3d_branch2a_cond_false_876_grad_2617"
      input_arg {
        name: "gradients_grad_ys_0_gradients_relu_7_grad_relugrad"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_46"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_47"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_48"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_49"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_50"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_51"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_52"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_53"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_54"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res3d_branch2a_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_relu_7_grad_relugrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_46"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_47"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_48"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_49"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_50"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_51"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_52"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_53"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_54"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res3d_branch2a_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn0a_branch2a_cond_1_true_221"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9900000095367432
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn2c_branch2b_cond_true_754_grad_2713"
      input_arg {
        name: "gradients_grad_ys_0_gradients_add_2_grad_tuple_control_dependency"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_55"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_56"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_57"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_58"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_59"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_60"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_61"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_62"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_63"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res2c_branch2b_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_add_2_grad_tuple_control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_55"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_56"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_57"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_58"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_59"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_60"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_61"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_62"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_63"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res2c_branch2b_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn4e_branch2a_cond_1_true_1185"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9900000095367432
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn0a_branch2b_cond_false_273"
      input_arg {
        name: "readvariableop_bn0a_branch2b_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn0a_branch2b_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn0a_branch2b_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn0a_branch2b_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res0a_branch2b_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn0a_branch2b_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn0a_branch2b_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn0a_branch2b_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn0a_branch2b_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res0a_branch2b_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn2c_branch2a_cond_false_635_grad_2898"
      input_arg {
        name: "gradients_grad_ys_0_gradients_relu_5_grad_relugrad"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_64"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_65"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_66"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_67"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_68"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_69"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_70"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_71"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_72"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res2c_branch2a_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_relu_5_grad_relugrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_64"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_65"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_66"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_67"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_68"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_69"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_70"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_71"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_72"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res2c_branch2a_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn3d_branch2b_cond_1_true_1064"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9900000095367432
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn3d_branch2b_cond_false_996_grad_2482"
      input_arg {
        name: "gradients_grad_ys_0_gradients_add_3_grad_tuple_control_dependency"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_37"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_38"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_39"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_40"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_41"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_42"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_43"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_44"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_45"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res3d_branch2b_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_add_3_grad_tuple_control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_38"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_39"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_40"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_41"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_42"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_43"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_44"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_45"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res3d_branch2b_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "conv_bn_cond_true_32_grad_3546"
      input_arg {
        name: "gradients_grad_ys_0_gradients_relu_grad_relugrad"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_109"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_110"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_111"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_112"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_113"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_114"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_115"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_116"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_117"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_conv_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_relu_grad_relugrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_109"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_110"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_111"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_112"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_113"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_114"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_115"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_116"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_117"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_conv_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NCHW"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 7
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 7
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn1b_branch2a_cond_1_false_463"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn4e_branch2b_cond_true_1236"
      input_arg {
        name: "readvariableop_bn4e_branch2b_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn4e_branch2b_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn4e_branch2b_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn4e_branch2b_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res4e_branch2b_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn4e_branch2b_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn4e_branch2b_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn4e_branch2b_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn4e_branch2b_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res4e_branch2b_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "conv_bn_cond_false_33"
      input_arg {
        name: "readvariableop_conv_bn_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_conv_bn_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_conv_bn_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_conv_bn_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_conv_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_conv_bn_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_conv_bn_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_conv_bn_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_conv_bn_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_conv_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NCHW"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn_pi_cond_true_1357"
      input_arg {
        name: "readvariableop_bn_pi_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn_pi_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn_pi_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn_pi_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_pi_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn_pi_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn_pi_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn_pi_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn_pi_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_pi_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn4e_branch2a_cond_false_1117"
      input_arg {
        name: "readvariableop_bn4e_branch2a_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn4e_branch2a_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn4e_branch2a_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn4e_branch2a_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res4e_branch2a_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn4e_branch2a_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn4e_branch2a_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn4e_branch2a_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn4e_branch2a_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res4e_branch2a_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "conv_bn_cond_1_false_102"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "conv_bn_cond_false_33_grad_3596"
      input_arg {
        name: "gradients_grad_ys_0_gradients_relu_grad_relugrad"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_109"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_110"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_111"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_112"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_113"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_114"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_115"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_116"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_117"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_transpose_fusedbatchnormv3_conv_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_relu_grad_relugrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_109"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_110"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_111"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_112"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_113"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_114"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_115"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_116"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_117"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/transpose/perm"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/transpose/perm"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/transpose"
      op: "Transpose"
      input: "gradients_fusedbatchnormv3_grad_transpose_fusedbatchnormv3_conv_conv2d"
      input: "gradients/FusedBatchNormV3_grad/transpose/perm:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/transpose"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/transpose_1/perm"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/transpose_1/perm"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/transpose_1"
      op: "Transpose"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/FusedBatchNormV3_grad/transpose_1/perm:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/transpose_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/FusedBatchNormV3_grad/transpose_1:y:0"
      input: "gradients/FusedBatchNormV3_grad/transpose:y:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/transpose_2/perm"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\003\000\000\000\001\000\000\000\002\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/transpose_2/perm"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/transpose_2"
      op: "Transpose"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      input: "gradients/FusedBatchNormV3_grad/transpose_2/perm:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/transpose_2"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/transpose_2:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 7
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 7
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn_v_cond_1_true_1567"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9900000095367432
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn1b_branch2a_cond_false_394_grad_3179"
      input_arg {
        name: "gradients_grad_ys_0_gradients_relu_3_grad_relugrad"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_82"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_83"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_84"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_85"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_86"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_87"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_88"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_89"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_90"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res1b_branch2a_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_relu_3_grad_relugrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_82"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_83"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_84"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_85"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_86"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_87"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_88"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_89"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_90"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res1b_branch2a_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn1b_branch2b_cond_true_513_grad_2994"
      input_arg {
        name: "gradients_grad_ys_0_gradients_add_1_grad_tuple_control_dependency"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_73"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_74"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_75"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_76"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_77"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_78"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_79"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_80"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_81"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res1b_branch2b_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_add_1_grad_tuple_control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_73"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_74"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_75"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_76"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_77"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_78"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_79"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_80"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_81"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res1b_branch2b_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn1b_branch2b_cond_1_true_582"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9900000095367432
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn4e_branch2a_cond_true_1116_grad_2286"
      input_arg {
        name: "gradients_grad_ys_0_gradients_relu_9_grad_relugrad"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_28"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_29"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_30"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_31"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_32"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_33"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_34"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_35"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_36"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res4e_branch2a_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_relu_9_grad_relugrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_30"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_31"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_32"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_33"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_34"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_35"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_36"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res4e_branch2a_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "conv_bn_cond_1_true_101"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9900000095367432
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn0a_branch2a_cond_false_153"
      input_arg {
        name: "readvariableop_bn0a_branch2a_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn0a_branch2a_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn0a_branch2a_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn0a_branch2a_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res0a_branch2a_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn0a_branch2a_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn0a_branch2a_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn0a_branch2a_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn0a_branch2a_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res0a_branch2a_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn_pi_cond_false_1358_grad_1918"
      input_arg {
        name: "gradients_grad_ys_0_gradients_relu_11_grad_relugrad"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_1"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_7"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_8"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_9"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_pi_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_relu_11_grad_relugrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_3"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_4"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_5"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_6"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_7"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_8"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_9"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_pi_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn1b_branch2b_cond_false_514"
      input_arg {
        name: "readvariableop_bn1b_branch2b_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn1b_branch2b_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn1b_branch2b_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn1b_branch2b_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res1b_branch2b_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn1b_branch2b_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn1b_branch2b_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn1b_branch2b_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn1b_branch2b_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res1b_branch2b_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn1b_branch2b_cond_true_513"
      input_arg {
        name: "readvariableop_bn1b_branch2b_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn1b_branch2b_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn1b_branch2b_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn1b_branch2b_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res1b_branch2b_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn1b_branch2b_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn1b_branch2b_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn1b_branch2b_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn1b_branch2b_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res1b_branch2b_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn0a_branch2b_cond_true_272"
      input_arg {
        name: "readvariableop_bn0a_branch2b_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn0a_branch2b_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn0a_branch2b_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn0a_branch2b_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res0a_branch2b_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn0a_branch2b_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn0a_branch2b_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn0a_branch2b_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn0a_branch2b_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res0a_branch2b_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn_pi_cond_false_1358"
      input_arg {
        name: "readvariableop_bn_pi_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn_pi_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn_pi_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn_pi_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_pi_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn_pi_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn_pi_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn_pi_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn_pi_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_pi_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn0a_branch2b_cond_1_true_341"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9900000095367432
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn_v_cond_1_false_1568"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn1b_branch2b_cond_1_false_583"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn3d_branch2b_cond_1_false_1065"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn0a_branch2b_cond_false_273_grad_3325"
      input_arg {
        name: "gradients_grad_ys_0_gradients_add_grad_tuple_control_dependency"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_91"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_92"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_93"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_94"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_95"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_96"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_97"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_98"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_99"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res0a_branch2b_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_add_grad_tuple_control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_91"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_92"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_93"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_94"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_95"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_96"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_97"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_98"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_99"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res0a_branch2b_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn0a_branch2a_cond_true_152_grad_3410"
      input_arg {
        name: "gradients_grad_ys_0_gradients_relu_1_grad_relugrad"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_100"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_101"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_102"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_103"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_104"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_105"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_106"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_107"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_108"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res0a_branch2a_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_relu_1_grad_relugrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_100"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_101"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_102"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_103"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_104"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_105"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_106"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_107"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_108"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res0a_branch2a_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn3d_branch2a_cond_false_876"
      input_arg {
        name: "readvariableop_bn3d_branch2a_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn3d_branch2a_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn3d_branch2a_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn3d_branch2a_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res3d_branch2a_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn3d_branch2a_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn3d_branch2a_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn3d_branch2a_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn3d_branch2a_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res3d_branch2a_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn4e_branch2b_cond_1_true_1305"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9900000095367432
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn_pi_cond_1_true_1426"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9900000095367432
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn2c_branch2b_cond_false_755_grad_2763"
      input_arg {
        name: "gradients_grad_ys_0_gradients_add_2_grad_tuple_control_dependency"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_55"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_56"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_57"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_58"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_59"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_60"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_61"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_62"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_63"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res2c_branch2b_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_add_2_grad_tuple_control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_55"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_56"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_57"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_58"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_59"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_60"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_61"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_62"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_63"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res2c_branch2b_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn_pi_cond_1_false_1427"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn1b_branch2b_cond_false_514_grad_3044"
      input_arg {
        name: "gradients_grad_ys_0_gradients_add_1_grad_tuple_control_dependency"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_73"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_74"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_75"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_76"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_77"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_78"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_79"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_80"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_81"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res1b_branch2b_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_add_1_grad_tuple_control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_73"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_74"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_75"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_76"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_77"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_78"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_79"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_80"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_81"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res1b_branch2b_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn3d_branch2a_cond_1_true_944"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9900000095367432
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn3d_branch2b_cond_true_995"
      input_arg {
        name: "readvariableop_bn3d_branch2b_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn3d_branch2b_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn3d_branch2b_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn3d_branch2b_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res3d_branch2b_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn3d_branch2b_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn3d_branch2b_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn3d_branch2b_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn3d_branch2b_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res3d_branch2b_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn0a_branch2a_cond_1_false_222"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn1b_branch2a_cond_true_393_grad_3129"
      input_arg {
        name: "gradients_grad_ys_0_gradients_relu_3_grad_relugrad"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_82"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_83"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_84"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_85"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_86"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_87"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_88"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_89"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_90"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res1b_branch2a_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_relu_3_grad_relugrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_82"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_83"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_84"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_85"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_86"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_87"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_88"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_89"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_90"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res1b_branch2a_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn_v_cond_false_1499_grad_2055"
      input_arg {
        name: "gradients_grad_ys_0_gradients_relu_12_grad_relugrad"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_10"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_11"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_12"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_13"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_14"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_15"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_16"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_17"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_18"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_v_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_relu_12_grad_relugrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_12"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_13"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_14"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_15"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_16"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_17"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_18"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_v_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn0a_branch2a_cond_false_153_grad_3460"
      input_arg {
        name: "gradients_grad_ys_0_gradients_relu_1_grad_relugrad"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_100"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_101"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_102"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_103"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_104"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_105"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_106"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_107"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_108"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res0a_branch2a_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_relu_1_grad_relugrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_100"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_101"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_102"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_103"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_104"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_105"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_106"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_107"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_108"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_readvariableop_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_res0a_branch2a_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn0a_branch2a_cond_true_152"
      input_arg {
        name: "readvariableop_bn0a_branch2a_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn0a_branch2a_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn0a_branch2a_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn0a_branch2a_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res0a_branch2a_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn0a_branch2a_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn0a_branch2a_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn0a_branch2a_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn0a_branch2a_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res0a_branch2a_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn3d_branch2a_cond_1_false_945"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn2c_branch2b_cond_1_true_823"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9900000095367432
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "bn_pi_cond_true_1357_grad_1868"
      input_arg {
        name: "gradients_grad_ys_0_gradients_relu_11_grad_relugrad"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_1_gradients_zeros_like_1"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_2_gradients_zeros_like_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_grad_ys_3_gradients_zeros_like_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_4_gradients_zeros_like_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_5_gradients_zeros_like_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_6_gradients_zeros_like_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_7_gradients_zeros_like_7"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_8_gradients_zeros_like_8"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_grad_ys_9_gradients_zeros_like_9"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_pi_conv2d"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_relu_11_grad_relugrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "gradients_grad_ys_1_gradients_zeros_like_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "gradients_grad_ys_2_gradients_zeros_like_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "gradients_grad_ys_3_gradients_zeros_like_3"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "gradients_grad_ys_4_gradients_zeros_like_4"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "gradients_grad_ys_5_gradients_zeros_like_5"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "gradients_grad_ys_6_gradients_zeros_like_6"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "gradients_grad_ys_7_gradients_zeros_like_7"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "gradients_grad_ys_8_gradients_zeros_like_8"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "gradients_grad_ys_9_gradients_zeros_like_9"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_1_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_2_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_3_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_4_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_5_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients/grad_ys_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/OptionalFromValue_6_grad/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_readvariableop"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_1"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      op: "OptionalGetValue"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_2"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3"
      }
    }
    node_def {
      name: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      op: "FusedBatchNormGradV3"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_fusedbatchnormv3_grad_fusedbatchnormgradv3_fusedbatchnormv3_pi_conv2d"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_1:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_2:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3/OptionalGetValue_3:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/OptionalFromValue_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:scale_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/OptionalFromValue_1_grad/OptionalGetValue:components:0"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:offset_backprop:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/OptionalFromValue_1_grad/OptionalGetValue"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/OptionalFromValue_2_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/OptionalFromValue_3_grad/OptionalGetValue:components:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/FusedBatchNormV3_grad/FusedBatchNormGradV3:x_backprop:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "bn1b_branch2a_cond_true_393"
      input_arg {
        name: "readvariableop_bn1b_branch2a_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_bn1b_branch2a_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_bn1b_branch2a_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_bn1b_branch2a_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_res1b_branch2a_conv2d"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_bn1b_branch2a_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_bn1b_branch2a_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_bn1b_branch2a_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_bn1b_branch2a_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_res1b_branch2a_conv2d"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 7
                }
                dim {
                  size: 6
                }
                dim {
                  size: 256
                }
              }
            }
          }
        }
      }
    }
  }
}
versions {
  producer: 175
  min_consumer: 12
}
